; ModuleID = 'bzip2.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.spec_fd_t = type { i32, i32, i32, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.EState = type { %struct.bz_stream*, i32, i32, i32, i32*, i32*, i32*, i32, i32*, i8*, i16*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [258 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [258 x [4 x i32]] }
%struct.bz_stream = type { i8*, i32, i32, i32, i8*, i32, i32, i32, i8*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8* }
%struct.UInt64 = type { [8 x i8] }
%struct.DState = type { %struct.bz_stream*, i32, i8, i32, i8, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [256 x i32], i32, [257 x i32], [257 x i32], i32*, i16*, i8*, i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [256 x i8], [4096 x i8], [16 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32* }
%struct.bzFile = type { i32, [5000 x i8], i32, i8, %struct.bz_stream, i32, i8 }

@dbglvl = dso_local global i32 4, align 4
@seedi = dso_local global i64 0, align 8
@spec_fd = dso_local global [3 x %struct.spec_fd_t] zeroinitializer, align 16
@.str = private unnamed_addr constant [11 x i8] c"spec_init\0A\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"spec_init: Error mallocing memory!\0A\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"Creating Chunks\0A\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"Creating Chunk %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Filling input file\0A\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.5 = private unnamed_addr constant [24 x i8] c"Can't open file %s: %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"Error reading from %s: %s\0A\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"Duplicating %d bytes\0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"spec_read: %d, %p, %d = \00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"spec_read: fd=%d, > MAX_SPEC_FD!\0A\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"EOF\0A\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"spec_fread: %p, (%d x %d) fd %d =\00", align 1
@.str.13 = private unnamed_addr constant [35 x i8] c"spec_fread: fd=%d, > MAX_SPEC_FD!\0A\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"spec_getc: %d = \00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"spec_ungetc: %d = \00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"spec_ungetc: pos %d <= 0\0A\00", align 1
@.str.17 = private unnamed_addr constant [72 x i8] c"spec_ungetc: can't unget something that wasn't what was in the buffer!\0A\00", align 1
@.str.18 = private unnamed_addr constant [26 x i8] c"spec_write: %d, %p, %d = \00", align 1
@.str.19 = private unnamed_addr constant [35 x i8] c"spec_write: fd=%d, > MAX_SPEC_FD!\0A\00", align 1
@.str.20 = private unnamed_addr constant [31 x i8] c"spec_fwrite: %p, %d, %d, %d = \00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"spec_fwrite: fd=%d, > MAX_SPEC_FD!\0A\00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"spec_putc: %d, %d = \00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"input.combined\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"Loading Input Data\0A\00", align 1
@.str.25 = private unnamed_addr constant [31 x i8] c"Input data %d bytes in length\0A\00", align 1
@.str.26 = private unnamed_addr constant [31 x i8] c"main: Error mallocing memory!\0A\00", align 1
@.str.27 = private unnamed_addr constant [34 x i8] c"Compressing Input Data, level %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [36 x i8] c"Compressed data %d bytes in length\0A\00", align 1
@.str.29 = private unnamed_addr constant [20 x i8] c"Uncompressing Data\0A\00", align 1
@.str.30 = private unnamed_addr constant [38 x i8] c"Uncompressed data %d bytes in length\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"Tested %dMB buffer: Miscompared!!\0A\00", align 1
@.str.32 = private unnamed_addr constant [38 x i8] c"Uncompressed data compared correctly\0A\00", align 1
@.str.33 = private unnamed_addr constant [25 x i8] c"Tested %dMB buffer: OK!\0A\00", align 1
@.str.34 = private unnamed_addr constant [38 x i8] c"      %d work, %d block, ratio %5.2f\0A\00", align 1
@.str.1.35 = private unnamed_addr constant [54 x i8] c"    too repetitive; using fallback sorting algorithm\0A\00", align 1
@.str.6.36 = private unnamed_addr constant [34 x i8] c"        main sort initialise ...\0A\00", align 1
@.str.2.37 = private unnamed_addr constant [28 x i8] c"        bucket sorting ...\0A\00", align 1
@.str.7.38 = private unnamed_addr constant [48 x i8] c"        qsort [0x%x, 0x%x]   done %d   this %d\0A\00", align 1
@.str.8.39 = private unnamed_addr constant [44 x i8] c"        %d pointers, %d sorted, %d scanned\0A\00", align 1
@incs = internal global [14 x i32] [i32 1, i32 4, i32 13, i32 40, i32 121, i32 364, i32 1093, i32 3280, i32 9841, i32 29524, i32 88573, i32 265720, i32 797161, i32 2391484], align 16
@.str.3.40 = private unnamed_addr constant [23 x i8] c"        depth %6d has \00", align 1
@.str.4.41 = private unnamed_addr constant [24 x i8] c"%6d unresolved strings\0A\00", align 1
@.str.5.42 = private unnamed_addr constant [34 x i8] c"        reconstructing block ...\0A\00", align 1
@blockSize100k = dso_local global i32 0, align 4
@verbosity = dso_local global i32 0, align 4
@workFactor = dso_local global i32 0, align 4
@outputHandleJustInCase = dso_local global i32 0, align 4
@smallMode = dso_local global i8 0, align 1
@forceOverwrite = dso_local global i8 0, align 1
@noisy = dso_local global i8 0, align 1
@progName = dso_local global i8* null, align 8
@inName = dso_local global [1034 x i8] zeroinitializer, align 16
@keepInputFiles = dso_local global i8 0, align 1
@deleteOutputOnInterrupt = dso_local global i8 0, align 1
@testFailsExist = dso_local global i8 0, align 1
@unzFailsExist = dso_local global i8 0, align 1
@numFileNames = dso_local global i32 0, align 4
@numFilesProcessed = dso_local global i32 0, align 4
@exitValue = dso_local global i32 0, align 4
@opMode = dso_local global i32 0, align 4
@srcMode = dso_local global i32 0, align 4
@longestFileName = dso_local global i32 0, align 4
@outName = dso_local global [1034 x i8] zeroinitializer, align 16
@tmpName = dso_local global [1034 x i8] zeroinitializer, align 16
@progNameReally = dso_local global [1034 x i8] zeroinitializer, align 16
@.str.53 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1.54 = private unnamed_addr constant [22 x i8] c" no data compressed.\0A\00", align 1
@.str.2.55 = private unnamed_addr constant [57 x i8] c"%6.3f:1, %6.3f bits/byte, %5.2f%% saved, %s in, %s out.\0A\00", align 1
@.str.3.56 = private unnamed_addr constant [26 x i8] c"compress:unexpected error\00", align 1
@.str.4.57 = private unnamed_addr constant [13 x i8] c"compress:end\00", align 1
@.str.10.58 = private unnamed_addr constant [148 x i8] c"\0A%s: PANIC -- internal consistency error:\0A\09%s\0A\09This is probably a BUG, but it may be in your COMPILER.  Please do not bother\0A\09the original author.\0A\00", align 1
@.str.11.59 = private unnamed_addr constant [36 x i8] c"\09Input file = %s, output file = %s\0A\00", align 1
@.str.15.60 = private unnamed_addr constant [65 x i8] c"\0A%s: I/O or other error, bailing out.  Possible reason follows.\0A\00", align 1
@.str.16.61 = private unnamed_addr constant [38 x i8] c"\0A%s: couldn't allocate enough memory\0A\00", align 1
@.str.17.62 = private unnamed_addr constant [236 x i8] c"bzip2: I'm not configured correctly for this platform!\0A\09I require Int32, Int16 and Char to have sizes\0A\09of 4, 2 and 1 bytes to run properly, and they don't.\0A\09Probably you can fix this by defining them correctly,\0A\09and recompiling.  Bye!\0A\00", align 1
@.str.5.65 = private unnamed_addr constant [27 x i8] c"decompress:bzReadGetUnused\00", align 1
@.str.6.66 = private unnamed_addr constant [6 x i8] c"\0A    \00", align 1
@.str.7.67 = private unnamed_addr constant [45 x i8] c"\0A%s: %s: trailing garbage after EOF ignored\0A\00", align 1
@.str.8.68 = private unnamed_addr constant [28 x i8] c"decompress:unexpected error\00", align 1
@.str.9.69 = private unnamed_addr constant [15 x i8] c"decompress:end\00", align 1
@.str.14.70 = private unnamed_addr constant [95 x i8] c"\0A%s: Compressed file ends unexpectedly;\0A\09perhaps it is corrupted?  *Possible* reason follows.\0A\00", align 1
@.str.13.71 = private unnamed_addr constant [241 x i8] c"\0AIt is possible that the compressed file(s) have become corrupted.\0AYou can use the -tvv option to test integrity of such files.\0A\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@.str.12.72 = private unnamed_addr constant [47 x i8] c"\0A%s: Data integrity error when decompressing.\0A\00", align 1
@.str.75 = private unnamed_addr constant [269 x i8] c"\0A\0Abzip2/libbzip2: internal error number %d.\0AThis may be a bug in bzip2/libbzip2, %s.\0AIt may also be a bug in your compiler.  Please do not bother the\0Aoriginal author of bzip2 with a bug report for this.  He\0Adoesn't know anything about bzip2 as it appears in CPU2006.\0A\0A\00", align 1
@.str.1.76 = private unnamed_addr constant [1057 x i8] c"\0A*** A special note about internal error number 1007 ***\0A\0AExperience suggests that a common cause of i.e. 1007\0Ais unreliable memory or other hardware.  The 1007 assertion\0Ajust happens to cross-check the results of huge numbers of\0Amemory reads/writes, and so acts (unintendedly) as a stress\0Atest of your memory system.\0A\0AI suggest the following: try compressing the file again,\0Apossibly monitoring progress in detail with the -vv flag.\0A\0A* If the error cannot be reproduced, and/or happens at different\0A  points in compression, you may have a flaky memory system.\0A  Try a memory-test program.  I have used Memtest86\0A  (www.memtest86.com).  At the time of writing it is free (GPLd).\0A  Memtest86 tests memory much more thorougly than your BIOSs\0A  power-on test, and may find failures that the BIOS doesn't.\0A\0A* If the error can be repeatably reproduced, this is a bug in\0A  bzip2, and I would very much like to hear about it.  Please\0A  let me know, and, ideally, save a copy of the file causing the\0A  problem -- without which I will be unable to investigate it.\0A\0A\00", align 1
@.str.5.77 = private unnamed_addr constant [19 x i8] c"1.0.3, 15-Feb-2005\00", align 1
@.str.2.78 = private unnamed_addr constant [18 x i8] c" {0x%08x, 0x%08x}\00", align 1
@.str.3.79 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.4.80 = private unnamed_addr constant [55 x i8] c"\0A    combined CRCs: stored = 0x%08x, computed = 0x%08x\00", align 1
@.str.6.96 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.7.97 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.8.98 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.9.99 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@bzerrorstrings = internal global [16 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.100, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11.101, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12.102, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13.103, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.104, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15.105, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.106, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.107, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18.108, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19.109, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.110, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.110, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.110, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.110, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.110, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.110, i32 0, i32 0)], align 16
@.str.10.100 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.11.101 = private unnamed_addr constant [15 x i8] c"SEQUENCE_ERROR\00", align 1
@.str.12.102 = private unnamed_addr constant [12 x i8] c"PARAM_ERROR\00", align 1
@.str.13.103 = private unnamed_addr constant [10 x i8] c"MEM_ERROR\00", align 1
@.str.14.104 = private unnamed_addr constant [11 x i8] c"DATA_ERROR\00", align 1
@.str.15.105 = private unnamed_addr constant [17 x i8] c"DATA_ERROR_MAGIC\00", align 1
@.str.16.106 = private unnamed_addr constant [9 x i8] c"IO_ERROR\00", align 1
@.str.17.107 = private unnamed_addr constant [15 x i8] c"UNEXPECTED_EOF\00", align 1
@.str.18.108 = private unnamed_addr constant [13 x i8] c"OUTBUFF_FULL\00", align 1
@.str.19.109 = private unnamed_addr constant [13 x i8] c"CONFIG_ERROR\00", align 1
@.str.20.110 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.113 = private unnamed_addr constant [62 x i8] c"    block %d: crc = 0x%08x, combined CRC = 0x%08x, size = %d\0A\00", align 1
@.str.1.114 = private unnamed_addr constant [36 x i8] c"    final combined CRC = 0x%08x\0A   \00", align 1
@.str.2.115 = private unnamed_addr constant [64 x i8] c"      %d in block, %d after MTF & 1-2 coding, %d+2 syms in use\0A\00", align 1
@.str.3.116 = private unnamed_addr constant [59 x i8] c"      initial group %d, [%d .. %d], has %d syms (%4.1f%%)\0A\00", align 1
@.str.4.117 = private unnamed_addr constant [41 x i8] c"      pass %d: size is %d, grp uses are \00", align 1
@.str.5.118 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.6.119 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7.120 = private unnamed_addr constant [26 x i8] c"      bytes: mapping %d, \00", align 1
@.str.8.121 = private unnamed_addr constant [15 x i8] c"selectors %d, \00", align 1
@.str.9.122 = private unnamed_addr constant [18 x i8] c"code lengths %d, \00", align 1
@.str.10.123 = private unnamed_addr constant [10 x i8] c"codes %d\0A\00", align 1
@BZ2_crc32Table = dso_local global [256 x i32] [i32 0, i32 79764919, i32 159529838, i32 222504665, i32 319059676, i32 398814059, i32 445009330, i32 507990021, i32 638119352, i32 583659535, i32 797628118, i32 726387553, i32 890018660, i32 835552979, i32 1015980042, i32 944750013, i32 1276238704, i32 1221641927, i32 1167319070, i32 1095957929, i32 1595256236, i32 1540665371, i32 1452775106, i32 1381403509, i32 1780037320, i32 1859660671, i32 1671105958, i32 1733955601, i32 2031960084, i32 2111593891, i32 1889500026, i32 1952343757, i32 -1742489888, i32 -1662866601, i32 -1851683442, i32 -1788833735, i32 -1960329156, i32 -1880695413, i32 -2103051438, i32 -2040207643, i32 -1104454824, i32 -1159051537, i32 -1213636554, i32 -1284997759, i32 -1389417084, i32 -1444007885, i32 -1532160278, i32 -1603531939, i32 -734892656, i32 -789352409, i32 -575645954, i32 -646886583, i32 -952755380, i32 -1007220997, i32 -827056094, i32 -898286187, i32 -231047128, i32 -151282273, i32 -71779514, i32 -8804623, i32 -515967244, i32 -436212925, i32 -390279782, i32 -327299027, i32 881225847, i32 809987520, i32 1023691545, i32 969234094, i32 662832811, i32 591600412, i32 771767749, i32 717299826, i32 311336399, i32 374308984, i32 453813921, i32 533576470, i32 25881363, i32 88864420, i32 134795389, i32 214552010, i32 2023205639, i32 2086057648, i32 1897238633, i32 1976864222, i32 1804852699, i32 1867694188, i32 1645340341, i32 1724971778, i32 1587496639, i32 1516133128, i32 1461550545, i32 1406951526, i32 1302016099, i32 1230646740, i32 1142491917, i32 1087903418, i32 -1398421865, i32 -1469785312, i32 -1524105735, i32 -1578704818, i32 -1079922613, i32 -1151291908, i32 -1239184603, i32 -1293773166, i32 -1968362705, i32 -1905510760, i32 -2094067647, i32 -2014441994, i32 -1716953613, i32 -1654112188, i32 -1876203875, i32 -1796572374, i32 -525066777, i32 -462094256, i32 -382327159, i32 -302564546, i32 -206542021, i32 -143559028, i32 -97365931, i32 -17609246, i32 -960696225, i32 -1031934488, i32 -817968335, i32 -872425850, i32 -709327229, i32 -780559564, i32 -600130067, i32 -654598054, i32 1762451694, i32 1842216281, i32 1619975040, i32 1682949687, i32 2047383090, i32 2127137669, i32 1938468188, i32 2001449195, i32 1325665622, i32 1271206113, i32 1183200824, i32 1111960463, i32 1543535498, i32 1489069629, i32 1434599652, i32 1363369299, i32 622672798, i32 568075817, i32 748617968, i32 677256519, i32 907627842, i32 853037301, i32 1067152940, i32 995781531, i32 51762726, i32 131386257, i32 177728840, i32 240578815, i32 269590778, i32 349224269, i32 429104020, i32 491947555, i32 -248556018, i32 -168932423, i32 -122852000, i32 -60002089, i32 -500490030, i32 -420856475, i32 -341238852, i32 -278395381, i32 -685261898, i32 -739858943, i32 -559578920, i32 -630940305, i32 -1004286614, i32 -1058877219, i32 -845023740, i32 -916395085, i32 -1119974018, i32 -1174433591, i32 -1262701040, i32 -1333941337, i32 -1371866206, i32 -1426332139, i32 -1481064244, i32 -1552294533, i32 -1690935098, i32 -1611170447, i32 -1833673816, i32 -1770699233, i32 -2009983462, i32 -1930228819, i32 -2119160460, i32 -2056179517, i32 1569362073, i32 1498123566, i32 1409854455, i32 1355396672, i32 1317987909, i32 1246755826, i32 1192025387, i32 1137557660, i32 2072149281, i32 2135122070, i32 1912620623, i32 1992383480, i32 1753615357, i32 1816598090, i32 1627664531, i32 1707420964, i32 295390185, i32 358241886, i32 404320391, i32 483945776, i32 43990325, i32 106832002, i32 186451547, i32 266083308, i32 932423249, i32 861060070, i32 1041341759, i32 986742920, i32 613929101, i32 542559546, i32 756411363, i32 701822548, i32 -978770311, i32 -1050133554, i32 -869589737, i32 -924188512, i32 -693284699, i32 -764654318, i32 -550540341, i32 -605129092, i32 -475935807, i32 -413084042, i32 -366743377, i32 -287118056, i32 -257573603, i32 -194731862, i32 -114850189, i32 -35218492, i32 -1984365303, i32 -1921392450, i32 -2143631769, i32 -2063868976, i32 -1698919467, i32 -1635936670, i32 -1824608069, i32 -1744851700, i32 -1347415887, i32 -1418654458, i32 -1506661409, i32 -1561119128, i32 -1129027987, i32 -1200260134, i32 -1254728445, i32 -1309196108], align 16
@.str.128 = private unnamed_addr constant [20 x i8] c"\0A    [%d: huff+mtf \00", align 1
@.str.1.129 = private unnamed_addr constant [7 x i8] c"rt+rld\00", align 1
@BZ2_rNums = dso_local global [512 x i32] [i32 619, i32 720, i32 127, i32 481, i32 931, i32 816, i32 813, i32 233, i32 566, i32 247, i32 985, i32 724, i32 205, i32 454, i32 863, i32 491, i32 741, i32 242, i32 949, i32 214, i32 733, i32 859, i32 335, i32 708, i32 621, i32 574, i32 73, i32 654, i32 730, i32 472, i32 419, i32 436, i32 278, i32 496, i32 867, i32 210, i32 399, i32 680, i32 480, i32 51, i32 878, i32 465, i32 811, i32 169, i32 869, i32 675, i32 611, i32 697, i32 867, i32 561, i32 862, i32 687, i32 507, i32 283, i32 482, i32 129, i32 807, i32 591, i32 733, i32 623, i32 150, i32 238, i32 59, i32 379, i32 684, i32 877, i32 625, i32 169, i32 643, i32 105, i32 170, i32 607, i32 520, i32 932, i32 727, i32 476, i32 693, i32 425, i32 174, i32 647, i32 73, i32 122, i32 335, i32 530, i32 442, i32 853, i32 695, i32 249, i32 445, i32 515, i32 909, i32 545, i32 703, i32 919, i32 874, i32 474, i32 882, i32 500, i32 594, i32 612, i32 641, i32 801, i32 220, i32 162, i32 819, i32 984, i32 589, i32 513, i32 495, i32 799, i32 161, i32 604, i32 958, i32 533, i32 221, i32 400, i32 386, i32 867, i32 600, i32 782, i32 382, i32 596, i32 414, i32 171, i32 516, i32 375, i32 682, i32 485, i32 911, i32 276, i32 98, i32 553, i32 163, i32 354, i32 666, i32 933, i32 424, i32 341, i32 533, i32 870, i32 227, i32 730, i32 475, i32 186, i32 263, i32 647, i32 537, i32 686, i32 600, i32 224, i32 469, i32 68, i32 770, i32 919, i32 190, i32 373, i32 294, i32 822, i32 808, i32 206, i32 184, i32 943, i32 795, i32 384, i32 383, i32 461, i32 404, i32 758, i32 839, i32 887, i32 715, i32 67, i32 618, i32 276, i32 204, i32 918, i32 873, i32 777, i32 604, i32 560, i32 951, i32 160, i32 578, i32 722, i32 79, i32 804, i32 96, i32 409, i32 713, i32 940, i32 652, i32 934, i32 970, i32 447, i32 318, i32 353, i32 859, i32 672, i32 112, i32 785, i32 645, i32 863, i32 803, i32 350, i32 139, i32 93, i32 354, i32 99, i32 820, i32 908, i32 609, i32 772, i32 154, i32 274, i32 580, i32 184, i32 79, i32 626, i32 630, i32 742, i32 653, i32 282, i32 762, i32 623, i32 680, i32 81, i32 927, i32 626, i32 789, i32 125, i32 411, i32 521, i32 938, i32 300, i32 821, i32 78, i32 343, i32 175, i32 128, i32 250, i32 170, i32 774, i32 972, i32 275, i32 999, i32 639, i32 495, i32 78, i32 352, i32 126, i32 857, i32 956, i32 358, i32 619, i32 580, i32 124, i32 737, i32 594, i32 701, i32 612, i32 669, i32 112, i32 134, i32 694, i32 363, i32 992, i32 809, i32 743, i32 168, i32 974, i32 944, i32 375, i32 748, i32 52, i32 600, i32 747, i32 642, i32 182, i32 862, i32 81, i32 344, i32 805, i32 988, i32 739, i32 511, i32 655, i32 814, i32 334, i32 249, i32 515, i32 897, i32 955, i32 664, i32 981, i32 649, i32 113, i32 974, i32 459, i32 893, i32 228, i32 433, i32 837, i32 553, i32 268, i32 926, i32 240, i32 102, i32 654, i32 459, i32 51, i32 686, i32 754, i32 806, i32 760, i32 493, i32 403, i32 415, i32 394, i32 687, i32 700, i32 946, i32 670, i32 656, i32 610, i32 738, i32 392, i32 760, i32 799, i32 887, i32 653, i32 978, i32 321, i32 576, i32 617, i32 626, i32 502, i32 894, i32 679, i32 243, i32 440, i32 680, i32 879, i32 194, i32 572, i32 640, i32 724, i32 926, i32 56, i32 204, i32 700, i32 707, i32 151, i32 457, i32 449, i32 797, i32 195, i32 791, i32 558, i32 945, i32 679, i32 297, i32 59, i32 87, i32 824, i32 713, i32 663, i32 412, i32 693, i32 342, i32 606, i32 134, i32 108, i32 571, i32 364, i32 631, i32 212, i32 174, i32 643, i32 304, i32 329, i32 343, i32 97, i32 430, i32 751, i32 497, i32 314, i32 983, i32 374, i32 822, i32 928, i32 140, i32 206, i32 73, i32 263, i32 980, i32 736, i32 876, i32 478, i32 430, i32 305, i32 170, i32 514, i32 364, i32 692, i32 829, i32 82, i32 855, i32 953, i32 676, i32 246, i32 369, i32 970, i32 294, i32 750, i32 807, i32 827, i32 150, i32 790, i32 288, i32 923, i32 804, i32 378, i32 215, i32 828, i32 592, i32 281, i32 565, i32 555, i32 710, i32 82, i32 896, i32 831, i32 547, i32 261, i32 524, i32 462, i32 293, i32 465, i32 502, i32 56, i32 661, i32 821, i32 976, i32 991, i32 658, i32 869, i32 905, i32 758, i32 745, i32 193, i32 768, i32 550, i32 608, i32 933, i32 378, i32 286, i32 215, i32 979, i32 792, i32 961, i32 61, i32 688, i32 793, i32 644, i32 986, i32 403, i32 106, i32 366, i32 905, i32 644, i32 372, i32 567, i32 466, i32 434, i32 645, i32 210, i32 389, i32 550, i32 919, i32 135, i32 780, i32 773, i32 635, i32 389, i32 707, i32 100, i32 626, i32 958, i32 165, i32 504, i32 920, i32 176, i32 193, i32 713, i32 857, i32 265, i32 203, i32 50, i32 668, i32 108, i32 645, i32 990, i32 626, i32 197, i32 510, i32 357, i32 358, i32 850, i32 858, i32 364, i32 936, i32 638], align 16

; Function Attrs: noinline nounwind uwtable
define dso_local double @ran() #0 {
entry:
  %i = load i64, i64* @seedi, align 8
  %div = sdiv i64 %i, 127773
  %i1 = load i64, i64* @seedi, align 8
  %rem = srem i64 %i1, 127773
  %mul = mul nsw i64 16807, %rem
  %mul1 = mul nsw i64 2836, %div
  %sub = sub nsw i64 %mul, %mul1
  %cmp = icmp sgt i64 %sub, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i64 %sub, i64* @seedi, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %add = add nsw i64 %sub, 2147483647
  store i64 %add, i64* @seedi, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %i2 = load i64, i64* @seedi, align 8
  %conv = sitofp i64 %i2 to float
  %div2 = fdiv float %conv, 0x41E0000000000000
  %conv3 = fpext float %div2 to double
  ret double %conv3
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @spec_init() #0 {
entry:
  %i = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 3, %i
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc29, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc29 ]
  %cmp1 = icmp slt i32 %i.0, 3
  br i1 %cmp1, label %for.body, label %for.end30

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %limit2 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 0
  %i1 = load i32, i32* %limit2, align 8
  %idxprom3 = sext i32 %i.0 to i64
  %arrayidx4 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom3
  %i2 = bitcast %struct.spec_fd_t* %arrayidx4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %i2, i8 0, i64 24, i1 false)
  %idxprom5 = sext i32 %i.0 to i64
  %arrayidx6 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom5
  %limit7 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6, i32 0, i32 0
  store i32 %i1, i32* %limit7, align 8
  %add = add nsw i32 %i1, 1048576
  %conv = sext i32 %add to i64
  %call8 = call noalias i8* @malloc(i64 %conv) #8
  %idxprom9 = sext i32 %i.0 to i64
  %arrayidx10 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom9
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx10, i32 0, i32 3
  store i8* %call8, i8** %buf, align 8
  %idxprom11 = sext i32 %i.0 to i64
  %arrayidx12 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom11
  %buf13 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx12, i32 0, i32 3
  %i3 = load i8*, i8** %buf13, align 8
  %cmp14 = icmp eq i8* %i3, null
  br i1 %cmp14, label %if.then16, label %if.end18

if.then16:                                        ; preds = %for.body
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0))
  call void @exit(i32 0) #9
  unreachable

if.end18:                                         ; preds = %for.body
  br label %for.cond19

for.cond19:                                       ; preds = %for.inc, %if.end18
  %j.0 = phi i32 [ 0, %if.end18 ], [ %add28, %for.inc ]
  %cmp20 = icmp slt i32 %j.0, %i1
  br i1 %cmp20, label %for.body22, label %for.end

for.body22:                                       ; preds = %for.cond19
  %idxprom23 = sext i32 %i.0 to i64
  %arrayidx24 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom23
  %buf25 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx24, i32 0, i32 3
  %i4 = load i8*, i8** %buf25, align 8
  %idxprom26 = sext i32 %j.0 to i64
  %arrayidx27 = getelementptr inbounds i8, i8* %i4, i64 %idxprom26
  store i8 0, i8* %arrayidx27, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body22
  %add28 = add nsw i32 %j.0, 1024
  br label %for.cond19

for.end:                                          ; preds = %for.cond19
  br label %for.inc29

for.inc29:                                        ; preds = %for.end
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end30:                                        ; preds = %for.cond
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #3

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @spec_random_load(i32 %fd) #0 {
entry:
  %random_text = alloca [32 x [131072 x i8]], align 16
  %i = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %i
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc13, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc14, %for.inc13 ]
  %cmp1 = icmp slt i32 %i.0, 32
  br i1 %cmp1, label %for.body, label %for.end15

for.body:                                         ; preds = %for.cond
  %i1 = load i32, i32* @dbglvl, align 4
  %cmp2 = icmp slt i32 5, %i1
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %for.body
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 %i.0)
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %for.body
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %if.end5
  %j.0 = phi i32 [ 0, %if.end5 ], [ %inc, %for.inc ]
  %cmp7 = icmp slt i32 %j.0, 131072
  br i1 %cmp7, label %for.body8, label %for.end

for.body8:                                        ; preds = %for.cond6
  %call9 = call double @ran()
  %mul = fmul double %call9, 2.560000e+02
  %conv = fptosi double %mul to i32
  %conv10 = trunc i32 %conv to i8
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [32 x [131072 x i8]], [32 x [131072 x i8]]* %random_text, i64 0, i64 %idxprom
  %idxprom11 = sext i32 %j.0 to i64
  %arrayidx12 = getelementptr inbounds [131072 x i8], [131072 x i8]* %arrayidx, i64 0, i64 %idxprom11
  store i8 %conv10, i8* %arrayidx12, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body8
  %inc = add nsw i32 %j.0, 1
  br label %for.cond6

for.end:                                          ; preds = %for.cond6
  br label %for.inc13

for.inc13:                                        ; preds = %for.end
  %inc14 = add nsw i32 %i.0, 1
  br label %for.cond

for.end15:                                        ; preds = %for.cond
  %i2 = load i32, i32* @dbglvl, align 4
  %cmp16 = icmp slt i32 4, %i2
  br i1 %cmp16, label %if.then18, label %if.end20

if.then18:                                        ; preds = %for.end15
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0))
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %for.end15
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc34, %if.end20
  %i.1 = phi i32 [ 0, %if.end20 ], [ %add, %for.inc34 ]
  %idxprom22 = sext i32 %fd to i64
  %arrayidx23 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom22
  %limit = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx23, i32 0, i32 0
  %i3 = load i32, i32* %limit, align 8
  %cmp24 = icmp slt i32 %i.1, %i3
  br i1 %cmp24, label %for.body26, label %for.end35

for.body26:                                       ; preds = %for.cond21
  %idxprom27 = sext i32 %fd to i64
  %arrayidx28 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom27
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx28, i32 0, i32 3
  %i4 = load i8*, i8** %buf, align 8
  %idx.ext = sext i32 %i.1 to i64
  %add.ptr = getelementptr inbounds i8, i8* %i4, i64 %idx.ext
  %call29 = call double @ran()
  %mul30 = fmul double %call29, 3.200000e+01
  %conv31 = fptosi double %mul30 to i32
  %idxprom32 = sext i32 %conv31 to i64
  %arrayidx33 = getelementptr inbounds [32 x [131072 x i8]], [32 x [131072 x i8]]* %random_text, i64 0, i64 %idxprom32
  %arraydecay = getelementptr inbounds [131072 x i8], [131072 x i8]* %arrayidx33, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 16 %arraydecay, i64 131072, i1 false)
  br label %for.inc34

for.inc34:                                        ; preds = %for.body26
  %add = add nsw i32 %i.1, 131072
  br label %for.cond21

for.end35:                                        ; preds = %for.cond21
  %idxprom36 = sext i32 %fd to i64
  %arrayidx37 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom36
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx37, i32 0, i32 1
  store i32 1048576, i32* %len, align 4
  ret i32 0
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @spec_load(i32 %num, i8* %filename, i32 %size) #0 {
entry:
  %call = call i32 (i8*, i32, ...) @open(i8* %filename, i32 0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %i = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call1 = call i32* @__errno_location() #10
  %i1 = load i32, i32* %call1, align 4
  %call2 = call i8* @strerror(i32 %i1) #8
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i8* %filename, i8* %call2)
  call void @exit(i32 0) #9
  unreachable

if.end:                                           ; preds = %entry
  %idxprom = sext i32 %num to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 1
  store i32 0, i32* %len, align 4
  %idxprom4 = sext i32 %num to i64
  %arrayidx5 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom4
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx5, i32 0, i32 2
  store i32 0, i32* %pos, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %add24, %for.inc ]
  %cmp6 = icmp slt i32 %i.0, %size
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom7 = sext i32 %num to i64
  %arrayidx8 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom7
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8, i32 0, i32 3
  %i2 = load i8*, i8** %buf, align 8
  %idx.ext = sext i32 %i.0 to i64
  %add.ptr = getelementptr inbounds i8, i8* %i2, i64 %idx.ext
  %call9 = call i64 @read(i32 %call, i8* %add.ptr, i64 131072)
  %conv = trunc i64 %call9 to i32
  %cmp10 = icmp eq i32 %conv, 0
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %for.body
  br label %for.end

if.end13:                                         ; preds = %for.body
  %cmp14 = icmp slt i32 %conv, 0
  br i1 %cmp14, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.end13
  %i3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call17 = call i32* @__errno_location() #10
  %i4 = load i32, i32* %call17, align 4
  %call18 = call i8* @strerror(i32 %i4) #8
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8* %filename, i8* %call18)
  call void @exit(i32 0) #9
  unreachable

if.end20:                                         ; preds = %if.end13
  %idxprom21 = sext i32 %num to i64
  %arrayidx22 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom21
  %len23 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx22, i32 0, i32 1
  %i5 = load i32, i32* %len23, align 4
  %add = add nsw i32 %i5, %conv
  store i32 %add, i32* %len23, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end20
  %add24 = add nsw i32 %i.0, %conv
  br label %for.cond

for.end:                                          ; preds = %if.then12, %for.cond
  %call25 = call i32 @close(i32 %call)
  br label %while.cond

while.cond:                                       ; preds = %if.end48, %for.end
  %idxprom26 = sext i32 %num to i64
  %arrayidx27 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom26
  %len28 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx27, i32 0, i32 1
  %i6 = load i32, i32* %len28, align 4
  %cmp29 = icmp slt i32 %i6, %size
  br i1 %cmp29, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %idxprom31 = sext i32 %num to i64
  %arrayidx32 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom31
  %len33 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx32, i32 0, i32 1
  %i7 = load i32, i32* %len33, align 4
  %sub = sub nsw i32 %size, %i7
  %idxprom34 = sext i32 %num to i64
  %arrayidx35 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom34
  %len36 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx35, i32 0, i32 1
  %i8 = load i32, i32* %len36, align 4
  %cmp37 = icmp sgt i32 %sub, %i8
  br i1 %cmp37, label %if.then39, label %if.end43

if.then39:                                        ; preds = %while.body
  %idxprom40 = sext i32 %num to i64
  %arrayidx41 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom40
  %len42 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx41, i32 0, i32 1
  %i9 = load i32, i32* %len42, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %while.body
  %tmp.0 = phi i32 [ %i9, %if.then39 ], [ %sub, %while.body ]
  %i10 = load i32, i32* @dbglvl, align 4
  %cmp44 = icmp slt i32 3, %i10
  br i1 %cmp44, label %if.then46, label %if.end48

if.then46:                                        ; preds = %if.end43
  %call47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i32 %tmp.0)
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %if.end43
  %idxprom49 = sext i32 %num to i64
  %arrayidx50 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom49
  %buf51 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx50, i32 0, i32 3
  %i11 = load i8*, i8** %buf51, align 8
  %idxprom52 = sext i32 %num to i64
  %arrayidx53 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom52
  %len54 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx53, i32 0, i32 1
  %i12 = load i32, i32* %len54, align 4
  %idx.ext55 = sext i32 %i12 to i64
  %add.ptr56 = getelementptr inbounds i8, i8* %i11, i64 %idx.ext55
  %idxprom57 = sext i32 %num to i64
  %arrayidx58 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom57
  %buf59 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx58, i32 0, i32 3
  %i13 = load i8*, i8** %buf59, align 8
  %conv60 = sext i32 %tmp.0 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr56, i8* align 1 %i13, i64 %conv60, i1 false)
  %idxprom61 = sext i32 %num to i64
  %arrayidx62 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom61
  %len63 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx62, i32 0, i32 1
  %i14 = load i32, i32* %len63, align 4
  %add64 = add nsw i32 %i14, %tmp.0
  store i32 %add64, i32* %len63, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret i32 0
}

declare dso_local i32 @open(i8*, i32, ...) #1

; Function Attrs: nounwind readnone willreturn
declare dso_local i32* @__errno_location() #6

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) #3

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare dso_local i64 @read(i32, i8*, i64) #1

declare dso_local i32 @close(i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @spec_read(i32 %fd, i8* %buf, i32 %size) #0 {
entry:
  %i = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %i
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i32 %fd, i8* %buf, i32 %size)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %i1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i32 %fd)
  call void @exit(i32 0) #9
  unreachable

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 2
  %i2 = load i32, i32* %pos, align 8
  %idxprom5 = sext i32 %fd to i64
  %arrayidx6 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom5
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6, i32 0, i32 1
  %i3 = load i32, i32* %len, align 4
  %cmp7 = icmp sge i32 %i2, %i3
  br i1 %cmp7, label %if.then8, label %if.end13

if.then8:                                         ; preds = %if.end4
  %i4 = load i32, i32* @dbglvl, align 4
  %cmp9 = icmp slt i32 4, %i4
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.then8
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0))
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.then8
  br label %return

if.end13:                                         ; preds = %if.end4
  %idxprom14 = sext i32 %fd to i64
  %arrayidx15 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom14
  %pos16 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15, i32 0, i32 2
  %i5 = load i32, i32* %pos16, align 8
  %add = add nsw i32 %i5, %size
  %idxprom17 = sext i32 %fd to i64
  %arrayidx18 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom17
  %len19 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx18, i32 0, i32 1
  %i6 = load i32, i32* %len19, align 4
  %cmp20 = icmp sge i32 %add, %i6
  br i1 %cmp20, label %if.then21, label %if.else

if.then21:                                        ; preds = %if.end13
  %idxprom22 = sext i32 %fd to i64
  %arrayidx23 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom22
  %len24 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx23, i32 0, i32 1
  %i7 = load i32, i32* %len24, align 4
  %idxprom25 = sext i32 %fd to i64
  %arrayidx26 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom25
  %pos27 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx26, i32 0, i32 2
  %i8 = load i32, i32* %pos27, align 8
  %sub = sub nsw i32 %i7, %i8
  br label %if.end28

if.else:                                          ; preds = %if.end13
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then21
  %rc.0 = phi i32 [ %sub, %if.then21 ], [ %size, %if.else ]
  %idxprom29 = sext i32 %fd to i64
  %arrayidx30 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom29
  %buf31 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx30, i32 0, i32 3
  %i9 = load i8*, i8** %buf31, align 8
  %idxprom32 = sext i32 %fd to i64
  %arrayidx33 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom32
  %pos34 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx33, i32 0, i32 2
  %i10 = load i32, i32* %pos34, align 8
  %idxprom35 = sext i32 %i10 to i64
  %arrayidx36 = getelementptr inbounds i8, i8* %i9, i64 %idxprom35
  %conv = sext i32 %rc.0 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %buf, i8* align 1 %arrayidx36, i64 %conv, i1 false)
  %idxprom37 = sext i32 %fd to i64
  %arrayidx38 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom37
  %pos39 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx38, i32 0, i32 2
  %i11 = load i32, i32* %pos39, align 8
  %add40 = add nsw i32 %i11, %rc.0
  store i32 %add40, i32* %pos39, align 8
  %i12 = load i32, i32* @dbglvl, align 4
  %cmp41 = icmp slt i32 4, %i12
  br i1 %cmp41, label %if.then43, label %if.end45

if.then43:                                        ; preds = %if.end28
  %call44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i32 %rc.0)
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.end28
  br label %return

return:                                           ; preds = %if.end45, %if.end12
  %retval.0 = phi i32 [ -1, %if.end12 ], [ %rc.0, %if.end45 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @spec_fread(i8* %buf, i32 %size, i32 %num, i32 %fd) #0 {
entry:
  %i = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %i
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0), i8* %buf, i32 %size, i32 %num, i32 %fd)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %i1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0), i32 %fd)
  call void @exit(i32 0) #9
  unreachable

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 2
  %i2 = load i32, i32* %pos, align 8
  %idxprom5 = sext i32 %fd to i64
  %arrayidx6 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom5
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6, i32 0, i32 1
  %i3 = load i32, i32* %len, align 4
  %cmp7 = icmp sge i32 %i2, %i3
  br i1 %cmp7, label %if.then8, label %if.end13

if.then8:                                         ; preds = %if.end4
  %i4 = load i32, i32* @dbglvl, align 4
  %cmp9 = icmp slt i32 4, %i4
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.then8
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0))
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.then8
  br label %return

if.end13:                                         ; preds = %if.end4
  %idxprom14 = sext i32 %fd to i64
  %arrayidx15 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom14
  %pos16 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15, i32 0, i32 2
  %i5 = load i32, i32* %pos16, align 8
  %mul = mul nsw i32 %size, %num
  %add = add nsw i32 %i5, %mul
  %idxprom17 = sext i32 %fd to i64
  %arrayidx18 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom17
  %len19 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx18, i32 0, i32 1
  %i6 = load i32, i32* %len19, align 4
  %cmp20 = icmp sge i32 %add, %i6
  br i1 %cmp20, label %if.then21, label %if.else

if.then21:                                        ; preds = %if.end13
  %idxprom22 = sext i32 %fd to i64
  %arrayidx23 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom22
  %len24 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx23, i32 0, i32 1
  %i7 = load i32, i32* %len24, align 4
  %idxprom25 = sext i32 %fd to i64
  %arrayidx26 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom25
  %pos27 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx26, i32 0, i32 2
  %i8 = load i32, i32* %pos27, align 8
  %sub = sub nsw i32 %i7, %i8
  %div = sdiv i32 %sub, %size
  br label %if.end28

if.else:                                          ; preds = %if.end13
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then21
  %rc.0 = phi i32 [ %div, %if.then21 ], [ %num, %if.else ]
  %idxprom29 = sext i32 %fd to i64
  %arrayidx30 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom29
  %buf31 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx30, i32 0, i32 3
  %i9 = load i8*, i8** %buf31, align 8
  %idxprom32 = sext i32 %fd to i64
  %arrayidx33 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom32
  %pos34 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx33, i32 0, i32 2
  %i10 = load i32, i32* %pos34, align 8
  %idxprom35 = sext i32 %i10 to i64
  %arrayidx36 = getelementptr inbounds i8, i8* %i9, i64 %idxprom35
  %conv = sext i32 %rc.0 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %buf, i8* align 1 %arrayidx36, i64 %conv, i1 false)
  %mul37 = mul nsw i32 %rc.0, %size
  %idxprom38 = sext i32 %fd to i64
  %arrayidx39 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom38
  %pos40 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx39, i32 0, i32 2
  %i11 = load i32, i32* %pos40, align 8
  %add41 = add nsw i32 %i11, %mul37
  store i32 %add41, i32* %pos40, align 8
  %i12 = load i32, i32* @dbglvl, align 4
  %cmp42 = icmp slt i32 4, %i12
  br i1 %cmp42, label %if.then44, label %if.end47

if.then44:                                        ; preds = %if.end28
  %mul45 = mul nsw i32 %rc.0, %size
  %call46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i32 %mul45)
  br label %if.end47

if.end47:                                         ; preds = %if.then44, %if.end28
  br label %return

return:                                           ; preds = %if.end47, %if.end12
  %retval.0 = phi i32 [ -1, %if.end12 ], [ %rc.0, %if.end47 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @spec_getc(i32 %fd) #0 {
entry:
  %i = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %i
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i32 %fd)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %i1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i32 %fd)
  call void @exit(i32 0) #9
  unreachable

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 2
  %i2 = load i32, i32* %pos, align 8
  %idxprom5 = sext i32 %fd to i64
  %arrayidx6 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom5
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx6, i32 0, i32 1
  %i3 = load i32, i32* %len, align 4
  %cmp7 = icmp sge i32 %i2, %i3
  br i1 %cmp7, label %if.then8, label %if.end13

if.then8:                                         ; preds = %if.end4
  %i4 = load i32, i32* @dbglvl, align 4
  %cmp9 = icmp slt i32 4, %i4
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.then8
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0))
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.then8
  br label %return

if.end13:                                         ; preds = %if.end4
  %idxprom14 = sext i32 %fd to i64
  %arrayidx15 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom14
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15, i32 0, i32 3
  %i5 = load i8*, i8** %buf, align 8
  %idxprom16 = sext i32 %fd to i64
  %arrayidx17 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom16
  %pos18 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx17, i32 0, i32 2
  %i6 = load i32, i32* %pos18, align 8
  %inc = add nsw i32 %i6, 1
  store i32 %inc, i32* %pos18, align 8
  %idxprom19 = sext i32 %i6 to i64
  %arrayidx20 = getelementptr inbounds i8, i8* %i5, i64 %idxprom19
  %i7 = load i8, i8* %arrayidx20, align 1
  %conv = zext i8 %i7 to i32
  %i8 = load i32, i32* @dbglvl, align 4
  %cmp21 = icmp slt i32 4, %i8
  br i1 %cmp21, label %if.then23, label %if.end25

if.then23:                                        ; preds = %if.end13
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i32 %conv)
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.end13
  br label %return

return:                                           ; preds = %if.end25, %if.end12
  %retval.0 = phi i32 [ -1, %if.end12 ], [ %conv, %if.end25 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @spec_ungetc(i8 zeroext %ch, i32 %fd) #0 {
entry:
  %i = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %i
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0), i32 %fd)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %i1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i32 %fd)
  call void @exit(i32 0) #9
  unreachable

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 2
  %i2 = load i32, i32* %pos, align 8
  %cmp5 = icmp sle i32 %i2, 0
  br i1 %cmp5, label %if.then6, label %if.end11

if.then6:                                         ; preds = %if.end4
  %i3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %idxprom7 = sext i32 %fd to i64
  %arrayidx8 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom7
  %pos9 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx8, i32 0, i32 2
  %i4 = load i32, i32* %pos9, align 8
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i32 %i4)
  call void @exit(i32 0) #9
  unreachable

if.end11:                                         ; preds = %if.end4
  %idxprom12 = sext i32 %fd to i64
  %arrayidx13 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom12
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx13, i32 0, i32 3
  %i5 = load i8*, i8** %buf, align 8
  %idxprom14 = sext i32 %fd to i64
  %arrayidx15 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom14
  %pos16 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15, i32 0, i32 2
  %i6 = load i32, i32* %pos16, align 8
  %dec = add nsw i32 %i6, -1
  store i32 %dec, i32* %pos16, align 8
  %idxprom17 = sext i32 %dec to i64
  %arrayidx18 = getelementptr inbounds i8, i8* %i5, i64 %idxprom17
  %i7 = load i8, i8* %arrayidx18, align 1
  %conv = zext i8 %i7 to i32
  %conv19 = zext i8 %ch to i32
  %cmp20 = icmp ne i32 %conv, %conv19
  br i1 %cmp20, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.end11
  %i8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i8, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.17, i64 0, i64 0))
  call void @exit(i32 0) #9
  unreachable

if.end24:                                         ; preds = %if.end11
  %i9 = load i32, i32* @dbglvl, align 4
  %cmp25 = icmp slt i32 4, %i9
  br i1 %cmp25, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.end24
  %call28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i32 0)
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.end24
  %conv30 = zext i8 %ch to i32
  ret i32 %conv30
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @spec_rewind(i32 %fd) #0 {
entry:
  %idxprom = sext i32 %fd to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 2
  store i32 0, i32* %pos, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @spec_reset(i32 %fd) #0 {
entry:
  %idxprom = sext i32 %fd to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 3
  %i = load i8*, i8** %buf, align 8
  %idxprom1 = sext i32 %fd to i64
  %arrayidx2 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom1
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx2, i32 0, i32 1
  %i1 = load i32, i32* %len, align 4
  %conv = sext i32 %i1 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %i, i8 0, i64 %conv, i1 false)
  %idxprom3 = sext i32 %fd to i64
  %arrayidx4 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom3
  %len5 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx4, i32 0, i32 1
  store i32 0, i32* %len5, align 4
  %idxprom6 = sext i32 %fd to i64
  %arrayidx7 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom6
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx7, i32 0, i32 2
  store i32 0, i32* %pos, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @spec_write(i32 %fd, i8* %buf, i32 %size) #0 {
entry:
  %i = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %i
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i64 0, i64 0), i32 %fd, i8* %buf, i32 %size)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %i1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i32 %fd)
  call void @exit(i32 0) #9
  unreachable

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %buf5 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 3
  %i2 = load i8*, i8** %buf5, align 8
  %idxprom6 = sext i32 %fd to i64
  %arrayidx7 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom6
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx7, i32 0, i32 2
  %i3 = load i32, i32* %pos, align 8
  %idxprom8 = sext i32 %i3 to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %i2, i64 %idxprom8
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx9, i8* align 1 %buf, i64 %conv, i1 false)
  %idxprom10 = sext i32 %fd to i64
  %arrayidx11 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom10
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11, i32 0, i32 1
  %i4 = load i32, i32* %len, align 4
  %add = add nsw i32 %i4, %size
  store i32 %add, i32* %len, align 4
  %idxprom12 = sext i32 %fd to i64
  %arrayidx13 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom12
  %pos14 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx13, i32 0, i32 2
  %i5 = load i32, i32* %pos14, align 8
  %add15 = add nsw i32 %i5, %size
  store i32 %add15, i32* %pos14, align 8
  %i6 = load i32, i32* @dbglvl, align 4
  %cmp16 = icmp slt i32 4, %i6
  br i1 %cmp16, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end4
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i32 %size)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end4
  ret i32 %size
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @spec_fwrite(i8* %buf, i32 %size, i32 %num, i32 %fd) #0 {
entry:
  %i = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %i
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20, i64 0, i64 0), i8* %buf, i32 %size, i32 %num, i32 %fd)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %i1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i64 0, i64 0), i32 %fd)
  call void @exit(i32 0) #9
  unreachable

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %buf5 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 3
  %i2 = load i8*, i8** %buf5, align 8
  %idxprom6 = sext i32 %fd to i64
  %arrayidx7 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom6
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx7, i32 0, i32 2
  %i3 = load i32, i32* %pos, align 8
  %idxprom8 = sext i32 %i3 to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %i2, i64 %idxprom8
  %mul = mul nsw i32 %size, %num
  %conv = sext i32 %mul to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx9, i8* align 1 %buf, i64 %conv, i1 false)
  %mul10 = mul nsw i32 %size, %num
  %idxprom11 = sext i32 %fd to i64
  %arrayidx12 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom11
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx12, i32 0, i32 1
  %i4 = load i32, i32* %len, align 4
  %add = add nsw i32 %i4, %mul10
  store i32 %add, i32* %len, align 4
  %mul13 = mul nsw i32 %size, %num
  %idxprom14 = sext i32 %fd to i64
  %arrayidx15 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom14
  %pos16 = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx15, i32 0, i32 2
  %i5 = load i32, i32* %pos16, align 8
  %add17 = add nsw i32 %i5, %mul13
  store i32 %add17, i32* %pos16, align 8
  %i6 = load i32, i32* @dbglvl, align 4
  %cmp18 = icmp slt i32 4, %i6
  br i1 %cmp18, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end4
  %call21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i32 %num)
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end4
  ret i32 %num
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @spec_putc(i8 zeroext %ch, i32 %fd) #0 {
entry:
  %i = load i32, i32* @dbglvl, align 4
  %cmp = icmp slt i32 4, %i
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv = zext i8 %ch to i32
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0), i32 %conv, i32 %fd)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %i1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i32 %fd)
  call void @exit(i32 0) #9
  unreachable

if.end5:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %arrayidx = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom
  %buf = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx, i32 0, i32 3
  %i2 = load i8*, i8** %buf, align 8
  %idxprom6 = sext i32 %fd to i64
  %arrayidx7 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom6
  %pos = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx7, i32 0, i32 2
  %i3 = load i32, i32* %pos, align 8
  %inc = add nsw i32 %i3, 1
  store i32 %inc, i32* %pos, align 8
  %idxprom8 = sext i32 %i3 to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %i2, i64 %idxprom8
  store i8 %ch, i8* %arrayidx9, align 1
  %idxprom10 = sext i32 %fd to i64
  %arrayidx11 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom10
  %len = getelementptr inbounds %struct.spec_fd_t, %struct.spec_fd_t* %arrayidx11, i32 0, i32 1
  %i4 = load i32, i32* %len, align 4
  %inc12 = add nsw i32 %i4, 1
  store i32 %inc12, i32* %len, align 4
  %conv13 = zext i8 %ch to i32
  ret i32 %conv13
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  store i64 10, i64* @seedi, align 8
  %cmp = icmp sgt i32 %argc, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1
  %i = load i8*, i8** %arrayidx, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %input_name.0 = phi i8* [ %i, %if.then ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i64 0, i64 0), %entry ]
  %cmp1 = icmp sgt i32 %argc, 2
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 2
  %i1 = load i8*, i8** %arrayidx3, align 8
  %call = call i32 @atoi(i8* %i1) #11
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end
  %input_size.0 = phi i32 [ %call, %if.then2 ], [ 64, %if.end ]
  %cmp5 = icmp sgt i32 %argc, 3
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end4
  %arrayidx7 = getelementptr inbounds i8*, i8** %argv, i64 3
  %i2 = load i8*, i8** %arrayidx7, align 8
  %call8 = call i32 @atoi(i8* %i2) #11
  br label %if.end9

if.else:                                          ; preds = %if.end4
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  %compressed_size.0 = phi i32 [ %call8, %if.then6 ], [ %input_size.0, %if.else ]
  %mul = mul nsw i32 %input_size.0, 1048576
  store i32 %mul, i32* getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 0), align 16
  %mul10 = mul nsw i32 %compressed_size.0, 1048576
  store i32 %mul10, i32* getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 0), align 8
  %mul11 = mul nsw i32 %input_size.0, 1048576
  store i32 %mul11, i32* getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 2, i32 0), align 16
  %call12 = call i32 @spec_init()
  %call13 = call i32 @debug_time()
  %i3 = load i32, i32* @dbglvl, align 4
  %cmp14 = icmp slt i32 2, %i3
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end9
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0))
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end9
  %mul18 = mul nsw i32 %input_size.0, 1048576
  %call19 = call i32 @spec_load(i32 0, i8* %input_name.0, i32 %mul18)
  %i4 = load i32, i32* @dbglvl, align 4
  %cmp20 = icmp slt i32 3, %i4
  br i1 %cmp20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.end17
  %i5 = load i32, i32* getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1), align 4
  %call22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25, i64 0, i64 0), i32 %i5)
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.end17
  %mul24 = mul nsw i32 %input_size.0, 1048576
  %div = sdiv i32 %mul24, 1024
  %conv = sext i32 %div to i64
  %call25 = call noalias i8* @malloc(i64 %conv) #8
  %cmp26 = icmp eq i8* %call25, null
  br i1 %cmp26, label %if.then28, label %if.end30

if.then28:                                        ; preds = %if.end23
  %call29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i64 0, i64 0))
  call void @exit(i32 0) #9
  unreachable

if.end30:                                         ; preds = %if.end23
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end30
  %i.0 = phi i32 [ 0, %if.end30 ], [ %inc, %for.inc ]
  %mul31 = mul nsw i32 %i.0, 1027
  %mul32 = mul nsw i32 %input_size.0, 1048576
  %cmp33 = icmp slt i32 %mul31, %mul32
  br i1 %cmp33, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %i6 = load i8*, i8** getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3), align 16
  %mul35 = mul nsw i32 %i.0, 1027
  %idxprom = sext i32 %mul35 to i64
  %arrayidx36 = getelementptr inbounds i8, i8* %i6, i64 %idxprom
  %i7 = load i8, i8* %arrayidx36, align 1
  %idxprom37 = sext i32 %i.0 to i64
  %arrayidx38 = getelementptr inbounds i8, i8* %call25, i64 %idxprom37
  store i8 %i7, i8* %arrayidx38, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @spec_initbufs()
  br label %for.cond39

for.cond39:                                       ; preds = %for.inc98, %for.end
  %level.0 = phi i32 [ 5, %for.end ], [ %add, %for.inc98 ]
  %cmp40 = icmp sle i32 %level.0, 9
  br i1 %cmp40, label %for.body42, label %for.end99

for.body42:                                       ; preds = %for.cond39
  %call43 = call i32 @debug_time()
  %i8 = load i32, i32* @dbglvl, align 4
  %cmp44 = icmp slt i32 2, %i8
  br i1 %cmp44, label %if.then46, label %if.end48

if.then46:                                        ; preds = %for.body42
  %call47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.27, i64 0, i64 0), i32 %level.0)
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %for.body42
  call void @spec_compress(i32 0, i32 1, i32 %level.0)
  %call49 = call i32 @debug_time()
  %i9 = load i32, i32* @dbglvl, align 4
  %cmp50 = icmp slt i32 3, %i9
  br i1 %cmp50, label %if.then52, label %if.end54

if.then52:                                        ; preds = %if.end48
  %i10 = load i32, i32* getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1), align 4
  %call53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28, i64 0, i64 0), i32 %i10)
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %if.end48
  %call55 = call i32 @spec_reset(i32 0)
  %call56 = call i32 @spec_rewind(i32 1)
  %call57 = call i32 @debug_time()
  %i11 = load i32, i32* @dbglvl, align 4
  %cmp58 = icmp slt i32 2, %i11
  br i1 %cmp58, label %if.then60, label %if.end62

if.then60:                                        ; preds = %if.end54
  %call61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29, i64 0, i64 0))
  br label %if.end62

if.end62:                                         ; preds = %if.then60, %if.end54
  call void @spec_uncompress(i32 1, i32 0, i32 %level.0)
  %call63 = call i32 @debug_time()
  %i12 = load i32, i32* @dbglvl, align 4
  %cmp64 = icmp slt i32 3, %i12
  br i1 %cmp64, label %if.then66, label %if.end68

if.then66:                                        ; preds = %if.end62
  %i13 = load i32, i32* getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1), align 4
  %call67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.30, i64 0, i64 0), i32 %i13)
  br label %if.end68

if.end68:                                         ; preds = %if.then66, %if.end62
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc87, %if.end68
  %i.1 = phi i32 [ 0, %if.end68 ], [ %inc88, %for.inc87 ]
  %mul70 = mul nsw i32 %i.1, 1027
  %mul71 = mul nsw i32 %input_size.0, 1048576
  %cmp72 = icmp slt i32 %mul70, %mul71
  br i1 %cmp72, label %for.body74, label %for.end89

for.body74:                                       ; preds = %for.cond69
  %idxprom75 = sext i32 %i.1 to i64
  %arrayidx76 = getelementptr inbounds i8, i8* %call25, i64 %idxprom75
  %i14 = load i8, i8* %arrayidx76, align 1
  %conv77 = zext i8 %i14 to i32
  %i15 = load i8*, i8** getelementptr inbounds ([3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3), align 16
  %mul78 = mul nsw i32 %i.1, 1027
  %idxprom79 = sext i32 %mul78 to i64
  %arrayidx80 = getelementptr inbounds i8, i8* %i15, i64 %idxprom79
  %i16 = load i8, i8* %arrayidx80, align 1
  %conv81 = zext i8 %i16 to i32
  %cmp82 = icmp ne i32 %conv77, %conv81
  br i1 %cmp82, label %if.then84, label %if.end86

if.then84:                                        ; preds = %for.body74
  %call85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i64 0, i64 0), i32 %input_size.0)
  call void @exit(i32 0) #9
  unreachable

if.end86:                                         ; preds = %for.body74
  br label %for.inc87

for.inc87:                                        ; preds = %if.end86
  %inc88 = add nsw i32 %i.1, 1
  br label %for.cond69

for.end89:                                        ; preds = %for.cond69
  %call90 = call i32 @debug_time()
  %i17 = load i32, i32* @dbglvl, align 4
  %cmp91 = icmp slt i32 3, %i17
  br i1 %cmp91, label %if.then93, label %if.end95

if.then93:                                        ; preds = %for.end89
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.32, i64 0, i64 0))
  br label %if.end95

if.end95:                                         ; preds = %if.then93, %for.end89
  %call96 = call i32 @spec_reset(i32 1)
  %call97 = call i32 @spec_rewind(i32 0)
  br label %for.inc98

for.inc98:                                        ; preds = %if.end95
  %add = add nsw i32 %level.0, 2
  br label %for.cond39

for.end99:                                        ; preds = %for.cond39
  %call100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0), i32 %input_size.0)
  ret i32 0
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @atoi(i8*) #7

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @debug_time() #0 {
entry:
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @spec_initbufs() #0 {
entry:
  store i8 0, i8* @smallMode, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i32 30, i32* @workFactor, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @spec_compress(i32 %in, i32 %out, i32 %lev) #0 {
entry:
  store i32 %lev, i32* @blockSize100k, align 4
  call void @compressStream(i32 %in, i32 %out)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @spec_uncompress(i32 %in, i32 %out, i32 %lev) #0 {
entry:
  store i32 0, i32* @blockSize100k, align 4
  %call = call zeroext i8 @uncompressStream(i32 %in, i32 %out)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_blockSort(%struct.EState* %s) #0 {
entry:
  %budget = alloca i32, align 4
  %ptr1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 8
  %i = load i32*, i32** %ptr1, align 8
  %block2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i1 = load i8*, i8** %block2, align 8
  %ftab3 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 6
  %i2 = load i32*, i32** %ftab3, align 8
  %nblock4 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i3 = load i32, i32* %nblock4, align 4
  %verbosity = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 28
  %i4 = load i32, i32* %verbosity, align 8
  %workFactor = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 12
  %i5 = load i32, i32* %workFactor, align 8
  %cmp = icmp slt i32 %i3, 10000
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arr1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 4
  %i6 = load i32*, i32** %arr1, align 8
  %arr2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 5
  %i7 = load i32*, i32** %arr2, align 8
  call void @fallbackSort(i32* %i6, i32* %i7, i32* %i2, i32 %i3, i32 %i4)
  br label %if.end33

if.else:                                          ; preds = %entry
  %add = add nsw i32 %i3, 34
  %and = and i32 %add, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else
  %inc = add nsw i32 %add, 1
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.else
  %i.0 = phi i32 [ %inc, %if.then5 ], [ %add, %if.else ]
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %i1, i64 %idxprom
  %i8 = bitcast i8* %arrayidx to i16*
  %cmp6 = icmp slt i32 %i5, 1
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end
  %wfact.0 = phi i32 [ 1, %if.then7 ], [ %i5, %if.end ]
  %cmp9 = icmp sgt i32 %wfact.0, 100
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end8
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end8
  %wfact.1 = phi i32 [ 100, %if.then10 ], [ %wfact.0, %if.end8 ]
  %sub = sub nsw i32 %wfact.1, 1
  %div = sdiv i32 %sub, 3
  %mul = mul nsw i32 %i3, %div
  store i32 %mul, i32* %budget, align 4
  call void @mainSort(i32* %i, i8* %i1, i16* %i8, i32* %i2, i32 %i3, i32 %i4, i32* %budget)
  %cmp12 = icmp sge i32 %i4, 3
  br i1 %cmp12, label %if.then13, label %if.end21

if.then13:                                        ; preds = %if.end11
  %i9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %i10 = load i32, i32* %budget, align 4
  %sub14 = sub nsw i32 %mul, %i10
  %i11 = load i32, i32* %budget, align 4
  %sub15 = sub nsw i32 %mul, %i11
  %conv = sitofp i32 %sub15 to float
  %cmp16 = icmp eq i32 %i3, 0
  br i1 %cmp16, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then13
  br label %cond.end

cond.false:                                       ; preds = %if.then13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %i3, %cond.false ]
  %conv18 = sitofp i32 %cond to float
  %div19 = fdiv float %conv, %conv18
  %conv20 = fpext float %div19 to double
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34, i64 0, i64 0), i32 %sub14, i32 %i3, double %conv20)
  br label %if.end21

if.end21:                                         ; preds = %cond.end, %if.end11
  %i12 = load i32, i32* %budget, align 4
  %cmp22 = icmp slt i32 %i12, 0
  br i1 %cmp22, label %if.then24, label %if.end32

if.then24:                                        ; preds = %if.end21
  %cmp25 = icmp sge i32 %i4, 2
  br i1 %cmp25, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.then24
  %i13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i13, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1.35, i64 0, i64 0))
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.then24
  %arr130 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 4
  %i14 = load i32*, i32** %arr130, align 8
  %arr231 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 5
  %i15 = load i32*, i32** %arr231, align 8
  call void @fallbackSort(i32* %i14, i32* %i15, i32* %i2, i32 %i3, i32 %i4)
  br label %if.end32

if.end32:                                         ; preds = %if.end29, %if.end21
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then
  %origPtr = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 7
  store i32 -1, i32* %origPtr, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end33
  %i.1 = phi i32 [ 0, %if.end33 ], [ %inc44, %for.inc ]
  %nblock34 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i16 = load i32, i32* %nblock34, align 4
  %cmp35 = icmp slt i32 %i.1, %i16
  br i1 %cmp35, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom37 = sext i32 %i.1 to i64
  %arrayidx38 = getelementptr inbounds i32, i32* %i, i64 %idxprom37
  %i17 = load i32, i32* %arrayidx38, align 4
  %cmp39 = icmp eq i32 %i17, 0
  br i1 %cmp39, label %if.then41, label %if.end43

if.then41:                                        ; preds = %for.body
  %origPtr42 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 7
  store i32 %i.1, i32* %origPtr42, align 8
  br label %for.end

if.end43:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end43
  %inc44 = add nsw i32 %i.1, 1
  br label %for.cond

for.end:                                          ; preds = %if.then41, %for.cond
  %origPtr45 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 7
  %i18 = load i32, i32* %origPtr45, align 8
  %cmp46 = icmp ne i32 %i18, -1
  br i1 %cmp46, label %if.end49, label %if.then48

if.then48:                                        ; preds = %for.end
  call void @BZ2_bz__AssertH__fail(i32 1003)
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %for.end
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @fallbackSort(i32* %fmap, i32* %eclass, i32* %bhtab, i32 %nblock, i32 %verb) #0 {
entry:
  %ftab = alloca [257 x i32], align 16
  %ftabCopy = alloca [256 x i32], align 16
  %i = bitcast i32* %eclass to i8*
  %cmp = icmp sge i32 %verb, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %i1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.37, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ]
  %cmp1 = icmp slt i32 %i.0, 257
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc10, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc11, %for.inc10 ]
  %cmp3 = icmp slt i32 %i.1, %nblock
  br i1 %cmp3, label %for.body4, label %for.end12

for.body4:                                        ; preds = %for.cond2
  %idxprom5 = sext i32 %i.1 to i64
  %arrayidx6 = getelementptr inbounds i8, i8* %i, i64 %idxprom5
  %i2 = load i8, i8* %arrayidx6, align 1
  %idxprom7 = zext i8 %i2 to i64
  %arrayidx8 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom7
  %i3 = load i32, i32* %arrayidx8, align 4
  %inc9 = add nsw i32 %i3, 1
  store i32 %inc9, i32* %arrayidx8, align 4
  br label %for.inc10

for.inc10:                                        ; preds = %for.body4
  %inc11 = add nsw i32 %i.1, 1
  br label %for.cond2

for.end12:                                        ; preds = %for.cond2
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc20, %for.end12
  %i.2 = phi i32 [ 0, %for.end12 ], [ %inc21, %for.inc20 ]
  %cmp14 = icmp slt i32 %i.2, 256
  br i1 %cmp14, label %for.body15, label %for.end22

for.body15:                                       ; preds = %for.cond13
  %idxprom16 = sext i32 %i.2 to i64
  %arrayidx17 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom16
  %i4 = load i32, i32* %arrayidx17, align 4
  %idxprom18 = sext i32 %i.2 to i64
  %arrayidx19 = getelementptr inbounds [256 x i32], [256 x i32]* %ftabCopy, i64 0, i64 %idxprom18
  store i32 %i4, i32* %arrayidx19, align 4
  br label %for.inc20

for.inc20:                                        ; preds = %for.body15
  %inc21 = add nsw i32 %i.2, 1
  br label %for.cond13

for.end22:                                        ; preds = %for.cond13
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc30, %for.end22
  %i.3 = phi i32 [ 1, %for.end22 ], [ %inc31, %for.inc30 ]
  %cmp24 = icmp slt i32 %i.3, 257
  br i1 %cmp24, label %for.body25, label %for.end32

for.body25:                                       ; preds = %for.cond23
  %sub = sub nsw i32 %i.3, 1
  %idxprom26 = sext i32 %sub to i64
  %arrayidx27 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom26
  %i5 = load i32, i32* %arrayidx27, align 4
  %idxprom28 = sext i32 %i.3 to i64
  %arrayidx29 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom28
  %i6 = load i32, i32* %arrayidx29, align 4
  %add = add nsw i32 %i6, %i5
  store i32 %add, i32* %arrayidx29, align 4
  br label %for.inc30

for.inc30:                                        ; preds = %for.body25
  %inc31 = add nsw i32 %i.3, 1
  br label %for.cond23

for.end32:                                        ; preds = %for.cond23
  br label %for.cond33

for.cond33:                                       ; preds = %for.inc45, %for.end32
  %i.4 = phi i32 [ 0, %for.end32 ], [ %inc46, %for.inc45 ]
  %cmp34 = icmp slt i32 %i.4, %nblock
  br i1 %cmp34, label %for.body35, label %for.end47

for.body35:                                       ; preds = %for.cond33
  %idxprom36 = sext i32 %i.4 to i64
  %arrayidx37 = getelementptr inbounds i8, i8* %i, i64 %idxprom36
  %i7 = load i8, i8* %arrayidx37, align 1
  %conv = zext i8 %i7 to i32
  %idxprom38 = sext i32 %conv to i64
  %arrayidx39 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom38
  %i8 = load i32, i32* %arrayidx39, align 4
  %sub40 = sub nsw i32 %i8, 1
  %idxprom41 = sext i32 %conv to i64
  %arrayidx42 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom41
  store i32 %sub40, i32* %arrayidx42, align 4
  %idxprom43 = sext i32 %sub40 to i64
  %arrayidx44 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom43
  store i32 %i.4, i32* %arrayidx44, align 4
  br label %for.inc45

for.inc45:                                        ; preds = %for.body35
  %inc46 = add nsw i32 %i.4, 1
  br label %for.cond33

for.end47:                                        ; preds = %for.cond33
  %div = sdiv i32 %nblock, 32
  %add48 = add nsw i32 2, %div
  br label %for.cond49

for.cond49:                                       ; preds = %for.inc55, %for.end47
  %i.5 = phi i32 [ 0, %for.end47 ], [ %inc56, %for.inc55 ]
  %cmp50 = icmp slt i32 %i.5, %add48
  br i1 %cmp50, label %for.body52, label %for.end57

for.body52:                                       ; preds = %for.cond49
  %idxprom53 = sext i32 %i.5 to i64
  %arrayidx54 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom53
  store i32 0, i32* %arrayidx54, align 4
  br label %for.inc55

for.inc55:                                        ; preds = %for.body52
  %inc56 = add nsw i32 %i.5, 1
  br label %for.cond49

for.end57:                                        ; preds = %for.cond49
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc68, %for.end57
  %i.6 = phi i32 [ 0, %for.end57 ], [ %inc69, %for.inc68 ]
  %cmp59 = icmp slt i32 %i.6, 256
  br i1 %cmp59, label %for.body61, label %for.end70

for.body61:                                       ; preds = %for.cond58
  %idxprom62 = sext i32 %i.6 to i64
  %arrayidx63 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom62
  %i9 = load i32, i32* %arrayidx63, align 4
  %and = and i32 %i9, 31
  %shl = shl i32 1, %and
  %idxprom64 = sext i32 %i.6 to i64
  %arrayidx65 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom64
  %i10 = load i32, i32* %arrayidx65, align 4
  %shr = ashr i32 %i10, 5
  %idxprom66 = sext i32 %shr to i64
  %arrayidx67 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom66
  %i11 = load i32, i32* %arrayidx67, align 4
  %or = or i32 %i11, %shl
  store i32 %or, i32* %arrayidx67, align 4
  br label %for.inc68

for.inc68:                                        ; preds = %for.body61
  %inc69 = add nsw i32 %i.6, 1
  br label %for.cond58

for.end70:                                        ; preds = %for.cond58
  br label %for.cond71

for.cond71:                                       ; preds = %for.inc96, %for.end70
  %i.7 = phi i32 [ 0, %for.end70 ], [ %inc97, %for.inc96 ]
  %cmp72 = icmp slt i32 %i.7, 32
  br i1 %cmp72, label %for.body74, label %for.end98

for.body74:                                       ; preds = %for.cond71
  %mul = mul nsw i32 2, %i.7
  %add75 = add nsw i32 %nblock, %mul
  %and76 = and i32 %add75, 31
  %shl77 = shl i32 1, %and76
  %mul78 = mul nsw i32 2, %i.7
  %add79 = add nsw i32 %nblock, %mul78
  %shr80 = ashr i32 %add79, 5
  %idxprom81 = sext i32 %shr80 to i64
  %arrayidx82 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom81
  %i12 = load i32, i32* %arrayidx82, align 4
  %or83 = or i32 %i12, %shl77
  store i32 %or83, i32* %arrayidx82, align 4
  %mul84 = mul nsw i32 2, %i.7
  %add85 = add nsw i32 %nblock, %mul84
  %add86 = add nsw i32 %add85, 1
  %and87 = and i32 %add86, 31
  %shl88 = shl i32 1, %and87
  %neg = xor i32 %shl88, -1
  %mul89 = mul nsw i32 2, %i.7
  %add90 = add nsw i32 %nblock, %mul89
  %add91 = add nsw i32 %add90, 1
  %shr92 = ashr i32 %add91, 5
  %idxprom93 = sext i32 %shr92 to i64
  %arrayidx94 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom93
  %i13 = load i32, i32* %arrayidx94, align 4
  %and95 = and i32 %i13, %neg
  store i32 %and95, i32* %arrayidx94, align 4
  br label %for.inc96

for.inc96:                                        ; preds = %for.body74
  %inc97 = add nsw i32 %i.7, 1
  br label %for.cond71

for.end98:                                        ; preds = %for.cond71
  br label %while.body

while.body:                                       ; preds = %if.end267, %for.end98
  %H.0 = phi i32 [ 1, %for.end98 ], [ %mul261, %if.end267 ]
  %cmp99 = icmp sge i32 %verb, 4
  br i1 %cmp99, label %if.then101, label %if.end103

if.then101:                                       ; preds = %while.body
  %i14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i14, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.40, i64 0, i64 0), i32 %H.0)
  br label %if.end103

if.end103:                                        ; preds = %if.then101, %while.body
  br label %for.cond104

for.cond104:                                      ; preds = %for.inc126, %if.end103
  %i.8 = phi i32 [ 0, %if.end103 ], [ %inc127, %for.inc126 ]
  %j.0 = phi i32 [ 0, %if.end103 ], [ %j.1, %for.inc126 ]
  %cmp105 = icmp slt i32 %i.8, %nblock
  br i1 %cmp105, label %for.body107, label %for.end128

for.body107:                                      ; preds = %for.cond104
  %shr108 = ashr i32 %i.8, 5
  %idxprom109 = sext i32 %shr108 to i64
  %arrayidx110 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom109
  %i15 = load i32, i32* %arrayidx110, align 4
  %and111 = and i32 %i.8, 31
  %shl112 = shl i32 1, %and111
  %and113 = and i32 %i15, %shl112
  %tobool = icmp ne i32 %and113, 0
  br i1 %tobool, label %if.then114, label %if.end115

if.then114:                                       ; preds = %for.body107
  br label %if.end115

if.end115:                                        ; preds = %if.then114, %for.body107
  %j.1 = phi i32 [ %i.8, %if.then114 ], [ %j.0, %for.body107 ]
  %idxprom116 = sext i32 %i.8 to i64
  %arrayidx117 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom116
  %i16 = load i32, i32* %arrayidx117, align 4
  %sub118 = sub i32 %i16, %H.0
  %cmp119 = icmp slt i32 %sub118, 0
  br i1 %cmp119, label %if.then121, label %if.end123

if.then121:                                       ; preds = %if.end115
  %add122 = add nsw i32 %sub118, %nblock
  br label %if.end123

if.end123:                                        ; preds = %if.then121, %if.end115
  %k.0 = phi i32 [ %add122, %if.then121 ], [ %sub118, %if.end115 ]
  %idxprom124 = sext i32 %k.0 to i64
  %arrayidx125 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom124
  store i32 %j.1, i32* %arrayidx125, align 4
  br label %for.inc126

for.inc126:                                       ; preds = %if.end123
  %inc127 = add nsw i32 %i.8, 1
  br label %for.cond104

for.end128:                                       ; preds = %for.cond104
  br label %while.body130

while.body130:                                    ; preds = %if.end254, %for.end128
  %r.0 = phi i32 [ -1, %for.end128 ], [ %sub222, %if.end254 ]
  %nNotDone.0 = phi i32 [ 0, %for.end128 ], [ %nNotDone.1, %if.end254 ]
  %add131 = add nsw i32 %r.0, 1
  br label %while.cond132

while.cond132:                                    ; preds = %while.body142, %while.body130
  %k.1 = phi i32 [ %add131, %while.body130 ], [ %inc143, %while.body142 ]
  %shr133 = ashr i32 %k.1, 5
  %idxprom134 = sext i32 %shr133 to i64
  %arrayidx135 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom134
  %i17 = load i32, i32* %arrayidx135, align 4
  %and136 = and i32 %k.1, 31
  %shl137 = shl i32 1, %and136
  %and138 = and i32 %i17, %shl137
  %tobool139 = icmp ne i32 %and138, 0
  br i1 %tobool139, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond132
  %and140 = and i32 %k.1, 31
  %tobool141 = icmp ne i32 %and140, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond132
  %i18 = phi i1 [ false, %while.cond132 ], [ %tobool141, %land.rhs ]
  br i1 %i18, label %while.body142, label %while.end

while.body142:                                    ; preds = %land.end
  %inc143 = add nsw i32 %k.1, 1
  br label %while.cond132

while.end:                                        ; preds = %land.end
  %shr144 = ashr i32 %k.1, 5
  %idxprom145 = sext i32 %shr144 to i64
  %arrayidx146 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom145
  %i19 = load i32, i32* %arrayidx146, align 4
  %and147 = and i32 %k.1, 31
  %shl148 = shl i32 1, %and147
  %and149 = and i32 %i19, %shl148
  %tobool150 = icmp ne i32 %and149, 0
  br i1 %tobool150, label %if.then151, label %if.end172

if.then151:                                       ; preds = %while.end
  br label %while.cond152

while.cond152:                                    ; preds = %while.body158, %if.then151
  %k.2 = phi i32 [ %k.1, %if.then151 ], [ %add159, %while.body158 ]
  %shr153 = ashr i32 %k.2, 5
  %idxprom154 = sext i32 %shr153 to i64
  %arrayidx155 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom154
  %i20 = load i32, i32* %arrayidx155, align 4
  %cmp156 = icmp eq i32 %i20, -1
  br i1 %cmp156, label %while.body158, label %while.end160

while.body158:                                    ; preds = %while.cond152
  %add159 = add nsw i32 %k.2, 32
  br label %while.cond152

while.end160:                                     ; preds = %while.cond152
  br label %while.cond161

while.cond161:                                    ; preds = %while.body169, %while.end160
  %k.3 = phi i32 [ %k.2, %while.end160 ], [ %inc170, %while.body169 ]
  %shr162 = ashr i32 %k.3, 5
  %idxprom163 = sext i32 %shr162 to i64
  %arrayidx164 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom163
  %i21 = load i32, i32* %arrayidx164, align 4
  %and165 = and i32 %k.3, 31
  %shl166 = shl i32 1, %and165
  %and167 = and i32 %i21, %shl166
  %tobool168 = icmp ne i32 %and167, 0
  br i1 %tobool168, label %while.body169, label %while.end171

while.body169:                                    ; preds = %while.cond161
  %inc170 = add nsw i32 %k.3, 1
  br label %while.cond161

while.end171:                                     ; preds = %while.cond161
  br label %if.end172

if.end172:                                        ; preds = %while.end171, %while.end
  %k.4 = phi i32 [ %k.3, %while.end171 ], [ %k.1, %while.end ]
  %sub173 = sub nsw i32 %k.4, 1
  %cmp174 = icmp sge i32 %sub173, %nblock
  br i1 %cmp174, label %if.then176, label %if.end177

if.then176:                                       ; preds = %if.end172
  br label %while.end255

if.end177:                                        ; preds = %if.end172
  br label %while.cond178

while.cond178:                                    ; preds = %while.body190, %if.end177
  %k.5 = phi i32 [ %k.4, %if.end177 ], [ %inc191, %while.body190 ]
  %shr179 = ashr i32 %k.5, 5
  %idxprom180 = sext i32 %shr179 to i64
  %arrayidx181 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom180
  %i22 = load i32, i32* %arrayidx181, align 4
  %and182 = and i32 %k.5, 31
  %shl183 = shl i32 1, %and182
  %and184 = and i32 %i22, %shl183
  %tobool185 = icmp ne i32 %and184, 0
  br i1 %tobool185, label %land.end189, label %land.rhs186

land.rhs186:                                      ; preds = %while.cond178
  %and187 = and i32 %k.5, 31
  %tobool188 = icmp ne i32 %and187, 0
  br label %land.end189

land.end189:                                      ; preds = %land.rhs186, %while.cond178
  %i23 = phi i1 [ false, %while.cond178 ], [ %tobool188, %land.rhs186 ]
  br i1 %i23, label %while.body190, label %while.end192

while.body190:                                    ; preds = %land.end189
  %inc191 = add nsw i32 %k.5, 1
  br label %while.cond178

while.end192:                                     ; preds = %land.end189
  %shr193 = ashr i32 %k.5, 5
  %idxprom194 = sext i32 %shr193 to i64
  %arrayidx195 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom194
  %i24 = load i32, i32* %arrayidx195, align 4
  %and196 = and i32 %k.5, 31
  %shl197 = shl i32 1, %and196
  %and198 = and i32 %i24, %shl197
  %tobool199 = icmp ne i32 %and198, 0
  br i1 %tobool199, label %if.end221, label %if.then200

if.then200:                                       ; preds = %while.end192
  br label %while.cond201

while.cond201:                                    ; preds = %while.body207, %if.then200
  %k.6 = phi i32 [ %k.5, %if.then200 ], [ %add208, %while.body207 ]
  %shr202 = ashr i32 %k.6, 5
  %idxprom203 = sext i32 %shr202 to i64
  %arrayidx204 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom203
  %i25 = load i32, i32* %arrayidx204, align 4
  %cmp205 = icmp eq i32 %i25, 0
  br i1 %cmp205, label %while.body207, label %while.end209

while.body207:                                    ; preds = %while.cond201
  %add208 = add nsw i32 %k.6, 32
  br label %while.cond201

while.end209:                                     ; preds = %while.cond201
  br label %while.cond210

while.cond210:                                    ; preds = %while.body218, %while.end209
  %k.7 = phi i32 [ %k.6, %while.end209 ], [ %inc219, %while.body218 ]
  %shr211 = ashr i32 %k.7, 5
  %idxprom212 = sext i32 %shr211 to i64
  %arrayidx213 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom212
  %i26 = load i32, i32* %arrayidx213, align 4
  %and214 = and i32 %k.7, 31
  %shl215 = shl i32 1, %and214
  %and216 = and i32 %i26, %shl215
  %tobool217 = icmp ne i32 %and216, 0
  %lnot = xor i1 %tobool217, true
  br i1 %lnot, label %while.body218, label %while.end220

while.body218:                                    ; preds = %while.cond210
  %inc219 = add nsw i32 %k.7, 1
  br label %while.cond210

while.end220:                                     ; preds = %while.cond210
  br label %if.end221

if.end221:                                        ; preds = %while.end220, %while.end192
  %k.8 = phi i32 [ %k.5, %while.end192 ], [ %k.7, %while.end220 ]
  %sub222 = sub nsw i32 %k.8, 1
  %cmp223 = icmp sge i32 %sub222, %nblock
  br i1 %cmp223, label %if.then225, label %if.end226

if.then225:                                       ; preds = %if.end221
  br label %while.end255

if.end226:                                        ; preds = %if.end221
  %cmp227 = icmp sgt i32 %sub222, %sub173
  br i1 %cmp227, label %if.then229, label %if.end254

if.then229:                                       ; preds = %if.end226
  %sub230 = sub nsw i32 %sub222, %sub173
  %add231 = add nsw i32 %sub230, 1
  %add232 = add nsw i32 %nNotDone.0, %add231
  call void @fallbackQSort3(i32* %fmap, i32* %eclass, i32 %sub173, i32 %sub222)
  br label %for.cond233

for.cond233:                                      ; preds = %for.inc251, %if.then229
  %i.9 = phi i32 [ %sub173, %if.then229 ], [ %inc252, %for.inc251 ]
  %cc.0 = phi i32 [ -1, %if.then229 ], [ %cc.1, %for.inc251 ]
  %cmp234 = icmp sle i32 %i.9, %sub222
  br i1 %cmp234, label %for.body236, label %for.end253

for.body236:                                      ; preds = %for.cond233
  %idxprom237 = sext i32 %i.9 to i64
  %arrayidx238 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom237
  %i27 = load i32, i32* %arrayidx238, align 4
  %idxprom239 = zext i32 %i27 to i64
  %arrayidx240 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom239
  %i28 = load i32, i32* %arrayidx240, align 4
  %cmp241 = icmp ne i32 %cc.0, %i28
  br i1 %cmp241, label %if.then243, label %if.end250

if.then243:                                       ; preds = %for.body236
  %and244 = and i32 %i.9, 31
  %shl245 = shl i32 1, %and244
  %shr246 = ashr i32 %i.9, 5
  %idxprom247 = sext i32 %shr246 to i64
  %arrayidx248 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom247
  %i29 = load i32, i32* %arrayidx248, align 4
  %or249 = or i32 %i29, %shl245
  store i32 %or249, i32* %arrayidx248, align 4
  br label %if.end250

if.end250:                                        ; preds = %if.then243, %for.body236
  %cc.1 = phi i32 [ %i28, %if.then243 ], [ %cc.0, %for.body236 ]
  br label %for.inc251

for.inc251:                                       ; preds = %if.end250
  %inc252 = add nsw i32 %i.9, 1
  br label %for.cond233

for.end253:                                       ; preds = %for.cond233
  br label %if.end254

if.end254:                                        ; preds = %for.end253, %if.end226
  %nNotDone.1 = phi i32 [ %add232, %for.end253 ], [ %nNotDone.0, %if.end226 ]
  br label %while.body130

while.end255:                                     ; preds = %if.then225, %if.then176
  %cmp256 = icmp sge i32 %verb, 4
  br i1 %cmp256, label %if.then258, label %if.end260

if.then258:                                       ; preds = %while.end255
  %i30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call259 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i30, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.41, i64 0, i64 0), i32 %nNotDone.0)
  br label %if.end260

if.end260:                                        ; preds = %if.then258, %while.end255
  %mul261 = mul nsw i32 %H.0, 2
  %cmp262 = icmp sgt i32 %mul261, %nblock
  br i1 %cmp262, label %if.then266, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end260
  %cmp264 = icmp eq i32 %nNotDone.0, 0
  br i1 %cmp264, label %if.then266, label %if.end267

if.then266:                                       ; preds = %lor.lhs.false, %if.end260
  br label %while.end268

if.end267:                                        ; preds = %lor.lhs.false
  br label %while.body

while.end268:                                     ; preds = %if.then266
  %cmp269 = icmp sge i32 %verb, 4
  br i1 %cmp269, label %if.then271, label %if.end273

if.then271:                                       ; preds = %while.end268
  %i31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call272 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i31, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.42, i64 0, i64 0))
  br label %if.end273

if.end273:                                        ; preds = %if.then271, %while.end268
  br label %for.cond274

for.cond274:                                      ; preds = %for.inc292, %if.end273
  %i.10 = phi i32 [ 0, %if.end273 ], [ %inc293, %for.inc292 ]
  %j.2 = phi i32 [ 0, %if.end273 ], [ %j.3, %for.inc292 ]
  %cmp275 = icmp slt i32 %i.10, %nblock
  br i1 %cmp275, label %for.body277, label %for.end294

for.body277:                                      ; preds = %for.cond274
  br label %while.cond

while.cond:                                       ; preds = %while.body282, %for.body277
  %j.3 = phi i32 [ %j.2, %for.body277 ], [ %inc283, %while.body282 ]
  %idxprom278 = sext i32 %j.3 to i64
  %arrayidx279 = getelementptr inbounds [256 x i32], [256 x i32]* %ftabCopy, i64 0, i64 %idxprom278
  %i32 = load i32, i32* %arrayidx279, align 4
  %cmp280 = icmp eq i32 %i32, 0
  br i1 %cmp280, label %while.body282, label %while.end284

while.body282:                                    ; preds = %while.cond
  %inc283 = add nsw i32 %j.3, 1
  br label %while.cond

while.end284:                                     ; preds = %while.cond
  %idxprom285 = sext i32 %j.3 to i64
  %arrayidx286 = getelementptr inbounds [256 x i32], [256 x i32]* %ftabCopy, i64 0, i64 %idxprom285
  %i33 = load i32, i32* %arrayidx286, align 4
  %dec = add nsw i32 %i33, -1
  store i32 %dec, i32* %arrayidx286, align 4
  %conv287 = trunc i32 %j.3 to i8
  %idxprom288 = sext i32 %i.10 to i64
  %arrayidx289 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom288
  %i34 = load i32, i32* %arrayidx289, align 4
  %idxprom290 = zext i32 %i34 to i64
  %arrayidx291 = getelementptr inbounds i8, i8* %i, i64 %idxprom290
  store i8 %conv287, i8* %arrayidx291, align 1
  br label %for.inc292

for.inc292:                                       ; preds = %while.end284
  %inc293 = add nsw i32 %i.10, 1
  br label %for.cond274

for.end294:                                       ; preds = %for.cond274
  %cmp295 = icmp slt i32 %j.2, 256
  br i1 %cmp295, label %if.end298, label %if.then297

if.then297:                                       ; preds = %for.end294
  call void @BZ2_bz__AssertH__fail(i32 1005)
  br label %if.end298

if.end298:                                        ; preds = %if.then297, %for.end294
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @mainSort(i32* %ptr, i8* %block, i16* %quadrant, i32* %ftab, i32 %nblock, i32 %verb, i32* %budget) #0 {
entry:
  %runningOrder = alloca [256 x i32], align 16
  %bigDone = alloca [256 x i8], align 16
  %copyStart = alloca [256 x i32], align 16
  %copyEnd = alloca [256 x i32], align 16
  %cmp = icmp sge i32 %verb, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %i = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6.36, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 65536, %if.end ], [ %dec, %for.inc ]
  %cmp1 = icmp sge i32 %i.0, 0
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i32, i32* %ftab, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %dec = add nsw i32 %i.0, -1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arrayidx2 = getelementptr inbounds i8, i8* %block, i64 0
  %i1 = load i8, i8* %arrayidx2, align 1
  %conv = zext i8 %i1 to i32
  %shl = shl i32 %conv, 8
  %sub = sub nsw i32 %nblock, 1
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc58, %for.end
  %i.1 = phi i32 [ %sub, %for.end ], [ %sub59, %for.inc58 ]
  %j.0 = phi i32 [ %shl, %for.end ], [ %or54, %for.inc58 ]
  %cmp4 = icmp sge i32 %i.1, 3
  br i1 %cmp4, label %for.body6, label %for.end60

for.body6:                                        ; preds = %for.cond3
  %idxprom7 = sext i32 %i.1 to i64
  %arrayidx8 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom7
  store i16 0, i16* %arrayidx8, align 2
  %shr = ashr i32 %j.0, 8
  %idxprom9 = sext i32 %i.1 to i64
  %arrayidx10 = getelementptr inbounds i8, i8* %block, i64 %idxprom9
  %i2 = load i8, i8* %arrayidx10, align 1
  %conv11 = zext i8 %i2 to i16
  %conv12 = zext i16 %conv11 to i32
  %shl13 = shl i32 %conv12, 8
  %or = or i32 %shr, %shl13
  %idxprom14 = sext i32 %or to i64
  %arrayidx15 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom14
  %i3 = load i32, i32* %arrayidx15, align 4
  %inc = add i32 %i3, 1
  store i32 %inc, i32* %arrayidx15, align 4
  %sub16 = sub nsw i32 %i.1, 1
  %idxprom17 = sext i32 %sub16 to i64
  %arrayidx18 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom17
  store i16 0, i16* %arrayidx18, align 2
  %shr19 = ashr i32 %or, 8
  %sub20 = sub nsw i32 %i.1, 1
  %idxprom21 = sext i32 %sub20 to i64
  %arrayidx22 = getelementptr inbounds i8, i8* %block, i64 %idxprom21
  %i4 = load i8, i8* %arrayidx22, align 1
  %conv23 = zext i8 %i4 to i16
  %conv24 = zext i16 %conv23 to i32
  %shl25 = shl i32 %conv24, 8
  %or26 = or i32 %shr19, %shl25
  %idxprom27 = sext i32 %or26 to i64
  %arrayidx28 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom27
  %i5 = load i32, i32* %arrayidx28, align 4
  %inc29 = add i32 %i5, 1
  store i32 %inc29, i32* %arrayidx28, align 4
  %sub30 = sub nsw i32 %i.1, 2
  %idxprom31 = sext i32 %sub30 to i64
  %arrayidx32 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom31
  store i16 0, i16* %arrayidx32, align 2
  %shr33 = ashr i32 %or26, 8
  %sub34 = sub nsw i32 %i.1, 2
  %idxprom35 = sext i32 %sub34 to i64
  %arrayidx36 = getelementptr inbounds i8, i8* %block, i64 %idxprom35
  %i6 = load i8, i8* %arrayidx36, align 1
  %conv37 = zext i8 %i6 to i16
  %conv38 = zext i16 %conv37 to i32
  %shl39 = shl i32 %conv38, 8
  %or40 = or i32 %shr33, %shl39
  %idxprom41 = sext i32 %or40 to i64
  %arrayidx42 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom41
  %i7 = load i32, i32* %arrayidx42, align 4
  %inc43 = add i32 %i7, 1
  store i32 %inc43, i32* %arrayidx42, align 4
  %sub44 = sub nsw i32 %i.1, 3
  %idxprom45 = sext i32 %sub44 to i64
  %arrayidx46 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom45
  store i16 0, i16* %arrayidx46, align 2
  %shr47 = ashr i32 %or40, 8
  %sub48 = sub nsw i32 %i.1, 3
  %idxprom49 = sext i32 %sub48 to i64
  %arrayidx50 = getelementptr inbounds i8, i8* %block, i64 %idxprom49
  %i8 = load i8, i8* %arrayidx50, align 1
  %conv51 = zext i8 %i8 to i16
  %conv52 = zext i16 %conv51 to i32
  %shl53 = shl i32 %conv52, 8
  %or54 = or i32 %shr47, %shl53
  %idxprom55 = sext i32 %or54 to i64
  %arrayidx56 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom55
  %i9 = load i32, i32* %arrayidx56, align 4
  %inc57 = add i32 %i9, 1
  store i32 %inc57, i32* %arrayidx56, align 4
  br label %for.inc58

for.inc58:                                        ; preds = %for.body6
  %sub59 = sub nsw i32 %i.1, 4
  br label %for.cond3

for.end60:                                        ; preds = %for.cond3
  br label %for.cond61

for.cond61:                                       ; preds = %for.inc77, %for.end60
  %i.2 = phi i32 [ %i.1, %for.end60 ], [ %dec78, %for.inc77 ]
  %j.1 = phi i32 [ %j.0, %for.end60 ], [ %or73, %for.inc77 ]
  %cmp62 = icmp sge i32 %i.2, 0
  br i1 %cmp62, label %for.body64, label %for.end79

for.body64:                                       ; preds = %for.cond61
  %idxprom65 = sext i32 %i.2 to i64
  %arrayidx66 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom65
  store i16 0, i16* %arrayidx66, align 2
  %shr67 = ashr i32 %j.1, 8
  %idxprom68 = sext i32 %i.2 to i64
  %arrayidx69 = getelementptr inbounds i8, i8* %block, i64 %idxprom68
  %i10 = load i8, i8* %arrayidx69, align 1
  %conv70 = zext i8 %i10 to i16
  %conv71 = zext i16 %conv70 to i32
  %shl72 = shl i32 %conv71, 8
  %or73 = or i32 %shr67, %shl72
  %idxprom74 = sext i32 %or73 to i64
  %arrayidx75 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom74
  %i11 = load i32, i32* %arrayidx75, align 4
  %inc76 = add i32 %i11, 1
  store i32 %inc76, i32* %arrayidx75, align 4
  br label %for.inc77

for.inc77:                                        ; preds = %for.body64
  %dec78 = add nsw i32 %i.2, -1
  br label %for.cond61

for.end79:                                        ; preds = %for.cond61
  br label %for.cond80

for.cond80:                                       ; preds = %for.inc91, %for.end79
  %i.3 = phi i32 [ 0, %for.end79 ], [ %inc92, %for.inc91 ]
  %cmp81 = icmp slt i32 %i.3, 34
  br i1 %cmp81, label %for.body83, label %for.end93

for.body83:                                       ; preds = %for.cond80
  %idxprom84 = sext i32 %i.3 to i64
  %arrayidx85 = getelementptr inbounds i8, i8* %block, i64 %idxprom84
  %i12 = load i8, i8* %arrayidx85, align 1
  %add = add nsw i32 %nblock, %i.3
  %idxprom86 = sext i32 %add to i64
  %arrayidx87 = getelementptr inbounds i8, i8* %block, i64 %idxprom86
  store i8 %i12, i8* %arrayidx87, align 1
  %add88 = add nsw i32 %nblock, %i.3
  %idxprom89 = sext i32 %add88 to i64
  %arrayidx90 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom89
  store i16 0, i16* %arrayidx90, align 2
  br label %for.inc91

for.inc91:                                        ; preds = %for.body83
  %inc92 = add nsw i32 %i.3, 1
  br label %for.cond80

for.end93:                                        ; preds = %for.cond80
  %cmp94 = icmp sge i32 %verb, 4
  br i1 %cmp94, label %if.then96, label %if.end98

if.then96:                                        ; preds = %for.end93
  %i13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call97 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i13, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.37, i64 0, i64 0))
  br label %if.end98

if.end98:                                         ; preds = %if.then96, %for.end93
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc109, %if.end98
  %i.4 = phi i32 [ 1, %if.end98 ], [ %inc110, %for.inc109 ]
  %cmp100 = icmp sle i32 %i.4, 65536
  br i1 %cmp100, label %for.body102, label %for.end111

for.body102:                                      ; preds = %for.cond99
  %sub103 = sub nsw i32 %i.4, 1
  %idxprom104 = sext i32 %sub103 to i64
  %arrayidx105 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom104
  %i14 = load i32, i32* %arrayidx105, align 4
  %idxprom106 = sext i32 %i.4 to i64
  %arrayidx107 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom106
  %i15 = load i32, i32* %arrayidx107, align 4
  %add108 = add i32 %i15, %i14
  store i32 %add108, i32* %arrayidx107, align 4
  br label %for.inc109

for.inc109:                                       ; preds = %for.body102
  %inc110 = add nsw i32 %i.4, 1
  br label %for.cond99

for.end111:                                       ; preds = %for.cond99
  %arrayidx112 = getelementptr inbounds i8, i8* %block, i64 0
  %i16 = load i8, i8* %arrayidx112, align 1
  %conv113 = zext i8 %i16 to i32
  %shl114 = shl i32 %conv113, 8
  %conv115 = trunc i32 %shl114 to i16
  %sub116 = sub nsw i32 %nblock, 1
  br label %for.cond117

for.cond117:                                      ; preds = %for.inc187, %for.end111
  %i.5 = phi i32 [ %sub116, %for.end111 ], [ %sub188, %for.inc187 ]
  %s.0 = phi i16 [ %conv115, %for.end111 ], [ %conv178, %for.inc187 ]
  %cmp118 = icmp sge i32 %i.5, 3
  br i1 %cmp118, label %for.body120, label %for.end189

for.body120:                                      ; preds = %for.cond117
  %conv121 = zext i16 %s.0 to i32
  %shr122 = ashr i32 %conv121, 8
  %idxprom123 = sext i32 %i.5 to i64
  %arrayidx124 = getelementptr inbounds i8, i8* %block, i64 %idxprom123
  %i17 = load i8, i8* %arrayidx124, align 1
  %conv125 = zext i8 %i17 to i32
  %shl126 = shl i32 %conv125, 8
  %or127 = or i32 %shr122, %shl126
  %conv128 = trunc i32 %or127 to i16
  %idxprom129 = zext i16 %conv128 to i64
  %arrayidx130 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom129
  %i18 = load i32, i32* %arrayidx130, align 4
  %sub131 = sub i32 %i18, 1
  %idxprom132 = zext i16 %conv128 to i64
  %arrayidx133 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom132
  store i32 %sub131, i32* %arrayidx133, align 4
  %idxprom134 = sext i32 %sub131 to i64
  %arrayidx135 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom134
  store i32 %i.5, i32* %arrayidx135, align 4
  %conv136 = zext i16 %conv128 to i32
  %shr137 = ashr i32 %conv136, 8
  %sub138 = sub nsw i32 %i.5, 1
  %idxprom139 = sext i32 %sub138 to i64
  %arrayidx140 = getelementptr inbounds i8, i8* %block, i64 %idxprom139
  %i19 = load i8, i8* %arrayidx140, align 1
  %conv141 = zext i8 %i19 to i32
  %shl142 = shl i32 %conv141, 8
  %or143 = or i32 %shr137, %shl142
  %conv144 = trunc i32 %or143 to i16
  %idxprom145 = zext i16 %conv144 to i64
  %arrayidx146 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom145
  %i20 = load i32, i32* %arrayidx146, align 4
  %sub147 = sub i32 %i20, 1
  %idxprom148 = zext i16 %conv144 to i64
  %arrayidx149 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom148
  store i32 %sub147, i32* %arrayidx149, align 4
  %sub150 = sub nsw i32 %i.5, 1
  %idxprom151 = sext i32 %sub147 to i64
  %arrayidx152 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom151
  store i32 %sub150, i32* %arrayidx152, align 4
  %conv153 = zext i16 %conv144 to i32
  %shr154 = ashr i32 %conv153, 8
  %sub155 = sub nsw i32 %i.5, 2
  %idxprom156 = sext i32 %sub155 to i64
  %arrayidx157 = getelementptr inbounds i8, i8* %block, i64 %idxprom156
  %i21 = load i8, i8* %arrayidx157, align 1
  %conv158 = zext i8 %i21 to i32
  %shl159 = shl i32 %conv158, 8
  %or160 = or i32 %shr154, %shl159
  %conv161 = trunc i32 %or160 to i16
  %idxprom162 = zext i16 %conv161 to i64
  %arrayidx163 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom162
  %i22 = load i32, i32* %arrayidx163, align 4
  %sub164 = sub i32 %i22, 1
  %idxprom165 = zext i16 %conv161 to i64
  %arrayidx166 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom165
  store i32 %sub164, i32* %arrayidx166, align 4
  %sub167 = sub nsw i32 %i.5, 2
  %idxprom168 = sext i32 %sub164 to i64
  %arrayidx169 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom168
  store i32 %sub167, i32* %arrayidx169, align 4
  %conv170 = zext i16 %conv161 to i32
  %shr171 = ashr i32 %conv170, 8
  %sub172 = sub nsw i32 %i.5, 3
  %idxprom173 = sext i32 %sub172 to i64
  %arrayidx174 = getelementptr inbounds i8, i8* %block, i64 %idxprom173
  %i23 = load i8, i8* %arrayidx174, align 1
  %conv175 = zext i8 %i23 to i32
  %shl176 = shl i32 %conv175, 8
  %or177 = or i32 %shr171, %shl176
  %conv178 = trunc i32 %or177 to i16
  %idxprom179 = zext i16 %conv178 to i64
  %arrayidx180 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom179
  %i24 = load i32, i32* %arrayidx180, align 4
  %sub181 = sub i32 %i24, 1
  %idxprom182 = zext i16 %conv178 to i64
  %arrayidx183 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom182
  store i32 %sub181, i32* %arrayidx183, align 4
  %sub184 = sub nsw i32 %i.5, 3
  %idxprom185 = sext i32 %sub181 to i64
  %arrayidx186 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom185
  store i32 %sub184, i32* %arrayidx186, align 4
  br label %for.inc187

for.inc187:                                       ; preds = %for.body120
  %sub188 = sub nsw i32 %i.5, 4
  br label %for.cond117

for.end189:                                       ; preds = %for.cond117
  br label %for.cond190

for.cond190:                                      ; preds = %for.inc209, %for.end189
  %i.6 = phi i32 [ %i.5, %for.end189 ], [ %dec210, %for.inc209 ]
  %s.1 = phi i16 [ %s.0, %for.end189 ], [ %conv201, %for.inc209 ]
  %cmp191 = icmp sge i32 %i.6, 0
  br i1 %cmp191, label %for.body193, label %for.end211

for.body193:                                      ; preds = %for.cond190
  %conv194 = zext i16 %s.1 to i32
  %shr195 = ashr i32 %conv194, 8
  %idxprom196 = sext i32 %i.6 to i64
  %arrayidx197 = getelementptr inbounds i8, i8* %block, i64 %idxprom196
  %i25 = load i8, i8* %arrayidx197, align 1
  %conv198 = zext i8 %i25 to i32
  %shl199 = shl i32 %conv198, 8
  %or200 = or i32 %shr195, %shl199
  %conv201 = trunc i32 %or200 to i16
  %idxprom202 = zext i16 %conv201 to i64
  %arrayidx203 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom202
  %i26 = load i32, i32* %arrayidx203, align 4
  %sub204 = sub i32 %i26, 1
  %idxprom205 = zext i16 %conv201 to i64
  %arrayidx206 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom205
  store i32 %sub204, i32* %arrayidx206, align 4
  %idxprom207 = sext i32 %sub204 to i64
  %arrayidx208 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom207
  store i32 %i.6, i32* %arrayidx208, align 4
  br label %for.inc209

for.inc209:                                       ; preds = %for.body193
  %dec210 = add nsw i32 %i.6, -1
  br label %for.cond190

for.end211:                                       ; preds = %for.cond190
  br label %for.cond212

for.cond212:                                      ; preds = %for.inc220, %for.end211
  %i.7 = phi i32 [ 0, %for.end211 ], [ %inc221, %for.inc220 ]
  %cmp213 = icmp sle i32 %i.7, 255
  br i1 %cmp213, label %for.body215, label %for.end222

for.body215:                                      ; preds = %for.cond212
  %idxprom216 = sext i32 %i.7 to i64
  %arrayidx217 = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone, i64 0, i64 %idxprom216
  store i8 0, i8* %arrayidx217, align 1
  %idxprom218 = sext i32 %i.7 to i64
  %arrayidx219 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom218
  store i32 %i.7, i32* %arrayidx219, align 4
  br label %for.inc220

for.inc220:                                       ; preds = %for.body215
  %inc221 = add nsw i32 %i.7, 1
  br label %for.cond212

for.end222:                                       ; preds = %for.cond212
  br label %do.body

do.body:                                          ; preds = %do.cond, %for.end222
  %h.0 = phi i32 [ 1, %for.end222 ], [ %add223, %do.cond ]
  %mul = mul nsw i32 3, %h.0
  %add223 = add nsw i32 %mul, 1
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %cmp224 = icmp sle i32 %add223, 256
  br i1 %cmp224, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %do.body226

do.body226:                                       ; preds = %do.cond273, %do.end
  %h.1 = phi i32 [ %add223, %do.end ], [ %div, %do.cond273 ]
  %div = sdiv i32 %h.1, 3
  br label %for.cond227

for.cond227:                                      ; preds = %for.inc270, %do.body226
  %i.8 = phi i32 [ %div, %do.body226 ], [ %inc271, %for.inc270 ]
  %cmp228 = icmp sle i32 %i.8, 255
  br i1 %cmp228, label %for.body230, label %for.end272

for.body230:                                      ; preds = %for.cond227
  %idxprom231 = sext i32 %i.8 to i64
  %arrayidx232 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom231
  %i27 = load i32, i32* %arrayidx232, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end267, %for.body230
  %j.2 = phi i32 [ %i.8, %for.body230 ], [ %sub262, %if.end267 ]
  %sub233 = sub nsw i32 %j.2, %div
  %idxprom234 = sext i32 %sub233 to i64
  %arrayidx235 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom234
  %i28 = load i32, i32* %arrayidx235, align 4
  %add236 = add nsw i32 %i28, 1
  %shl237 = shl i32 %add236, 8
  %idxprom238 = sext i32 %shl237 to i64
  %arrayidx239 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom238
  %i29 = load i32, i32* %arrayidx239, align 4
  %sub240 = sub nsw i32 %j.2, %div
  %idxprom241 = sext i32 %sub240 to i64
  %arrayidx242 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom241
  %i30 = load i32, i32* %arrayidx242, align 4
  %shl243 = shl i32 %i30, 8
  %idxprom244 = sext i32 %shl243 to i64
  %arrayidx245 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom244
  %i31 = load i32, i32* %arrayidx245, align 4
  %sub246 = sub i32 %i29, %i31
  %add247 = add nsw i32 %i27, 1
  %shl248 = shl i32 %add247, 8
  %idxprom249 = sext i32 %shl248 to i64
  %arrayidx250 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom249
  %i32 = load i32, i32* %arrayidx250, align 4
  %shl251 = shl i32 %i27, 8
  %idxprom252 = sext i32 %shl251 to i64
  %arrayidx253 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom252
  %i33 = load i32, i32* %arrayidx253, align 4
  %sub254 = sub i32 %i32, %i33
  %cmp255 = icmp ugt i32 %sub246, %sub254
  br i1 %cmp255, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %sub257 = sub nsw i32 %j.2, %div
  %idxprom258 = sext i32 %sub257 to i64
  %arrayidx259 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom258
  %i34 = load i32, i32* %arrayidx259, align 4
  %idxprom260 = sext i32 %j.2 to i64
  %arrayidx261 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom260
  store i32 %i34, i32* %arrayidx261, align 4
  %sub262 = sub nsw i32 %j.2, %div
  %sub263 = sub nsw i32 %div, 1
  %cmp264 = icmp sle i32 %sub262, %sub263
  br i1 %cmp264, label %if.then266, label %if.end267

if.then266:                                       ; preds = %while.body
  br label %zero

if.end267:                                        ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %zero

zero:                                             ; preds = %while.end, %if.then266
  %j.3 = phi i32 [ %sub262, %if.then266 ], [ %j.2, %while.end ]
  %idxprom268 = sext i32 %j.3 to i64
  %arrayidx269 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom268
  store i32 %i27, i32* %arrayidx269, align 4
  br label %for.inc270

for.inc270:                                       ; preds = %zero
  %inc271 = add nsw i32 %i.8, 1
  br label %for.cond227

for.end272:                                       ; preds = %for.cond227
  br label %do.cond273

do.cond273:                                       ; preds = %for.end272
  %cmp274 = icmp ne i32 %div, 1
  br i1 %cmp274, label %do.body226, label %do.end276

do.end276:                                        ; preds = %do.cond273
  br label %for.cond277

for.cond277:                                      ; preds = %for.inc506, %do.end276
  %i.9 = phi i32 [ 0, %do.end276 ], [ %inc507, %for.inc506 ]
  %numQSorted.0 = phi i32 [ 0, %do.end276 ], [ %numQSorted.1, %for.inc506 ]
  %cmp278 = icmp sle i32 %i.9, 255
  br i1 %cmp278, label %for.body280, label %for.end508

for.body280:                                      ; preds = %for.cond277
  %idxprom281 = sext i32 %i.9 to i64
  %arrayidx282 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder, i64 0, i64 %idxprom281
  %i35 = load i32, i32* %arrayidx282, align 4
  br label %for.cond283

for.cond283:                                      ; preds = %for.inc326, %for.body280
  %j.4 = phi i32 [ 0, %for.body280 ], [ %inc327, %for.inc326 ]
  %numQSorted.1 = phi i32 [ %numQSorted.0, %for.body280 ], [ %numQSorted.4, %for.inc326 ]
  %cmp284 = icmp sle i32 %j.4, 255
  br i1 %cmp284, label %for.body286, label %for.end328

for.body286:                                      ; preds = %for.cond283
  %cmp287 = icmp ne i32 %j.4, %i35
  br i1 %cmp287, label %if.then289, label %if.end325

if.then289:                                       ; preds = %for.body286
  %shl290 = shl i32 %i35, 8
  %add291 = add nsw i32 %shl290, %j.4
  %idxprom292 = sext i32 %add291 to i64
  %arrayidx293 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom292
  %i36 = load i32, i32* %arrayidx293, align 4
  %and = and i32 %i36, 2097152
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end321, label %if.then294

if.then294:                                       ; preds = %if.then289
  %idxprom295 = sext i32 %add291 to i64
  %arrayidx296 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom295
  %i37 = load i32, i32* %arrayidx296, align 4
  %and297 = and i32 %i37, -2097153
  %add298 = add nsw i32 %add291, 1
  %idxprom299 = sext i32 %add298 to i64
  %arrayidx300 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom299
  %i38 = load i32, i32* %arrayidx300, align 4
  %and301 = and i32 %i38, -2097153
  %sub302 = sub i32 %and301, 1
  %cmp303 = icmp sgt i32 %sub302, %and297
  br i1 %cmp303, label %if.then305, label %if.end320

if.then305:                                       ; preds = %if.then294
  %cmp306 = icmp sge i32 %verb, 4
  br i1 %cmp306, label %if.then308, label %if.end312

if.then308:                                       ; preds = %if.then305
  %i39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %sub309 = sub nsw i32 %sub302, %and297
  %add310 = add nsw i32 %sub309, 1
  %call311 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i39, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7.38, i64 0, i64 0), i32 %i35, i32 %j.4, i32 %numQSorted.1, i32 %add310)
  br label %if.end312

if.end312:                                        ; preds = %if.then308, %if.then305
  call void @mainQSort3(i32* %ptr, i8* %block, i16* %quadrant, i32 %nblock, i32 %and297, i32 %sub302, i32 2, i32* %budget)
  %sub313 = sub nsw i32 %sub302, %and297
  %add314 = add nsw i32 %sub313, 1
  %add315 = add nsw i32 %numQSorted.1, %add314
  %i40 = load i32, i32* %budget, align 4
  %cmp316 = icmp slt i32 %i40, 0
  br i1 %cmp316, label %if.then318, label %if.end319

if.then318:                                       ; preds = %if.end312
  br label %if.end514

if.end319:                                        ; preds = %if.end312
  br label %if.end320

if.end320:                                        ; preds = %if.end319, %if.then294
  %numQSorted.2 = phi i32 [ %add315, %if.end319 ], [ %numQSorted.1, %if.then294 ]
  br label %if.end321

if.end321:                                        ; preds = %if.end320, %if.then289
  %numQSorted.3 = phi i32 [ %numQSorted.1, %if.then289 ], [ %numQSorted.2, %if.end320 ]
  %idxprom322 = sext i32 %add291 to i64
  %arrayidx323 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom322
  %i41 = load i32, i32* %arrayidx323, align 4
  %or324 = or i32 %i41, 2097152
  store i32 %or324, i32* %arrayidx323, align 4
  br label %if.end325

if.end325:                                        ; preds = %if.end321, %for.body286
  %numQSorted.4 = phi i32 [ %numQSorted.3, %if.end321 ], [ %numQSorted.1, %for.body286 ]
  br label %for.inc326

for.inc326:                                       ; preds = %if.end325
  %inc327 = add nsw i32 %j.4, 1
  br label %for.cond283

for.end328:                                       ; preds = %for.cond283
  %idxprom329 = sext i32 %i35 to i64
  %arrayidx330 = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone, i64 0, i64 %idxprom329
  %i42 = load i8, i8* %arrayidx330, align 1
  %tobool331 = icmp ne i8 %i42, 0
  br i1 %tobool331, label %if.then332, label %if.end333

if.then332:                                       ; preds = %for.end328
  call void @BZ2_bz__AssertH__fail(i32 1006)
  br label %if.end333

if.end333:                                        ; preds = %if.then332, %for.end328
  br label %for.cond334

for.cond334:                                      ; preds = %for.inc354, %if.end333
  %j.5 = phi i32 [ 0, %if.end333 ], [ %inc355, %for.inc354 ]
  %cmp335 = icmp sle i32 %j.5, 255
  br i1 %cmp335, label %for.body337, label %for.end356

for.body337:                                      ; preds = %for.cond334
  %shl338 = shl i32 %j.5, 8
  %add339 = add nsw i32 %shl338, %i35
  %idxprom340 = sext i32 %add339 to i64
  %arrayidx341 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom340
  %i43 = load i32, i32* %arrayidx341, align 4
  %and342 = and i32 %i43, -2097153
  %idxprom343 = sext i32 %j.5 to i64
  %arrayidx344 = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart, i64 0, i64 %idxprom343
  store i32 %and342, i32* %arrayidx344, align 4
  %shl345 = shl i32 %j.5, 8
  %add346 = add nsw i32 %shl345, %i35
  %add347 = add nsw i32 %add346, 1
  %idxprom348 = sext i32 %add347 to i64
  %arrayidx349 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom348
  %i44 = load i32, i32* %arrayidx349, align 4
  %and350 = and i32 %i44, -2097153
  %sub351 = sub i32 %and350, 1
  %idxprom352 = sext i32 %j.5 to i64
  %arrayidx353 = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd, i64 0, i64 %idxprom352
  store i32 %sub351, i32* %arrayidx353, align 4
  br label %for.inc354

for.inc354:                                       ; preds = %for.body337
  %inc355 = add nsw i32 %j.5, 1
  br label %for.cond334

for.end356:                                       ; preds = %for.cond334
  %shl357 = shl i32 %i35, 8
  %idxprom358 = sext i32 %shl357 to i64
  %arrayidx359 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom358
  %i45 = load i32, i32* %arrayidx359, align 4
  %and360 = and i32 %i45, -2097153
  br label %for.cond361

for.cond361:                                      ; preds = %for.inc387, %for.end356
  %j.6 = phi i32 [ %and360, %for.end356 ], [ %inc388, %for.inc387 ]
  %idxprom362 = sext i32 %i35 to i64
  %arrayidx363 = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart, i64 0, i64 %idxprom362
  %i46 = load i32, i32* %arrayidx363, align 4
  %cmp364 = icmp slt i32 %j.6, %i46
  br i1 %cmp364, label %for.body366, label %for.end389

for.body366:                                      ; preds = %for.cond361
  %idxprom367 = sext i32 %j.6 to i64
  %arrayidx368 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom367
  %i47 = load i32, i32* %arrayidx368, align 4
  %sub369 = sub i32 %i47, 1
  %cmp370 = icmp slt i32 %sub369, 0
  br i1 %cmp370, label %if.then372, label %if.end374

if.then372:                                       ; preds = %for.body366
  %add373 = add nsw i32 %sub369, %nblock
  br label %if.end374

if.end374:                                        ; preds = %if.then372, %for.body366
  %k.0 = phi i32 [ %add373, %if.then372 ], [ %sub369, %for.body366 ]
  %idxprom375 = sext i32 %k.0 to i64
  %arrayidx376 = getelementptr inbounds i8, i8* %block, i64 %idxprom375
  %i48 = load i8, i8* %arrayidx376, align 1
  %idxprom377 = zext i8 %i48 to i64
  %arrayidx378 = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone, i64 0, i64 %idxprom377
  %i49 = load i8, i8* %arrayidx378, align 1
  %tobool379 = icmp ne i8 %i49, 0
  br i1 %tobool379, label %if.end386, label %if.then380

if.then380:                                       ; preds = %if.end374
  %idxprom381 = zext i8 %i48 to i64
  %arrayidx382 = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart, i64 0, i64 %idxprom381
  %i50 = load i32, i32* %arrayidx382, align 4
  %inc383 = add nsw i32 %i50, 1
  store i32 %inc383, i32* %arrayidx382, align 4
  %idxprom384 = sext i32 %i50 to i64
  %arrayidx385 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom384
  store i32 %k.0, i32* %arrayidx385, align 4
  br label %if.end386

if.end386:                                        ; preds = %if.then380, %if.end374
  br label %for.inc387

for.inc387:                                       ; preds = %if.end386
  %inc388 = add nsw i32 %j.6, 1
  br label %for.cond361

for.end389:                                       ; preds = %for.cond361
  %add390 = add nsw i32 %i35, 1
  %shl391 = shl i32 %add390, 8
  %idxprom392 = sext i32 %shl391 to i64
  %arrayidx393 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom392
  %i51 = load i32, i32* %arrayidx393, align 4
  %and394 = and i32 %i51, -2097153
  %sub395 = sub i32 %and394, 1
  br label %for.cond396

for.cond396:                                      ; preds = %for.inc422, %for.end389
  %j.7 = phi i32 [ %sub395, %for.end389 ], [ %dec423, %for.inc422 ]
  %idxprom397 = sext i32 %i35 to i64
  %arrayidx398 = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd, i64 0, i64 %idxprom397
  %i52 = load i32, i32* %arrayidx398, align 4
  %cmp399 = icmp sgt i32 %j.7, %i52
  br i1 %cmp399, label %for.body401, label %for.end424

for.body401:                                      ; preds = %for.cond396
  %idxprom402 = sext i32 %j.7 to i64
  %arrayidx403 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom402
  %i53 = load i32, i32* %arrayidx403, align 4
  %sub404 = sub i32 %i53, 1
  %cmp405 = icmp slt i32 %sub404, 0
  br i1 %cmp405, label %if.then407, label %if.end409

if.then407:                                       ; preds = %for.body401
  %add408 = add nsw i32 %sub404, %nblock
  br label %if.end409

if.end409:                                        ; preds = %if.then407, %for.body401
  %k.1 = phi i32 [ %add408, %if.then407 ], [ %sub404, %for.body401 ]
  %idxprom410 = sext i32 %k.1 to i64
  %arrayidx411 = getelementptr inbounds i8, i8* %block, i64 %idxprom410
  %i54 = load i8, i8* %arrayidx411, align 1
  %idxprom412 = zext i8 %i54 to i64
  %arrayidx413 = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone, i64 0, i64 %idxprom412
  %i55 = load i8, i8* %arrayidx413, align 1
  %tobool414 = icmp ne i8 %i55, 0
  br i1 %tobool414, label %if.end421, label %if.then415

if.then415:                                       ; preds = %if.end409
  %idxprom416 = zext i8 %i54 to i64
  %arrayidx417 = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd, i64 0, i64 %idxprom416
  %i56 = load i32, i32* %arrayidx417, align 4
  %dec418 = add nsw i32 %i56, -1
  store i32 %dec418, i32* %arrayidx417, align 4
  %idxprom419 = sext i32 %i56 to i64
  %arrayidx420 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom419
  store i32 %k.1, i32* %arrayidx420, align 4
  br label %if.end421

if.end421:                                        ; preds = %if.then415, %if.end409
  br label %for.inc422

for.inc422:                                       ; preds = %if.end421
  %dec423 = add nsw i32 %j.7, -1
  br label %for.cond396

for.end424:                                       ; preds = %for.cond396
  %idxprom425 = sext i32 %i35 to i64
  %arrayidx426 = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart, i64 0, i64 %idxprom425
  %i57 = load i32, i32* %arrayidx426, align 4
  %sub427 = sub nsw i32 %i57, 1
  %idxprom428 = sext i32 %i35 to i64
  %arrayidx429 = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd, i64 0, i64 %idxprom428
  %i58 = load i32, i32* %arrayidx429, align 4
  %cmp430 = icmp eq i32 %sub427, %i58
  br i1 %cmp430, label %if.end442, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end424
  %idxprom432 = sext i32 %i35 to i64
  %arrayidx433 = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart, i64 0, i64 %idxprom432
  %i59 = load i32, i32* %arrayidx433, align 4
  %cmp434 = icmp eq i32 %i59, 0
  br i1 %cmp434, label %land.lhs.true, label %if.then441

land.lhs.true:                                    ; preds = %lor.lhs.false
  %idxprom436 = sext i32 %i35 to i64
  %arrayidx437 = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd, i64 0, i64 %idxprom436
  %i60 = load i32, i32* %arrayidx437, align 4
  %sub438 = sub nsw i32 %nblock, 1
  %cmp439 = icmp eq i32 %i60, %sub438
  br i1 %cmp439, label %if.end442, label %if.then441

if.then441:                                       ; preds = %land.lhs.true, %lor.lhs.false
  call void @BZ2_bz__AssertH__fail(i32 1007)
  br label %if.end442

if.end442:                                        ; preds = %if.then441, %land.lhs.true, %for.end424
  br label %for.cond443

for.cond443:                                      ; preds = %for.inc452, %if.end442
  %j.8 = phi i32 [ 0, %if.end442 ], [ %inc453, %for.inc452 ]
  %cmp444 = icmp sle i32 %j.8, 255
  br i1 %cmp444, label %for.body446, label %for.end454

for.body446:                                      ; preds = %for.cond443
  %shl447 = shl i32 %j.8, 8
  %add448 = add nsw i32 %shl447, %i35
  %idxprom449 = sext i32 %add448 to i64
  %arrayidx450 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom449
  %i61 = load i32, i32* %arrayidx450, align 4
  %or451 = or i32 %i61, 2097152
  store i32 %or451, i32* %arrayidx450, align 4
  br label %for.inc452

for.inc452:                                       ; preds = %for.body446
  %inc453 = add nsw i32 %j.8, 1
  br label %for.cond443

for.end454:                                       ; preds = %for.cond443
  %idxprom455 = sext i32 %i35 to i64
  %arrayidx456 = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone, i64 0, i64 %idxprom455
  store i8 1, i8* %arrayidx456, align 1
  %cmp457 = icmp slt i32 %i.9, 255
  br i1 %cmp457, label %if.then459, label %if.end505

if.then459:                                       ; preds = %for.end454
  %shl460 = shl i32 %i35, 8
  %idxprom461 = sext i32 %shl460 to i64
  %arrayidx462 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom461
  %i62 = load i32, i32* %arrayidx462, align 4
  %and463 = and i32 %i62, -2097153
  %add464 = add nsw i32 %i35, 1
  %shl465 = shl i32 %add464, 8
  %idxprom466 = sext i32 %shl465 to i64
  %arrayidx467 = getelementptr inbounds i32, i32* %ftab, i64 %idxprom466
  %i63 = load i32, i32* %arrayidx467, align 4
  %and468 = and i32 %i63, -2097153
  %sub469 = sub i32 %and468, %and463
  br label %while.cond470

while.cond470:                                    ; preds = %while.body474, %if.then459
  %shifts.0 = phi i32 [ 0, %if.then459 ], [ %inc475, %while.body474 ]
  %shr471 = ashr i32 %sub469, %shifts.0
  %cmp472 = icmp sgt i32 %shr471, 65534
  br i1 %cmp472, label %while.body474, label %while.end476

while.body474:                                    ; preds = %while.cond470
  %inc475 = add nsw i32 %shifts.0, 1
  br label %while.cond470

while.end476:                                     ; preds = %while.cond470
  %sub477 = sub nsw i32 %sub469, 1
  br label %for.cond478

for.cond478:                                      ; preds = %for.inc496, %while.end476
  %j.9 = phi i32 [ %sub477, %while.end476 ], [ %dec497, %for.inc496 ]
  %cmp479 = icmp sge i32 %j.9, 0
  br i1 %cmp479, label %for.body481, label %for.end498

for.body481:                                      ; preds = %for.cond478
  %add482 = add nsw i32 %and463, %j.9
  %idxprom483 = sext i32 %add482 to i64
  %arrayidx484 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom483
  %i64 = load i32, i32* %arrayidx484, align 4
  %shr485 = ashr i32 %j.9, %shifts.0
  %conv486 = trunc i32 %shr485 to i16
  %idxprom487 = sext i32 %i64 to i64
  %arrayidx488 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom487
  store i16 %conv486, i16* %arrayidx488, align 2
  %cmp489 = icmp slt i32 %i64, 34
  br i1 %cmp489, label %if.then491, label %if.end495

if.then491:                                       ; preds = %for.body481
  %add492 = add nsw i32 %i64, %nblock
  %idxprom493 = sext i32 %add492 to i64
  %arrayidx494 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom493
  store i16 %conv486, i16* %arrayidx494, align 2
  br label %if.end495

if.end495:                                        ; preds = %if.then491, %for.body481
  br label %for.inc496

for.inc496:                                       ; preds = %if.end495
  %dec497 = add nsw i32 %j.9, -1
  br label %for.cond478

for.end498:                                       ; preds = %for.cond478
  %sub499 = sub nsw i32 %sub469, 1
  %shr500 = ashr i32 %sub499, %shifts.0
  %cmp501 = icmp sle i32 %shr500, 65535
  br i1 %cmp501, label %if.end504, label %if.then503

if.then503:                                       ; preds = %for.end498
  call void @BZ2_bz__AssertH__fail(i32 1002)
  br label %if.end504

if.end504:                                        ; preds = %if.then503, %for.end498
  br label %if.end505

if.end505:                                        ; preds = %if.end504, %for.end454
  br label %for.inc506

for.inc506:                                       ; preds = %if.end505
  %inc507 = add nsw i32 %i.9, 1
  br label %for.cond277

for.end508:                                       ; preds = %for.cond277
  %cmp509 = icmp sge i32 %verb, 4
  br i1 %cmp509, label %if.then511, label %if.end514

if.then511:                                       ; preds = %for.end508
  %i65 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %sub512 = sub nsw i32 %nblock, %numQSorted.0
  %call513 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i65, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8.39, i64 0, i64 0), i32 %nblock, i32 %numQSorted.0, i32 %sub512)
  br label %if.end514

if.end514:                                        ; preds = %if.then511, %for.end508, %if.then318
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @mainQSort3(i32* %ptr, i8* %block, i16* %quadrant, i32 %nblock, i32 %loSt, i32 %hiSt, i32 %dSt, i32* %budget) #0 {
entry:
  %stackLo = alloca [100 x i32], align 16
  %stackHi = alloca [100 x i32], align 16
  %stackD = alloca [100 x i32], align 16
  %nextLo = alloca [3 x i32], align 4
  %nextHi = alloca [3 x i32], align 4
  %nextD = alloca [3 x i32], align 4
  %idxprom = sext i32 0 to i64
  %arrayidx = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom
  store i32 %loSt, i32* %arrayidx, align 4
  %idxprom1 = sext i32 0 to i64
  %arrayidx2 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom1
  store i32 %hiSt, i32* %arrayidx2, align 4
  %idxprom3 = sext i32 0 to i64
  %arrayidx4 = getelementptr inbounds [100 x i32], [100 x i32]* %stackD, i64 0, i64 %idxprom3
  store i32 %dSt, i32* %arrayidx4, align 4
  %inc = add nsw i32 0, 1
  br label %while.cond

while.cond:                                       ; preds = %if.end271, %if.then120, %if.end17, %entry
  %sp.0 = phi i32 [ %inc, %entry ], [ %dec, %if.end17 ], [ %inc128, %if.then120 ], [ %inc301, %if.end271 ]
  %cmp = icmp sgt i32 %sp.0, 0
  br i1 %cmp, label %while.body, label %while.end302

while.body:                                       ; preds = %while.cond
  %cmp5 = icmp slt i32 %sp.0, 100
  br i1 %cmp5, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  call void @BZ2_bz__AssertH__fail(i32 1001)
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %dec = add nsw i32 %sp.0, -1
  %idxprom6 = sext i32 %dec to i64
  %arrayidx7 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom6
  %i = load i32, i32* %arrayidx7, align 4
  %idxprom8 = sext i32 %dec to i64
  %arrayidx9 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom8
  %i1 = load i32, i32* %arrayidx9, align 4
  %idxprom10 = sext i32 %dec to i64
  %arrayidx11 = getelementptr inbounds [100 x i32], [100 x i32]* %stackD, i64 0, i64 %idxprom10
  %i2 = load i32, i32* %arrayidx11, align 4
  %sub = sub nsw i32 %i1, %i
  %cmp12 = icmp slt i32 %sub, 20
  br i1 %cmp12, label %if.then14, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %cmp13 = icmp sgt i32 %i2, 14
  br i1 %cmp13, label %if.then14, label %if.end18

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @mainSimpleSort(i32* %ptr, i8* %block, i16* %quadrant, i32 %nblock, i32 %i, i32 %i1, i32 %i2, i32* %budget)
  %i3 = load i32, i32* %budget, align 4
  %cmp15 = icmp slt i32 %i3, 0
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.then14
  br label %while.end302

if.end17:                                         ; preds = %if.then14
  br label %while.cond

if.end18:                                         ; preds = %lor.lhs.false
  %idxprom19 = sext i32 %i to i64
  %arrayidx20 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom19
  %i4 = load i32, i32* %arrayidx20, align 4
  %add = add i32 %i4, %i2
  %idxprom21 = zext i32 %add to i64
  %arrayidx22 = getelementptr inbounds i8, i8* %block, i64 %idxprom21
  %i5 = load i8, i8* %arrayidx22, align 1
  %idxprom23 = sext i32 %i1 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom23
  %i6 = load i32, i32* %arrayidx24, align 4
  %add25 = add i32 %i6, %i2
  %idxprom26 = zext i32 %add25 to i64
  %arrayidx27 = getelementptr inbounds i8, i8* %block, i64 %idxprom26
  %i7 = load i8, i8* %arrayidx27, align 1
  %add28 = add nsw i32 %i, %i1
  %shr = ashr i32 %add28, 1
  %idxprom29 = sext i32 %shr to i64
  %arrayidx30 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom29
  %i8 = load i32, i32* %arrayidx30, align 4
  %add31 = add i32 %i8, %i2
  %idxprom32 = zext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds i8, i8* %block, i64 %idxprom32
  %i9 = load i8, i8* %arrayidx33, align 1
  %call = call zeroext i8 @mmed3(i8 zeroext %i5, i8 zeroext %i7, i8 zeroext %i9)
  %conv = zext i8 %call to i32
  br label %while.body35

while.body35:                                     ; preds = %if.end105, %if.end18
  %gtHi.0 = phi i32 [ %i1, %if.end18 ], [ %gtHi.1, %if.end105 ]
  %ltLo.0 = phi i32 [ %i, %if.end18 ], [ %ltLo.1, %if.end105 ]
  %unHi.0 = phi i32 [ %i1, %if.end18 ], [ %dec116, %if.end105 ]
  %unLo.0 = phi i32 [ %i, %if.end18 ], [ %inc115, %if.end105 ]
  br label %while.body37

while.body37:                                     ; preds = %if.end66, %if.then51, %while.body35
  %ltLo.1 = phi i32 [ %ltLo.0, %while.body35 ], [ %inc60, %if.then51 ], [ %ltLo.1, %if.end66 ]
  %unLo.1 = phi i32 [ %unLo.0, %while.body35 ], [ %inc61, %if.then51 ], [ %inc67, %if.end66 ]
  %cmp38 = icmp sgt i32 %unLo.1, %unHi.0
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %while.body37
  br label %while.end

if.end41:                                         ; preds = %while.body37
  %idxprom42 = sext i32 %unLo.1 to i64
  %arrayidx43 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom42
  %i10 = load i32, i32* %arrayidx43, align 4
  %add44 = add i32 %i10, %i2
  %idxprom45 = zext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds i8, i8* %block, i64 %idxprom45
  %i11 = load i8, i8* %arrayidx46, align 1
  %conv47 = zext i8 %i11 to i32
  %sub48 = sub nsw i32 %conv47, %conv
  %cmp49 = icmp eq i32 %sub48, 0
  br i1 %cmp49, label %if.then51, label %if.end62

if.then51:                                        ; preds = %if.end41
  %idxprom52 = sext i32 %unLo.1 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom52
  %i12 = load i32, i32* %arrayidx53, align 4
  %idxprom54 = sext i32 %ltLo.1 to i64
  %arrayidx55 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom54
  %i13 = load i32, i32* %arrayidx55, align 4
  %idxprom56 = sext i32 %unLo.1 to i64
  %arrayidx57 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom56
  store i32 %i13, i32* %arrayidx57, align 4
  %idxprom58 = sext i32 %ltLo.1 to i64
  %arrayidx59 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom58
  store i32 %i12, i32* %arrayidx59, align 4
  %inc60 = add nsw i32 %ltLo.1, 1
  %inc61 = add nsw i32 %unLo.1, 1
  br label %while.body37

if.end62:                                         ; preds = %if.end41
  %cmp63 = icmp sgt i32 %sub48, 0
  br i1 %cmp63, label %if.then65, label %if.end66

if.then65:                                        ; preds = %if.end62
  br label %while.end

if.end66:                                         ; preds = %if.end62
  %inc67 = add nsw i32 %unLo.1, 1
  br label %while.body37

while.end:                                        ; preds = %if.then65, %if.then40
  br label %while.body69

while.body69:                                     ; preds = %if.end99, %if.then83, %while.end
  %gtHi.1 = phi i32 [ %gtHi.0, %while.end ], [ %dec93, %if.then83 ], [ %gtHi.1, %if.end99 ]
  %unHi.1 = phi i32 [ %unHi.0, %while.end ], [ %dec94, %if.then83 ], [ %dec100, %if.end99 ]
  %cmp70 = icmp sgt i32 %unLo.1, %unHi.1
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %while.body69
  br label %while.end101

if.end73:                                         ; preds = %while.body69
  %idxprom74 = sext i32 %unHi.1 to i64
  %arrayidx75 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom74
  %i14 = load i32, i32* %arrayidx75, align 4
  %add76 = add i32 %i14, %i2
  %idxprom77 = zext i32 %add76 to i64
  %arrayidx78 = getelementptr inbounds i8, i8* %block, i64 %idxprom77
  %i15 = load i8, i8* %arrayidx78, align 1
  %conv79 = zext i8 %i15 to i32
  %sub80 = sub nsw i32 %conv79, %conv
  %cmp81 = icmp eq i32 %sub80, 0
  br i1 %cmp81, label %if.then83, label %if.end95

if.then83:                                        ; preds = %if.end73
  %idxprom85 = sext i32 %unHi.1 to i64
  %arrayidx86 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom85
  %i16 = load i32, i32* %arrayidx86, align 4
  %idxprom87 = sext i32 %gtHi.1 to i64
  %arrayidx88 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom87
  %i17 = load i32, i32* %arrayidx88, align 4
  %idxprom89 = sext i32 %unHi.1 to i64
  %arrayidx90 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom89
  store i32 %i17, i32* %arrayidx90, align 4
  %idxprom91 = sext i32 %gtHi.1 to i64
  %arrayidx92 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom91
  store i32 %i16, i32* %arrayidx92, align 4
  %dec93 = add nsw i32 %gtHi.1, -1
  %dec94 = add nsw i32 %unHi.1, -1
  br label %while.body69

if.end95:                                         ; preds = %if.end73
  %cmp96 = icmp slt i32 %sub80, 0
  br i1 %cmp96, label %if.then98, label %if.end99

if.then98:                                        ; preds = %if.end95
  br label %while.end101

if.end99:                                         ; preds = %if.end95
  %dec100 = add nsw i32 %unHi.1, -1
  br label %while.body69

while.end101:                                     ; preds = %if.then98, %if.then72
  %cmp102 = icmp sgt i32 %unLo.1, %unHi.1
  br i1 %cmp102, label %if.then104, label %if.end105

if.then104:                                       ; preds = %while.end101
  br label %while.end117

if.end105:                                        ; preds = %while.end101
  %idxprom107 = sext i32 %unLo.1 to i64
  %arrayidx108 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom107
  %i18 = load i32, i32* %arrayidx108, align 4
  %idxprom109 = sext i32 %unHi.1 to i64
  %arrayidx110 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom109
  %i19 = load i32, i32* %arrayidx110, align 4
  %idxprom111 = sext i32 %unLo.1 to i64
  %arrayidx112 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom111
  store i32 %i19, i32* %arrayidx112, align 4
  %idxprom113 = sext i32 %unHi.1 to i64
  %arrayidx114 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom113
  store i32 %i18, i32* %arrayidx114, align 4
  %inc115 = add nsw i32 %unLo.1, 1
  %dec116 = add nsw i32 %unHi.1, -1
  br label %while.body35

while.end117:                                     ; preds = %if.then104
  %cmp118 = icmp slt i32 %gtHi.1, %ltLo.1
  br i1 %cmp118, label %if.then120, label %if.end129

if.then120:                                       ; preds = %while.end117
  %idxprom121 = sext i32 %dec to i64
  %arrayidx122 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom121
  store i32 %i, i32* %arrayidx122, align 4
  %idxprom123 = sext i32 %dec to i64
  %arrayidx124 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom123
  store i32 %i1, i32* %arrayidx124, align 4
  %add125 = add nsw i32 %i2, 1
  %idxprom126 = sext i32 %dec to i64
  %arrayidx127 = getelementptr inbounds [100 x i32], [100 x i32]* %stackD, i64 0, i64 %idxprom126
  store i32 %add125, i32* %arrayidx127, align 4
  %inc128 = add nsw i32 %dec, 1
  br label %while.cond

if.end129:                                        ; preds = %while.end117
  %sub130 = sub nsw i32 %ltLo.1, %i
  %sub131 = sub nsw i32 %unLo.1, %ltLo.1
  %cmp132 = icmp slt i32 %sub130, %sub131
  br i1 %cmp132, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end129
  %sub134 = sub nsw i32 %ltLo.1, %i
  br label %cond.end

cond.false:                                       ; preds = %if.end129
  %sub135 = sub nsw i32 %unLo.1, %ltLo.1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub134, %cond.true ], [ %sub135, %cond.false ]
  %sub136 = sub nsw i32 %unLo.1, %cond
  br label %while.cond137

while.cond137:                                    ; preds = %while.body140, %cond.end
  %yyp1.0 = phi i32 [ %i, %cond.end ], [ %inc150, %while.body140 ]
  %yyp2.0 = phi i32 [ %sub136, %cond.end ], [ %inc151, %while.body140 ]
  %yyn.0 = phi i32 [ %cond, %cond.end ], [ %dec152, %while.body140 ]
  %cmp138 = icmp sgt i32 %yyn.0, 0
  br i1 %cmp138, label %while.body140, label %while.end153

while.body140:                                    ; preds = %while.cond137
  %idxprom142 = sext i32 %yyp1.0 to i64
  %arrayidx143 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom142
  %i20 = load i32, i32* %arrayidx143, align 4
  %idxprom144 = sext i32 %yyp2.0 to i64
  %arrayidx145 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom144
  %i21 = load i32, i32* %arrayidx145, align 4
  %idxprom146 = sext i32 %yyp1.0 to i64
  %arrayidx147 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom146
  store i32 %i21, i32* %arrayidx147, align 4
  %idxprom148 = sext i32 %yyp2.0 to i64
  %arrayidx149 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom148
  store i32 %i20, i32* %arrayidx149, align 4
  %inc150 = add nsw i32 %yyp1.0, 1
  %inc151 = add nsw i32 %yyp2.0, 1
  %dec152 = add nsw i32 %yyn.0, -1
  br label %while.cond137

while.end153:                                     ; preds = %while.cond137
  %sub154 = sub nsw i32 %i1, %gtHi.1
  %sub155 = sub nsw i32 %gtHi.1, %unHi.1
  %cmp156 = icmp slt i32 %sub154, %sub155
  br i1 %cmp156, label %cond.true158, label %cond.false160

cond.true158:                                     ; preds = %while.end153
  %sub159 = sub nsw i32 %i1, %gtHi.1
  br label %cond.end162

cond.false160:                                    ; preds = %while.end153
  %sub161 = sub nsw i32 %gtHi.1, %unHi.1
  br label %cond.end162

cond.end162:                                      ; preds = %cond.false160, %cond.true158
  %cond163 = phi i32 [ %sub159, %cond.true158 ], [ %sub161, %cond.false160 ]
  %sub166 = sub nsw i32 %i1, %cond163
  %add167 = add nsw i32 %sub166, 1
  br label %while.cond169

while.cond169:                                    ; preds = %while.body172, %cond.end162
  %yyp1164.0 = phi i32 [ %unLo.1, %cond.end162 ], [ %inc182, %while.body172 ]
  %yyp2165.0 = phi i32 [ %add167, %cond.end162 ], [ %inc183, %while.body172 ]
  %yyn168.0 = phi i32 [ %cond163, %cond.end162 ], [ %dec184, %while.body172 ]
  %cmp170 = icmp sgt i32 %yyn168.0, 0
  br i1 %cmp170, label %while.body172, label %while.end185

while.body172:                                    ; preds = %while.cond169
  %idxprom174 = sext i32 %yyp1164.0 to i64
  %arrayidx175 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom174
  %i22 = load i32, i32* %arrayidx175, align 4
  %idxprom176 = sext i32 %yyp2165.0 to i64
  %arrayidx177 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom176
  %i23 = load i32, i32* %arrayidx177, align 4
  %idxprom178 = sext i32 %yyp1164.0 to i64
  %arrayidx179 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom178
  store i32 %i23, i32* %arrayidx179, align 4
  %idxprom180 = sext i32 %yyp2165.0 to i64
  %arrayidx181 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom180
  store i32 %i22, i32* %arrayidx181, align 4
  %inc182 = add nsw i32 %yyp1164.0, 1
  %inc183 = add nsw i32 %yyp2165.0, 1
  %dec184 = add nsw i32 %yyn168.0, -1
  br label %while.cond169

while.end185:                                     ; preds = %while.cond169
  %add186 = add nsw i32 %i, %unLo.1
  %sub187 = sub nsw i32 %add186, %ltLo.1
  %sub188 = sub nsw i32 %sub187, 1
  %sub189 = sub nsw i32 %gtHi.1, %unHi.1
  %sub190 = sub nsw i32 %i1, %sub189
  %add191 = add nsw i32 %sub190, 1
  %arrayidx192 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  store i32 %i, i32* %arrayidx192, align 4
  %arrayidx193 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  store i32 %sub188, i32* %arrayidx193, align 4
  %arrayidx194 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 0
  store i32 %i2, i32* %arrayidx194, align 4
  %arrayidx195 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  store i32 %add191, i32* %arrayidx195, align 4
  %arrayidx196 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  store i32 %i1, i32* %arrayidx196, align 4
  %arrayidx197 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  store i32 %i2, i32* %arrayidx197, align 4
  %add198 = add nsw i32 %sub188, 1
  %arrayidx199 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 2
  store i32 %add198, i32* %arrayidx199, align 4
  %sub200 = sub nsw i32 %add191, 1
  %arrayidx201 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 2
  store i32 %sub200, i32* %arrayidx201, align 4
  %add202 = add nsw i32 %i2, 1
  %arrayidx203 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 2
  store i32 %add202, i32* %arrayidx203, align 4
  %arrayidx204 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  %i24 = load i32, i32* %arrayidx204, align 4
  %arrayidx205 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  %i25 = load i32, i32* %arrayidx205, align 4
  %sub206 = sub nsw i32 %i24, %i25
  %arrayidx207 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %i26 = load i32, i32* %arrayidx207, align 4
  %arrayidx208 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %i27 = load i32, i32* %arrayidx208, align 4
  %sub209 = sub nsw i32 %i26, %i27
  %cmp210 = icmp slt i32 %sub206, %sub209
  br i1 %cmp210, label %if.then212, label %if.end225

if.then212:                                       ; preds = %while.end185
  %arrayidx213 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  %i28 = load i32, i32* %arrayidx213, align 4
  %arrayidx214 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %i29 = load i32, i32* %arrayidx214, align 4
  %arrayidx215 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  store i32 %i29, i32* %arrayidx215, align 4
  %arrayidx216 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  store i32 %i28, i32* %arrayidx216, align 4
  %arrayidx217 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  %i30 = load i32, i32* %arrayidx217, align 4
  %arrayidx218 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %i31 = load i32, i32* %arrayidx218, align 4
  %arrayidx219 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  store i32 %i31, i32* %arrayidx219, align 4
  %arrayidx220 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  store i32 %i30, i32* %arrayidx220, align 4
  %arrayidx221 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 0
  %i32 = load i32, i32* %arrayidx221, align 4
  %arrayidx222 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  %i33 = load i32, i32* %arrayidx222, align 4
  %arrayidx223 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 0
  store i32 %i33, i32* %arrayidx223, align 4
  %arrayidx224 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  store i32 %i32, i32* %arrayidx224, align 4
  br label %if.end225

if.end225:                                        ; preds = %if.then212, %while.end185
  %arrayidx226 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %i34 = load i32, i32* %arrayidx226, align 4
  %arrayidx227 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %i35 = load i32, i32* %arrayidx227, align 4
  %sub228 = sub nsw i32 %i34, %i35
  %arrayidx229 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 2
  %i36 = load i32, i32* %arrayidx229, align 4
  %arrayidx230 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 2
  %i37 = load i32, i32* %arrayidx230, align 4
  %sub231 = sub nsw i32 %i36, %i37
  %cmp232 = icmp slt i32 %sub228, %sub231
  br i1 %cmp232, label %if.then234, label %if.end248

if.then234:                                       ; preds = %if.end225
  %arrayidx236 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %i38 = load i32, i32* %arrayidx236, align 4
  %arrayidx237 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 2
  %i39 = load i32, i32* %arrayidx237, align 4
  %arrayidx238 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  store i32 %i39, i32* %arrayidx238, align 4
  %arrayidx239 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 2
  store i32 %i38, i32* %arrayidx239, align 4
  %arrayidx240 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %i40 = load i32, i32* %arrayidx240, align 4
  %arrayidx241 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 2
  %i41 = load i32, i32* %arrayidx241, align 4
  %arrayidx242 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  store i32 %i41, i32* %arrayidx242, align 4
  %arrayidx243 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 2
  store i32 %i40, i32* %arrayidx243, align 4
  %arrayidx244 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  %i42 = load i32, i32* %arrayidx244, align 4
  %arrayidx245 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 2
  %i43 = load i32, i32* %arrayidx245, align 4
  %arrayidx246 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  store i32 %i43, i32* %arrayidx246, align 4
  %arrayidx247 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 2
  store i32 %i42, i32* %arrayidx247, align 4
  br label %if.end248

if.end248:                                        ; preds = %if.then234, %if.end225
  %arrayidx249 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  %i44 = load i32, i32* %arrayidx249, align 4
  %arrayidx250 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  %i45 = load i32, i32* %arrayidx250, align 4
  %sub251 = sub nsw i32 %i44, %i45
  %arrayidx252 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %i46 = load i32, i32* %arrayidx252, align 4
  %arrayidx253 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %i47 = load i32, i32* %arrayidx253, align 4
  %sub254 = sub nsw i32 %i46, %i47
  %cmp255 = icmp slt i32 %sub251, %sub254
  br i1 %cmp255, label %if.then257, label %if.end271

if.then257:                                       ; preds = %if.end248
  %arrayidx259 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  %i48 = load i32, i32* %arrayidx259, align 4
  %arrayidx260 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %i49 = load i32, i32* %arrayidx260, align 4
  %arrayidx261 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  store i32 %i49, i32* %arrayidx261, align 4
  %arrayidx262 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  store i32 %i48, i32* %arrayidx262, align 4
  %arrayidx263 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  %i50 = load i32, i32* %arrayidx263, align 4
  %arrayidx264 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %i51 = load i32, i32* %arrayidx264, align 4
  %arrayidx265 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  store i32 %i51, i32* %arrayidx265, align 4
  %arrayidx266 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  store i32 %i50, i32* %arrayidx266, align 4
  %arrayidx267 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 0
  %i52 = load i32, i32* %arrayidx267, align 4
  %arrayidx268 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  %i53 = load i32, i32* %arrayidx268, align 4
  %arrayidx269 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 0
  store i32 %i53, i32* %arrayidx269, align 4
  %arrayidx270 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  store i32 %i52, i32* %arrayidx270, align 4
  br label %if.end271

if.end271:                                        ; preds = %if.then257, %if.end248
  %arrayidx272 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 0
  %i54 = load i32, i32* %arrayidx272, align 4
  %idxprom273 = sext i32 %dec to i64
  %arrayidx274 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom273
  store i32 %i54, i32* %arrayidx274, align 4
  %arrayidx275 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 0
  %i55 = load i32, i32* %arrayidx275, align 4
  %idxprom276 = sext i32 %dec to i64
  %arrayidx277 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom276
  store i32 %i55, i32* %arrayidx277, align 4
  %arrayidx278 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 0
  %i56 = load i32, i32* %arrayidx278, align 4
  %idxprom279 = sext i32 %dec to i64
  %arrayidx280 = getelementptr inbounds [100 x i32], [100 x i32]* %stackD, i64 0, i64 %idxprom279
  store i32 %i56, i32* %arrayidx280, align 4
  %inc281 = add nsw i32 %dec, 1
  %arrayidx282 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 1
  %i57 = load i32, i32* %arrayidx282, align 4
  %idxprom283 = sext i32 %inc281 to i64
  %arrayidx284 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom283
  store i32 %i57, i32* %arrayidx284, align 4
  %arrayidx285 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 1
  %i58 = load i32, i32* %arrayidx285, align 4
  %idxprom286 = sext i32 %inc281 to i64
  %arrayidx287 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom286
  store i32 %i58, i32* %arrayidx287, align 4
  %arrayidx288 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 1
  %i59 = load i32, i32* %arrayidx288, align 4
  %idxprom289 = sext i32 %inc281 to i64
  %arrayidx290 = getelementptr inbounds [100 x i32], [100 x i32]* %stackD, i64 0, i64 %idxprom289
  store i32 %i59, i32* %arrayidx290, align 4
  %inc291 = add nsw i32 %inc281, 1
  %arrayidx292 = getelementptr inbounds [3 x i32], [3 x i32]* %nextLo, i64 0, i64 2
  %i60 = load i32, i32* %arrayidx292, align 4
  %idxprom293 = sext i32 %inc291 to i64
  %arrayidx294 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom293
  store i32 %i60, i32* %arrayidx294, align 4
  %arrayidx295 = getelementptr inbounds [3 x i32], [3 x i32]* %nextHi, i64 0, i64 2
  %i61 = load i32, i32* %arrayidx295, align 4
  %idxprom296 = sext i32 %inc291 to i64
  %arrayidx297 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom296
  store i32 %i61, i32* %arrayidx297, align 4
  %arrayidx298 = getelementptr inbounds [3 x i32], [3 x i32]* %nextD, i64 0, i64 2
  %i62 = load i32, i32* %arrayidx298, align 4
  %idxprom299 = sext i32 %inc291 to i64
  %arrayidx300 = getelementptr inbounds [100 x i32], [100 x i32]* %stackD, i64 0, i64 %idxprom299
  store i32 %i62, i32* %arrayidx300, align 4
  %inc301 = add nsw i32 %inc291, 1
  br label %while.cond

while.end302:                                     ; preds = %if.then16, %while.cond
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @mainSimpleSort(i32* %ptr, i8* %block, i16* %quadrant, i32 %nblock, i32 %lo, i32 %hi, i32 %d, i32* %budget) #0 {
entry:
  %sub = sub nsw i32 %hi, %lo
  %add = add nsw i32 %sub, 1
  %cmp = icmp slt i32 %add, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %hp.0 = phi i32 [ 0, %if.end ], [ %inc, %while.body ]
  %idxprom = sext i32 %hp.0 to i64
  %arrayidx = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %idxprom
  %i = load i32, i32* %arrayidx, align 4
  %cmp1 = icmp slt i32 %i, %add
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %inc = add nsw i32 %hp.0, 1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %dec = add nsw i32 %hp.0, -1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.end
  %hp.1 = phi i32 [ %dec, %while.end ], [ %dec97, %for.inc ]
  %cmp2 = icmp sge i32 %hp.1, 0
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom3 = sext i32 %hp.1 to i64
  %arrayidx4 = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %idxprom3
  %i1 = load i32, i32* %arrayidx4, align 4
  %add5 = add nsw i32 %lo, %i1
  br label %while.body7

while.body7:                                      ; preds = %if.end95, %for.body
  %i.0 = phi i32 [ %add5, %for.body ], [ %inc92, %if.end95 ]
  %cmp8 = icmp sgt i32 %i.0, %hi
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %while.body7
  br label %while.end96

if.end10:                                         ; preds = %while.body7
  %idxprom11 = sext i32 %i.0 to i64
  %arrayidx12 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom11
  %i2 = load i32, i32* %arrayidx12, align 4
  br label %while.cond13

while.cond13:                                     ; preds = %if.end30, %if.end10
  %j.0 = phi i32 [ %i.0, %if.end10 ], [ %sub25, %if.end30 ]
  %sub14 = sub nsw i32 %j.0, %i1
  %idxprom15 = sext i32 %sub14 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom15
  %i3 = load i32, i32* %arrayidx16, align 4
  %add17 = add i32 %i3, %d
  %add18 = add i32 %i2, %d
  %call = call zeroext i8 @mainGtU(i32 %add17, i32 %add18, i8* %block, i16* %quadrant, i32 %nblock, i32* %budget)
  %tobool = icmp ne i8 %call, 0
  br i1 %tobool, label %while.body19, label %while.end31

while.body19:                                     ; preds = %while.cond13
  %sub20 = sub nsw i32 %j.0, %i1
  %idxprom21 = sext i32 %sub20 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom21
  %i4 = load i32, i32* %arrayidx22, align 4
  %idxprom23 = sext i32 %j.0 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom23
  store i32 %i4, i32* %arrayidx24, align 4
  %sub25 = sub nsw i32 %j.0, %i1
  %add26 = add nsw i32 %lo, %i1
  %sub27 = sub nsw i32 %add26, 1
  %cmp28 = icmp sle i32 %sub25, %sub27
  br i1 %cmp28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %while.body19
  br label %while.end31

if.end30:                                         ; preds = %while.body19
  br label %while.cond13

while.end31:                                      ; preds = %if.then29, %while.cond13
  %j.1 = phi i32 [ %sub25, %if.then29 ], [ %j.0, %while.cond13 ]
  %idxprom32 = sext i32 %j.1 to i64
  %arrayidx33 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom32
  store i32 %i2, i32* %arrayidx33, align 4
  %inc34 = add nsw i32 %i.0, 1
  %cmp35 = icmp sgt i32 %inc34, %hi
  br i1 %cmp35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %while.end31
  br label %while.end96

if.end37:                                         ; preds = %while.end31
  %idxprom38 = sext i32 %inc34 to i64
  %arrayidx39 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom38
  %i5 = load i32, i32* %arrayidx39, align 4
  br label %while.cond40

while.cond40:                                     ; preds = %if.end59, %if.end37
  %j.2 = phi i32 [ %inc34, %if.end37 ], [ %sub54, %if.end59 ]
  %sub41 = sub nsw i32 %j.2, %i1
  %idxprom42 = sext i32 %sub41 to i64
  %arrayidx43 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom42
  %i6 = load i32, i32* %arrayidx43, align 4
  %add44 = add i32 %i6, %d
  %add45 = add i32 %i5, %d
  %call46 = call zeroext i8 @mainGtU(i32 %add44, i32 %add45, i8* %block, i16* %quadrant, i32 %nblock, i32* %budget)
  %tobool47 = icmp ne i8 %call46, 0
  br i1 %tobool47, label %while.body48, label %while.end60

while.body48:                                     ; preds = %while.cond40
  %sub49 = sub nsw i32 %j.2, %i1
  %idxprom50 = sext i32 %sub49 to i64
  %arrayidx51 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom50
  %i7 = load i32, i32* %arrayidx51, align 4
  %idxprom52 = sext i32 %j.2 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom52
  store i32 %i7, i32* %arrayidx53, align 4
  %sub54 = sub nsw i32 %j.2, %i1
  %add55 = add nsw i32 %lo, %i1
  %sub56 = sub nsw i32 %add55, 1
  %cmp57 = icmp sle i32 %sub54, %sub56
  br i1 %cmp57, label %if.then58, label %if.end59

if.then58:                                        ; preds = %while.body48
  br label %while.end60

if.end59:                                         ; preds = %while.body48
  br label %while.cond40

while.end60:                                      ; preds = %if.then58, %while.cond40
  %j.3 = phi i32 [ %sub54, %if.then58 ], [ %j.2, %while.cond40 ]
  %idxprom61 = sext i32 %j.3 to i64
  %arrayidx62 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom61
  store i32 %i5, i32* %arrayidx62, align 4
  %inc63 = add nsw i32 %inc34, 1
  %cmp64 = icmp sgt i32 %inc63, %hi
  br i1 %cmp64, label %if.then65, label %if.end66

if.then65:                                        ; preds = %while.end60
  br label %while.end96

if.end66:                                         ; preds = %while.end60
  %idxprom67 = sext i32 %inc63 to i64
  %arrayidx68 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom67
  %i8 = load i32, i32* %arrayidx68, align 4
  br label %while.cond69

while.cond69:                                     ; preds = %if.end88, %if.end66
  %j.4 = phi i32 [ %inc63, %if.end66 ], [ %sub83, %if.end88 ]
  %sub70 = sub nsw i32 %j.4, %i1
  %idxprom71 = sext i32 %sub70 to i64
  %arrayidx72 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom71
  %i9 = load i32, i32* %arrayidx72, align 4
  %add73 = add i32 %i9, %d
  %add74 = add i32 %i8, %d
  %call75 = call zeroext i8 @mainGtU(i32 %add73, i32 %add74, i8* %block, i16* %quadrant, i32 %nblock, i32* %budget)
  %tobool76 = icmp ne i8 %call75, 0
  br i1 %tobool76, label %while.body77, label %while.end89

while.body77:                                     ; preds = %while.cond69
  %sub78 = sub nsw i32 %j.4, %i1
  %idxprom79 = sext i32 %sub78 to i64
  %arrayidx80 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom79
  %i10 = load i32, i32* %arrayidx80, align 4
  %idxprom81 = sext i32 %j.4 to i64
  %arrayidx82 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom81
  store i32 %i10, i32* %arrayidx82, align 4
  %sub83 = sub nsw i32 %j.4, %i1
  %add84 = add nsw i32 %lo, %i1
  %sub85 = sub nsw i32 %add84, 1
  %cmp86 = icmp sle i32 %sub83, %sub85
  br i1 %cmp86, label %if.then87, label %if.end88

if.then87:                                        ; preds = %while.body77
  br label %while.end89

if.end88:                                         ; preds = %while.body77
  br label %while.cond69

while.end89:                                      ; preds = %if.then87, %while.cond69
  %j.5 = phi i32 [ %sub83, %if.then87 ], [ %j.4, %while.cond69 ]
  %idxprom90 = sext i32 %j.5 to i64
  %arrayidx91 = getelementptr inbounds i32, i32* %ptr, i64 %idxprom90
  store i32 %i8, i32* %arrayidx91, align 4
  %inc92 = add nsw i32 %inc63, 1
  %i11 = load i32, i32* %budget, align 4
  %cmp93 = icmp slt i32 %i11, 0
  br i1 %cmp93, label %if.then94, label %if.end95

if.then94:                                        ; preds = %while.end89
  br label %for.end

if.end95:                                         ; preds = %while.end89
  br label %while.body7

while.end96:                                      ; preds = %if.then65, %if.then36, %if.then9
  br label %for.inc

for.inc:                                          ; preds = %while.end96
  %dec97 = add nsw i32 %hp.1, -1
  br label %for.cond

for.end:                                          ; preds = %if.then94, %for.cond, %if.then
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mmed3(i8 zeroext %a, i8 zeroext %b, i8 zeroext %c) #0 {
entry:
  %conv = zext i8 %a to i32
  %conv1 = zext i8 %b to i32
  %cmp = icmp sgt i32 %conv, %conv1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %b.addr.0 = phi i8 [ %a, %if.then ], [ %b, %entry ]
  %a.addr.0 = phi i8 [ %b, %if.then ], [ %a, %entry ]
  %conv3 = zext i8 %b.addr.0 to i32
  %conv4 = zext i8 %c to i32
  %cmp5 = icmp sgt i32 %conv3, %conv4
  br i1 %cmp5, label %if.then7, label %if.end14

if.then7:                                         ; preds = %if.end
  %conv8 = zext i8 %a.addr.0 to i32
  %conv9 = zext i8 %c to i32
  %cmp10 = icmp sgt i32 %conv8, %conv9
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.then7
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.then7
  %b.addr.1 = phi i8 [ %a.addr.0, %if.then12 ], [ %c, %if.then7 ]
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end
  %b.addr.2 = phi i8 [ %b.addr.1, %if.end13 ], [ %b.addr.0, %if.end ]
  ret i8 %b.addr.2
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mainGtU(i32 %i1, i32 %i2, i8* %block, i16* %quadrant, i32 %nblock, i32* %budget) #0 {
entry:
  %idxprom = zext i32 %i1 to i64
  %arrayidx = getelementptr inbounds i8, i8* %block, i64 %idxprom
  %i = load i8, i8* %arrayidx, align 1
  %idxprom1 = zext i32 %i2 to i64
  %arrayidx2 = getelementptr inbounds i8, i8* %block, i64 %idxprom1
  %i3 = load i8, i8* %arrayidx2, align 1
  %conv = zext i8 %i to i32
  %conv3 = zext i8 %i3 to i32
  %cmp = icmp ne i32 %conv, %conv3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv5 = zext i8 %i to i32
  %conv6 = zext i8 %i3 to i32
  %cmp7 = icmp sgt i32 %conv5, %conv6
  %conv8 = zext i1 %cmp7 to i32
  %conv9 = trunc i32 %conv8 to i8
  br label %return

if.end:                                           ; preds = %entry
  %inc = add i32 %i1, 1
  %inc10 = add i32 %i2, 1
  %idxprom11 = zext i32 %inc to i64
  %arrayidx12 = getelementptr inbounds i8, i8* %block, i64 %idxprom11
  %i4 = load i8, i8* %arrayidx12, align 1
  %idxprom13 = zext i32 %inc10 to i64
  %arrayidx14 = getelementptr inbounds i8, i8* %block, i64 %idxprom13
  %i5 = load i8, i8* %arrayidx14, align 1
  %conv15 = zext i8 %i4 to i32
  %conv16 = zext i8 %i5 to i32
  %cmp17 = icmp ne i32 %conv15, %conv16
  br i1 %cmp17, label %if.then19, label %if.end25

if.then19:                                        ; preds = %if.end
  %conv20 = zext i8 %i4 to i32
  %conv21 = zext i8 %i5 to i32
  %cmp22 = icmp sgt i32 %conv20, %conv21
  %conv23 = zext i1 %cmp22 to i32
  %conv24 = trunc i32 %conv23 to i8
  br label %return

if.end25:                                         ; preds = %if.end
  %inc26 = add i32 %inc, 1
  %inc27 = add i32 %inc10, 1
  %idxprom28 = zext i32 %inc26 to i64
  %arrayidx29 = getelementptr inbounds i8, i8* %block, i64 %idxprom28
  %i6 = load i8, i8* %arrayidx29, align 1
  %idxprom30 = zext i32 %inc27 to i64
  %arrayidx31 = getelementptr inbounds i8, i8* %block, i64 %idxprom30
  %i7 = load i8, i8* %arrayidx31, align 1
  %conv32 = zext i8 %i6 to i32
  %conv33 = zext i8 %i7 to i32
  %cmp34 = icmp ne i32 %conv32, %conv33
  br i1 %cmp34, label %if.then36, label %if.end42

if.then36:                                        ; preds = %if.end25
  %conv37 = zext i8 %i6 to i32
  %conv38 = zext i8 %i7 to i32
  %cmp39 = icmp sgt i32 %conv37, %conv38
  %conv40 = zext i1 %cmp39 to i32
  %conv41 = trunc i32 %conv40 to i8
  br label %return

if.end42:                                         ; preds = %if.end25
  %inc43 = add i32 %inc26, 1
  %inc44 = add i32 %inc27, 1
  %idxprom45 = zext i32 %inc43 to i64
  %arrayidx46 = getelementptr inbounds i8, i8* %block, i64 %idxprom45
  %i8 = load i8, i8* %arrayidx46, align 1
  %idxprom47 = zext i32 %inc44 to i64
  %arrayidx48 = getelementptr inbounds i8, i8* %block, i64 %idxprom47
  %i9 = load i8, i8* %arrayidx48, align 1
  %conv49 = zext i8 %i8 to i32
  %conv50 = zext i8 %i9 to i32
  %cmp51 = icmp ne i32 %conv49, %conv50
  br i1 %cmp51, label %if.then53, label %if.end59

if.then53:                                        ; preds = %if.end42
  %conv54 = zext i8 %i8 to i32
  %conv55 = zext i8 %i9 to i32
  %cmp56 = icmp sgt i32 %conv54, %conv55
  %conv57 = zext i1 %cmp56 to i32
  %conv58 = trunc i32 %conv57 to i8
  br label %return

if.end59:                                         ; preds = %if.end42
  %inc60 = add i32 %inc43, 1
  %inc61 = add i32 %inc44, 1
  %idxprom62 = zext i32 %inc60 to i64
  %arrayidx63 = getelementptr inbounds i8, i8* %block, i64 %idxprom62
  %i10 = load i8, i8* %arrayidx63, align 1
  %idxprom64 = zext i32 %inc61 to i64
  %arrayidx65 = getelementptr inbounds i8, i8* %block, i64 %idxprom64
  %i11 = load i8, i8* %arrayidx65, align 1
  %conv66 = zext i8 %i10 to i32
  %conv67 = zext i8 %i11 to i32
  %cmp68 = icmp ne i32 %conv66, %conv67
  br i1 %cmp68, label %if.then70, label %if.end76

if.then70:                                        ; preds = %if.end59
  %conv71 = zext i8 %i10 to i32
  %conv72 = zext i8 %i11 to i32
  %cmp73 = icmp sgt i32 %conv71, %conv72
  %conv74 = zext i1 %cmp73 to i32
  %conv75 = trunc i32 %conv74 to i8
  br label %return

if.end76:                                         ; preds = %if.end59
  %inc77 = add i32 %inc60, 1
  %inc78 = add i32 %inc61, 1
  %idxprom79 = zext i32 %inc77 to i64
  %arrayidx80 = getelementptr inbounds i8, i8* %block, i64 %idxprom79
  %i12 = load i8, i8* %arrayidx80, align 1
  %idxprom81 = zext i32 %inc78 to i64
  %arrayidx82 = getelementptr inbounds i8, i8* %block, i64 %idxprom81
  %i13 = load i8, i8* %arrayidx82, align 1
  %conv83 = zext i8 %i12 to i32
  %conv84 = zext i8 %i13 to i32
  %cmp85 = icmp ne i32 %conv83, %conv84
  br i1 %cmp85, label %if.then87, label %if.end93

if.then87:                                        ; preds = %if.end76
  %conv88 = zext i8 %i12 to i32
  %conv89 = zext i8 %i13 to i32
  %cmp90 = icmp sgt i32 %conv88, %conv89
  %conv91 = zext i1 %cmp90 to i32
  %conv92 = trunc i32 %conv91 to i8
  br label %return

if.end93:                                         ; preds = %if.end76
  %inc94 = add i32 %inc77, 1
  %inc95 = add i32 %inc78, 1
  %idxprom96 = zext i32 %inc94 to i64
  %arrayidx97 = getelementptr inbounds i8, i8* %block, i64 %idxprom96
  %i14 = load i8, i8* %arrayidx97, align 1
  %idxprom98 = zext i32 %inc95 to i64
  %arrayidx99 = getelementptr inbounds i8, i8* %block, i64 %idxprom98
  %i15 = load i8, i8* %arrayidx99, align 1
  %conv100 = zext i8 %i14 to i32
  %conv101 = zext i8 %i15 to i32
  %cmp102 = icmp ne i32 %conv100, %conv101
  br i1 %cmp102, label %if.then104, label %if.end110

if.then104:                                       ; preds = %if.end93
  %conv105 = zext i8 %i14 to i32
  %conv106 = zext i8 %i15 to i32
  %cmp107 = icmp sgt i32 %conv105, %conv106
  %conv108 = zext i1 %cmp107 to i32
  %conv109 = trunc i32 %conv108 to i8
  br label %return

if.end110:                                        ; preds = %if.end93
  %inc111 = add i32 %inc94, 1
  %inc112 = add i32 %inc95, 1
  %idxprom113 = zext i32 %inc111 to i64
  %arrayidx114 = getelementptr inbounds i8, i8* %block, i64 %idxprom113
  %i16 = load i8, i8* %arrayidx114, align 1
  %idxprom115 = zext i32 %inc112 to i64
  %arrayidx116 = getelementptr inbounds i8, i8* %block, i64 %idxprom115
  %i17 = load i8, i8* %arrayidx116, align 1
  %conv117 = zext i8 %i16 to i32
  %conv118 = zext i8 %i17 to i32
  %cmp119 = icmp ne i32 %conv117, %conv118
  br i1 %cmp119, label %if.then121, label %if.end127

if.then121:                                       ; preds = %if.end110
  %conv122 = zext i8 %i16 to i32
  %conv123 = zext i8 %i17 to i32
  %cmp124 = icmp sgt i32 %conv122, %conv123
  %conv125 = zext i1 %cmp124 to i32
  %conv126 = trunc i32 %conv125 to i8
  br label %return

if.end127:                                        ; preds = %if.end110
  %inc128 = add i32 %inc111, 1
  %inc129 = add i32 %inc112, 1
  %idxprom130 = zext i32 %inc128 to i64
  %arrayidx131 = getelementptr inbounds i8, i8* %block, i64 %idxprom130
  %i18 = load i8, i8* %arrayidx131, align 1
  %idxprom132 = zext i32 %inc129 to i64
  %arrayidx133 = getelementptr inbounds i8, i8* %block, i64 %idxprom132
  %i19 = load i8, i8* %arrayidx133, align 1
  %conv134 = zext i8 %i18 to i32
  %conv135 = zext i8 %i19 to i32
  %cmp136 = icmp ne i32 %conv134, %conv135
  br i1 %cmp136, label %if.then138, label %if.end144

if.then138:                                       ; preds = %if.end127
  %conv139 = zext i8 %i18 to i32
  %conv140 = zext i8 %i19 to i32
  %cmp141 = icmp sgt i32 %conv139, %conv140
  %conv142 = zext i1 %cmp141 to i32
  %conv143 = trunc i32 %conv142 to i8
  br label %return

if.end144:                                        ; preds = %if.end127
  %inc145 = add i32 %inc128, 1
  %inc146 = add i32 %inc129, 1
  %idxprom147 = zext i32 %inc145 to i64
  %arrayidx148 = getelementptr inbounds i8, i8* %block, i64 %idxprom147
  %i20 = load i8, i8* %arrayidx148, align 1
  %idxprom149 = zext i32 %inc146 to i64
  %arrayidx150 = getelementptr inbounds i8, i8* %block, i64 %idxprom149
  %i21 = load i8, i8* %arrayidx150, align 1
  %conv151 = zext i8 %i20 to i32
  %conv152 = zext i8 %i21 to i32
  %cmp153 = icmp ne i32 %conv151, %conv152
  br i1 %cmp153, label %if.then155, label %if.end161

if.then155:                                       ; preds = %if.end144
  %conv156 = zext i8 %i20 to i32
  %conv157 = zext i8 %i21 to i32
  %cmp158 = icmp sgt i32 %conv156, %conv157
  %conv159 = zext i1 %cmp158 to i32
  %conv160 = trunc i32 %conv159 to i8
  br label %return

if.end161:                                        ; preds = %if.end144
  %inc162 = add i32 %inc145, 1
  %inc163 = add i32 %inc146, 1
  %idxprom164 = zext i32 %inc162 to i64
  %arrayidx165 = getelementptr inbounds i8, i8* %block, i64 %idxprom164
  %i22 = load i8, i8* %arrayidx165, align 1
  %idxprom166 = zext i32 %inc163 to i64
  %arrayidx167 = getelementptr inbounds i8, i8* %block, i64 %idxprom166
  %i23 = load i8, i8* %arrayidx167, align 1
  %conv168 = zext i8 %i22 to i32
  %conv169 = zext i8 %i23 to i32
  %cmp170 = icmp ne i32 %conv168, %conv169
  br i1 %cmp170, label %if.then172, label %if.end178

if.then172:                                       ; preds = %if.end161
  %conv173 = zext i8 %i22 to i32
  %conv174 = zext i8 %i23 to i32
  %cmp175 = icmp sgt i32 %conv173, %conv174
  %conv176 = zext i1 %cmp175 to i32
  %conv177 = trunc i32 %conv176 to i8
  br label %return

if.end178:                                        ; preds = %if.end161
  %inc179 = add i32 %inc162, 1
  %inc180 = add i32 %inc163, 1
  %idxprom181 = zext i32 %inc179 to i64
  %arrayidx182 = getelementptr inbounds i8, i8* %block, i64 %idxprom181
  %i24 = load i8, i8* %arrayidx182, align 1
  %idxprom183 = zext i32 %inc180 to i64
  %arrayidx184 = getelementptr inbounds i8, i8* %block, i64 %idxprom183
  %i25 = load i8, i8* %arrayidx184, align 1
  %conv185 = zext i8 %i24 to i32
  %conv186 = zext i8 %i25 to i32
  %cmp187 = icmp ne i32 %conv185, %conv186
  br i1 %cmp187, label %if.then189, label %if.end195

if.then189:                                       ; preds = %if.end178
  %conv190 = zext i8 %i24 to i32
  %conv191 = zext i8 %i25 to i32
  %cmp192 = icmp sgt i32 %conv190, %conv191
  %conv193 = zext i1 %cmp192 to i32
  %conv194 = trunc i32 %conv193 to i8
  br label %return

if.end195:                                        ; preds = %if.end178
  %inc196 = add i32 %inc179, 1
  %inc197 = add i32 %inc180, 1
  %add = add i32 %nblock, 8
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end195
  %k.0 = phi i32 [ %add, %if.end195 ], [ %sub463, %do.cond ]
  %i2.addr.0 = phi i32 [ %inc197, %if.end195 ], [ %i2.addr.1, %do.cond ]
  %i1.addr.0 = phi i32 [ %inc196, %if.end195 ], [ %i1.addr.1, %do.cond ]
  %idxprom198 = zext i32 %i1.addr.0 to i64
  %arrayidx199 = getelementptr inbounds i8, i8* %block, i64 %idxprom198
  %i26 = load i8, i8* %arrayidx199, align 1
  %idxprom200 = zext i32 %i2.addr.0 to i64
  %arrayidx201 = getelementptr inbounds i8, i8* %block, i64 %idxprom200
  %i27 = load i8, i8* %arrayidx201, align 1
  %conv202 = zext i8 %i26 to i32
  %conv203 = zext i8 %i27 to i32
  %cmp204 = icmp ne i32 %conv202, %conv203
  br i1 %cmp204, label %if.then206, label %if.end212

if.then206:                                       ; preds = %do.body
  %conv207 = zext i8 %i26 to i32
  %conv208 = zext i8 %i27 to i32
  %cmp209 = icmp sgt i32 %conv207, %conv208
  %conv210 = zext i1 %cmp209 to i32
  %conv211 = trunc i32 %conv210 to i8
  br label %return

if.end212:                                        ; preds = %do.body
  %idxprom213 = zext i32 %i1.addr.0 to i64
  %arrayidx214 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom213
  %i28 = load i16, i16* %arrayidx214, align 2
  %idxprom215 = zext i32 %i2.addr.0 to i64
  %arrayidx216 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom215
  %i29 = load i16, i16* %arrayidx216, align 2
  %conv217 = zext i16 %i28 to i32
  %conv218 = zext i16 %i29 to i32
  %cmp219 = icmp ne i32 %conv217, %conv218
  br i1 %cmp219, label %if.then221, label %if.end227

if.then221:                                       ; preds = %if.end212
  %conv222 = zext i16 %i28 to i32
  %conv223 = zext i16 %i29 to i32
  %cmp224 = icmp sgt i32 %conv222, %conv223
  %conv225 = zext i1 %cmp224 to i32
  %conv226 = trunc i32 %conv225 to i8
  br label %return

if.end227:                                        ; preds = %if.end212
  %inc228 = add i32 %i1.addr.0, 1
  %inc229 = add i32 %i2.addr.0, 1
  %idxprom230 = zext i32 %inc228 to i64
  %arrayidx231 = getelementptr inbounds i8, i8* %block, i64 %idxprom230
  %i30 = load i8, i8* %arrayidx231, align 1
  %idxprom232 = zext i32 %inc229 to i64
  %arrayidx233 = getelementptr inbounds i8, i8* %block, i64 %idxprom232
  %i31 = load i8, i8* %arrayidx233, align 1
  %conv234 = zext i8 %i30 to i32
  %conv235 = zext i8 %i31 to i32
  %cmp236 = icmp ne i32 %conv234, %conv235
  br i1 %cmp236, label %if.then238, label %if.end244

if.then238:                                       ; preds = %if.end227
  %conv239 = zext i8 %i30 to i32
  %conv240 = zext i8 %i31 to i32
  %cmp241 = icmp sgt i32 %conv239, %conv240
  %conv242 = zext i1 %cmp241 to i32
  %conv243 = trunc i32 %conv242 to i8
  br label %return

if.end244:                                        ; preds = %if.end227
  %idxprom245 = zext i32 %inc228 to i64
  %arrayidx246 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom245
  %i32 = load i16, i16* %arrayidx246, align 2
  %idxprom247 = zext i32 %inc229 to i64
  %arrayidx248 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom247
  %i33 = load i16, i16* %arrayidx248, align 2
  %conv249 = zext i16 %i32 to i32
  %conv250 = zext i16 %i33 to i32
  %cmp251 = icmp ne i32 %conv249, %conv250
  br i1 %cmp251, label %if.then253, label %if.end259

if.then253:                                       ; preds = %if.end244
  %conv254 = zext i16 %i32 to i32
  %conv255 = zext i16 %i33 to i32
  %cmp256 = icmp sgt i32 %conv254, %conv255
  %conv257 = zext i1 %cmp256 to i32
  %conv258 = trunc i32 %conv257 to i8
  br label %return

if.end259:                                        ; preds = %if.end244
  %inc260 = add i32 %inc228, 1
  %inc261 = add i32 %inc229, 1
  %idxprom262 = zext i32 %inc260 to i64
  %arrayidx263 = getelementptr inbounds i8, i8* %block, i64 %idxprom262
  %i34 = load i8, i8* %arrayidx263, align 1
  %idxprom264 = zext i32 %inc261 to i64
  %arrayidx265 = getelementptr inbounds i8, i8* %block, i64 %idxprom264
  %i35 = load i8, i8* %arrayidx265, align 1
  %conv266 = zext i8 %i34 to i32
  %conv267 = zext i8 %i35 to i32
  %cmp268 = icmp ne i32 %conv266, %conv267
  br i1 %cmp268, label %if.then270, label %if.end276

if.then270:                                       ; preds = %if.end259
  %conv271 = zext i8 %i34 to i32
  %conv272 = zext i8 %i35 to i32
  %cmp273 = icmp sgt i32 %conv271, %conv272
  %conv274 = zext i1 %cmp273 to i32
  %conv275 = trunc i32 %conv274 to i8
  br label %return

if.end276:                                        ; preds = %if.end259
  %idxprom277 = zext i32 %inc260 to i64
  %arrayidx278 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom277
  %i36 = load i16, i16* %arrayidx278, align 2
  %idxprom279 = zext i32 %inc261 to i64
  %arrayidx280 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom279
  %i37 = load i16, i16* %arrayidx280, align 2
  %conv281 = zext i16 %i36 to i32
  %conv282 = zext i16 %i37 to i32
  %cmp283 = icmp ne i32 %conv281, %conv282
  br i1 %cmp283, label %if.then285, label %if.end291

if.then285:                                       ; preds = %if.end276
  %conv286 = zext i16 %i36 to i32
  %conv287 = zext i16 %i37 to i32
  %cmp288 = icmp sgt i32 %conv286, %conv287
  %conv289 = zext i1 %cmp288 to i32
  %conv290 = trunc i32 %conv289 to i8
  br label %return

if.end291:                                        ; preds = %if.end276
  %inc292 = add i32 %inc260, 1
  %inc293 = add i32 %inc261, 1
  %idxprom294 = zext i32 %inc292 to i64
  %arrayidx295 = getelementptr inbounds i8, i8* %block, i64 %idxprom294
  %i38 = load i8, i8* %arrayidx295, align 1
  %idxprom296 = zext i32 %inc293 to i64
  %arrayidx297 = getelementptr inbounds i8, i8* %block, i64 %idxprom296
  %i39 = load i8, i8* %arrayidx297, align 1
  %conv298 = zext i8 %i38 to i32
  %conv299 = zext i8 %i39 to i32
  %cmp300 = icmp ne i32 %conv298, %conv299
  br i1 %cmp300, label %if.then302, label %if.end308

if.then302:                                       ; preds = %if.end291
  %conv303 = zext i8 %i38 to i32
  %conv304 = zext i8 %i39 to i32
  %cmp305 = icmp sgt i32 %conv303, %conv304
  %conv306 = zext i1 %cmp305 to i32
  %conv307 = trunc i32 %conv306 to i8
  br label %return

if.end308:                                        ; preds = %if.end291
  %idxprom309 = zext i32 %inc292 to i64
  %arrayidx310 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom309
  %i40 = load i16, i16* %arrayidx310, align 2
  %idxprom311 = zext i32 %inc293 to i64
  %arrayidx312 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom311
  %i41 = load i16, i16* %arrayidx312, align 2
  %conv313 = zext i16 %i40 to i32
  %conv314 = zext i16 %i41 to i32
  %cmp315 = icmp ne i32 %conv313, %conv314
  br i1 %cmp315, label %if.then317, label %if.end323

if.then317:                                       ; preds = %if.end308
  %conv318 = zext i16 %i40 to i32
  %conv319 = zext i16 %i41 to i32
  %cmp320 = icmp sgt i32 %conv318, %conv319
  %conv321 = zext i1 %cmp320 to i32
  %conv322 = trunc i32 %conv321 to i8
  br label %return

if.end323:                                        ; preds = %if.end308
  %inc324 = add i32 %inc292, 1
  %inc325 = add i32 %inc293, 1
  %idxprom326 = zext i32 %inc324 to i64
  %arrayidx327 = getelementptr inbounds i8, i8* %block, i64 %idxprom326
  %i42 = load i8, i8* %arrayidx327, align 1
  %idxprom328 = zext i32 %inc325 to i64
  %arrayidx329 = getelementptr inbounds i8, i8* %block, i64 %idxprom328
  %i43 = load i8, i8* %arrayidx329, align 1
  %conv330 = zext i8 %i42 to i32
  %conv331 = zext i8 %i43 to i32
  %cmp332 = icmp ne i32 %conv330, %conv331
  br i1 %cmp332, label %if.then334, label %if.end340

if.then334:                                       ; preds = %if.end323
  %conv335 = zext i8 %i42 to i32
  %conv336 = zext i8 %i43 to i32
  %cmp337 = icmp sgt i32 %conv335, %conv336
  %conv338 = zext i1 %cmp337 to i32
  %conv339 = trunc i32 %conv338 to i8
  br label %return

if.end340:                                        ; preds = %if.end323
  %idxprom341 = zext i32 %inc324 to i64
  %arrayidx342 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom341
  %i44 = load i16, i16* %arrayidx342, align 2
  %idxprom343 = zext i32 %inc325 to i64
  %arrayidx344 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom343
  %i45 = load i16, i16* %arrayidx344, align 2
  %conv345 = zext i16 %i44 to i32
  %conv346 = zext i16 %i45 to i32
  %cmp347 = icmp ne i32 %conv345, %conv346
  br i1 %cmp347, label %if.then349, label %if.end355

if.then349:                                       ; preds = %if.end340
  %conv350 = zext i16 %i44 to i32
  %conv351 = zext i16 %i45 to i32
  %cmp352 = icmp sgt i32 %conv350, %conv351
  %conv353 = zext i1 %cmp352 to i32
  %conv354 = trunc i32 %conv353 to i8
  br label %return

if.end355:                                        ; preds = %if.end340
  %inc356 = add i32 %inc324, 1
  %inc357 = add i32 %inc325, 1
  %idxprom358 = zext i32 %inc356 to i64
  %arrayidx359 = getelementptr inbounds i8, i8* %block, i64 %idxprom358
  %i46 = load i8, i8* %arrayidx359, align 1
  %idxprom360 = zext i32 %inc357 to i64
  %arrayidx361 = getelementptr inbounds i8, i8* %block, i64 %idxprom360
  %i47 = load i8, i8* %arrayidx361, align 1
  %conv362 = zext i8 %i46 to i32
  %conv363 = zext i8 %i47 to i32
  %cmp364 = icmp ne i32 %conv362, %conv363
  br i1 %cmp364, label %if.then366, label %if.end372

if.then366:                                       ; preds = %if.end355
  %conv367 = zext i8 %i46 to i32
  %conv368 = zext i8 %i47 to i32
  %cmp369 = icmp sgt i32 %conv367, %conv368
  %conv370 = zext i1 %cmp369 to i32
  %conv371 = trunc i32 %conv370 to i8
  br label %return

if.end372:                                        ; preds = %if.end355
  %idxprom373 = zext i32 %inc356 to i64
  %arrayidx374 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom373
  %i48 = load i16, i16* %arrayidx374, align 2
  %idxprom375 = zext i32 %inc357 to i64
  %arrayidx376 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom375
  %i49 = load i16, i16* %arrayidx376, align 2
  %conv377 = zext i16 %i48 to i32
  %conv378 = zext i16 %i49 to i32
  %cmp379 = icmp ne i32 %conv377, %conv378
  br i1 %cmp379, label %if.then381, label %if.end387

if.then381:                                       ; preds = %if.end372
  %conv382 = zext i16 %i48 to i32
  %conv383 = zext i16 %i49 to i32
  %cmp384 = icmp sgt i32 %conv382, %conv383
  %conv385 = zext i1 %cmp384 to i32
  %conv386 = trunc i32 %conv385 to i8
  br label %return

if.end387:                                        ; preds = %if.end372
  %inc388 = add i32 %inc356, 1
  %inc389 = add i32 %inc357, 1
  %idxprom390 = zext i32 %inc388 to i64
  %arrayidx391 = getelementptr inbounds i8, i8* %block, i64 %idxprom390
  %i50 = load i8, i8* %arrayidx391, align 1
  %idxprom392 = zext i32 %inc389 to i64
  %arrayidx393 = getelementptr inbounds i8, i8* %block, i64 %idxprom392
  %i51 = load i8, i8* %arrayidx393, align 1
  %conv394 = zext i8 %i50 to i32
  %conv395 = zext i8 %i51 to i32
  %cmp396 = icmp ne i32 %conv394, %conv395
  br i1 %cmp396, label %if.then398, label %if.end404

if.then398:                                       ; preds = %if.end387
  %conv399 = zext i8 %i50 to i32
  %conv400 = zext i8 %i51 to i32
  %cmp401 = icmp sgt i32 %conv399, %conv400
  %conv402 = zext i1 %cmp401 to i32
  %conv403 = trunc i32 %conv402 to i8
  br label %return

if.end404:                                        ; preds = %if.end387
  %idxprom405 = zext i32 %inc388 to i64
  %arrayidx406 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom405
  %i52 = load i16, i16* %arrayidx406, align 2
  %idxprom407 = zext i32 %inc389 to i64
  %arrayidx408 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom407
  %i53 = load i16, i16* %arrayidx408, align 2
  %conv409 = zext i16 %i52 to i32
  %conv410 = zext i16 %i53 to i32
  %cmp411 = icmp ne i32 %conv409, %conv410
  br i1 %cmp411, label %if.then413, label %if.end419

if.then413:                                       ; preds = %if.end404
  %conv414 = zext i16 %i52 to i32
  %conv415 = zext i16 %i53 to i32
  %cmp416 = icmp sgt i32 %conv414, %conv415
  %conv417 = zext i1 %cmp416 to i32
  %conv418 = trunc i32 %conv417 to i8
  br label %return

if.end419:                                        ; preds = %if.end404
  %inc420 = add i32 %inc388, 1
  %inc421 = add i32 %inc389, 1
  %idxprom422 = zext i32 %inc420 to i64
  %arrayidx423 = getelementptr inbounds i8, i8* %block, i64 %idxprom422
  %i54 = load i8, i8* %arrayidx423, align 1
  %idxprom424 = zext i32 %inc421 to i64
  %arrayidx425 = getelementptr inbounds i8, i8* %block, i64 %idxprom424
  %i55 = load i8, i8* %arrayidx425, align 1
  %conv426 = zext i8 %i54 to i32
  %conv427 = zext i8 %i55 to i32
  %cmp428 = icmp ne i32 %conv426, %conv427
  br i1 %cmp428, label %if.then430, label %if.end436

if.then430:                                       ; preds = %if.end419
  %conv431 = zext i8 %i54 to i32
  %conv432 = zext i8 %i55 to i32
  %cmp433 = icmp sgt i32 %conv431, %conv432
  %conv434 = zext i1 %cmp433 to i32
  %conv435 = trunc i32 %conv434 to i8
  br label %return

if.end436:                                        ; preds = %if.end419
  %idxprom437 = zext i32 %inc420 to i64
  %arrayidx438 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom437
  %i56 = load i16, i16* %arrayidx438, align 2
  %idxprom439 = zext i32 %inc421 to i64
  %arrayidx440 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom439
  %i57 = load i16, i16* %arrayidx440, align 2
  %conv441 = zext i16 %i56 to i32
  %conv442 = zext i16 %i57 to i32
  %cmp443 = icmp ne i32 %conv441, %conv442
  br i1 %cmp443, label %if.then445, label %if.end451

if.then445:                                       ; preds = %if.end436
  %conv446 = zext i16 %i56 to i32
  %conv447 = zext i16 %i57 to i32
  %cmp448 = icmp sgt i32 %conv446, %conv447
  %conv449 = zext i1 %cmp448 to i32
  %conv450 = trunc i32 %conv449 to i8
  br label %return

if.end451:                                        ; preds = %if.end436
  %inc452 = add i32 %inc420, 1
  %inc453 = add i32 %inc421, 1
  %cmp454 = icmp uge i32 %inc452, %nblock
  br i1 %cmp454, label %if.then456, label %if.end457

if.then456:                                       ; preds = %if.end451
  %sub = sub i32 %inc452, %nblock
  br label %if.end457

if.end457:                                        ; preds = %if.then456, %if.end451
  %i1.addr.1 = phi i32 [ %sub, %if.then456 ], [ %inc452, %if.end451 ]
  %cmp458 = icmp uge i32 %inc453, %nblock
  br i1 %cmp458, label %if.then460, label %if.end462

if.then460:                                       ; preds = %if.end457
  %sub461 = sub i32 %inc453, %nblock
  br label %if.end462

if.end462:                                        ; preds = %if.then460, %if.end457
  %i2.addr.1 = phi i32 [ %sub461, %if.then460 ], [ %inc453, %if.end457 ]
  %sub463 = sub nsw i32 %k.0, 8
  %i58 = load i32, i32* %budget, align 4
  %dec = add nsw i32 %i58, -1
  store i32 %dec, i32* %budget, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end462
  %cmp464 = icmp sge i32 %sub463, 0
  br i1 %cmp464, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %return

return:                                           ; preds = %do.end, %if.then445, %if.then430, %if.then413, %if.then398, %if.then381, %if.then366, %if.then349, %if.then334, %if.then317, %if.then302, %if.then285, %if.then270, %if.then253, %if.then238, %if.then221, %if.then206, %if.then189, %if.then172, %if.then155, %if.then138, %if.then121, %if.then104, %if.then87, %if.then70, %if.then53, %if.then36, %if.then19, %if.then
  %retval.0 = phi i8 [ %conv9, %if.then ], [ %conv24, %if.then19 ], [ %conv41, %if.then36 ], [ %conv58, %if.then53 ], [ %conv75, %if.then70 ], [ %conv92, %if.then87 ], [ %conv109, %if.then104 ], [ %conv126, %if.then121 ], [ %conv143, %if.then138 ], [ %conv160, %if.then155 ], [ %conv177, %if.then172 ], [ %conv194, %if.then189 ], [ %conv211, %if.then206 ], [ %conv226, %if.then221 ], [ %conv243, %if.then238 ], [ %conv258, %if.then253 ], [ %conv275, %if.then270 ], [ %conv290, %if.then285 ], [ %conv307, %if.then302 ], [ %conv322, %if.then317 ], [ %conv339, %if.then334 ], [ %conv354, %if.then349 ], [ %conv371, %if.then366 ], [ %conv386, %if.then381 ], [ %conv403, %if.then398 ], [ %conv418, %if.then413 ], [ %conv435, %if.then430 ], [ %conv450, %if.then445 ], [ 0, %do.end ]
  ret i8 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @fallbackQSort3(i32* %fmap, i32* %eclass, i32 %loSt, i32 %hiSt) #0 {
entry:
  %stackLo = alloca [100 x i32], align 16
  %stackHi = alloca [100 x i32], align 16
  %idxprom = sext i32 0 to i64
  %arrayidx = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom
  store i32 %loSt, i32* %arrayidx, align 4
  %idxprom1 = sext i32 0 to i64
  %arrayidx2 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom1
  store i32 %hiSt, i32* %arrayidx2, align 4
  %inc = add nsw i32 0, 1
  br label %while.cond

while.cond:                                       ; preds = %if.end191, %if.then106, %if.then9, %entry
  %r.0 = phi i32 [ 0, %entry ], [ %r.0, %if.then9 ], [ %rem, %if.then106 ], [ %rem, %if.end191 ]
  %sp.0 = phi i32 [ %inc, %entry ], [ %dec, %if.then9 ], [ %dec, %if.then106 ], [ %sp.1, %if.end191 ]
  %cmp = icmp sgt i32 %sp.0, 0
  br i1 %cmp, label %while.body, label %while.end192

while.body:                                       ; preds = %while.cond
  %cmp3 = icmp slt i32 %sp.0, 100
  br i1 %cmp3, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  call void @BZ2_bz__AssertH__fail(i32 1004)
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %dec = add nsw i32 %sp.0, -1
  %idxprom4 = sext i32 %dec to i64
  %arrayidx5 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom4
  %i = load i32, i32* %arrayidx5, align 4
  %idxprom6 = sext i32 %dec to i64
  %arrayidx7 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom6
  %i1 = load i32, i32* %arrayidx7, align 4
  %sub = sub nsw i32 %i1, %i
  %cmp8 = icmp slt i32 %sub, 10
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  call void @fallbackSimpleSort(i32* %fmap, i32* %eclass, i32 %i, i32 %i1)
  br label %while.cond

if.end10:                                         ; preds = %if.end
  %mul = mul i32 %r.0, 7621
  %add = add i32 %mul, 1
  %rem = urem i32 %add, 32768
  %rem11 = urem i32 %rem, 3
  %cmp12 = icmp eq i32 %rem11, 0
  br i1 %cmp12, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.end10
  %idxprom14 = sext i32 %i to i64
  %arrayidx15 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom14
  %i2 = load i32, i32* %arrayidx15, align 4
  %idxprom16 = zext i32 %i2 to i64
  %arrayidx17 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom16
  %i3 = load i32, i32* %arrayidx17, align 4
  br label %if.end31

if.else:                                          ; preds = %if.end10
  %cmp18 = icmp eq i32 %rem11, 1
  br i1 %cmp18, label %if.then19, label %if.else25

if.then19:                                        ; preds = %if.else
  %add20 = add nsw i32 %i, %i1
  %shr = ashr i32 %add20, 1
  %idxprom21 = sext i32 %shr to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom21
  %i4 = load i32, i32* %arrayidx22, align 4
  %idxprom23 = zext i32 %i4 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom23
  %i5 = load i32, i32* %arrayidx24, align 4
  br label %if.end30

if.else25:                                        ; preds = %if.else
  %idxprom26 = sext i32 %i1 to i64
  %arrayidx27 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom26
  %i6 = load i32, i32* %arrayidx27, align 4
  %idxprom28 = zext i32 %i6 to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom28
  %i7 = load i32, i32* %arrayidx29, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.else25, %if.then19
  %med.0 = phi i32 [ %i5, %if.then19 ], [ %i7, %if.else25 ]
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then13
  %med.1 = phi i32 [ %i3, %if.then13 ], [ %med.0, %if.end30 ]
  br label %while.body33

while.body33:                                     ; preds = %if.end92, %if.end31
  %gtHi.0 = phi i32 [ %i1, %if.end31 ], [ %gtHi.1, %if.end92 ]
  %ltLo.0 = phi i32 [ %i, %if.end31 ], [ %ltLo.1, %if.end92 ]
  %unHi.0 = phi i32 [ %i1, %if.end31 ], [ %dec103, %if.end92 ]
  %unLo.0 = phi i32 [ %i, %if.end31 ], [ %inc102, %if.end92 ]
  br label %while.body35

while.body35:                                     ; preds = %if.end59, %if.then45, %while.body33
  %ltLo.1 = phi i32 [ %ltLo.0, %while.body33 ], [ %inc54, %if.then45 ], [ %ltLo.1, %if.end59 ]
  %unLo.1 = phi i32 [ %unLo.0, %while.body33 ], [ %inc55, %if.then45 ], [ %inc60, %if.end59 ]
  %cmp36 = icmp sgt i32 %unLo.1, %unHi.0
  br i1 %cmp36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %while.body35
  br label %while.end

if.end38:                                         ; preds = %while.body35
  %idxprom39 = sext i32 %unLo.1 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom39
  %i8 = load i32, i32* %arrayidx40, align 4
  %idxprom41 = zext i32 %i8 to i64
  %arrayidx42 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom41
  %i9 = load i32, i32* %arrayidx42, align 4
  %sub43 = sub nsw i32 %i9, %med.1
  %cmp44 = icmp eq i32 %sub43, 0
  br i1 %cmp44, label %if.then45, label %if.end56

if.then45:                                        ; preds = %if.end38
  %idxprom46 = sext i32 %unLo.1 to i64
  %arrayidx47 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom46
  %i10 = load i32, i32* %arrayidx47, align 4
  %idxprom48 = sext i32 %ltLo.1 to i64
  %arrayidx49 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom48
  %i11 = load i32, i32* %arrayidx49, align 4
  %idxprom50 = sext i32 %unLo.1 to i64
  %arrayidx51 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom50
  store i32 %i11, i32* %arrayidx51, align 4
  %idxprom52 = sext i32 %ltLo.1 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom52
  store i32 %i10, i32* %arrayidx53, align 4
  %inc54 = add nsw i32 %ltLo.1, 1
  %inc55 = add nsw i32 %unLo.1, 1
  br label %while.body35

if.end56:                                         ; preds = %if.end38
  %cmp57 = icmp sgt i32 %sub43, 0
  br i1 %cmp57, label %if.then58, label %if.end59

if.then58:                                        ; preds = %if.end56
  br label %while.end

if.end59:                                         ; preds = %if.end56
  %inc60 = add nsw i32 %unLo.1, 1
  br label %while.body35

while.end:                                        ; preds = %if.then58, %if.then37
  br label %while.body62

while.body62:                                     ; preds = %if.end87, %if.then72, %while.end
  %gtHi.1 = phi i32 [ %gtHi.0, %while.end ], [ %dec82, %if.then72 ], [ %gtHi.1, %if.end87 ]
  %unHi.1 = phi i32 [ %unHi.0, %while.end ], [ %dec83, %if.then72 ], [ %dec88, %if.end87 ]
  %cmp63 = icmp sgt i32 %unLo.1, %unHi.1
  br i1 %cmp63, label %if.then64, label %if.end65

if.then64:                                        ; preds = %while.body62
  br label %while.end89

if.end65:                                         ; preds = %while.body62
  %idxprom66 = sext i32 %unHi.1 to i64
  %arrayidx67 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom66
  %i12 = load i32, i32* %arrayidx67, align 4
  %idxprom68 = zext i32 %i12 to i64
  %arrayidx69 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom68
  %i13 = load i32, i32* %arrayidx69, align 4
  %sub70 = sub nsw i32 %i13, %med.1
  %cmp71 = icmp eq i32 %sub70, 0
  br i1 %cmp71, label %if.then72, label %if.end84

if.then72:                                        ; preds = %if.end65
  %idxprom74 = sext i32 %unHi.1 to i64
  %arrayidx75 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom74
  %i14 = load i32, i32* %arrayidx75, align 4
  %idxprom76 = sext i32 %gtHi.1 to i64
  %arrayidx77 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom76
  %i15 = load i32, i32* %arrayidx77, align 4
  %idxprom78 = sext i32 %unHi.1 to i64
  %arrayidx79 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom78
  store i32 %i15, i32* %arrayidx79, align 4
  %idxprom80 = sext i32 %gtHi.1 to i64
  %arrayidx81 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom80
  store i32 %i14, i32* %arrayidx81, align 4
  %dec82 = add nsw i32 %gtHi.1, -1
  %dec83 = add nsw i32 %unHi.1, -1
  br label %while.body62

if.end84:                                         ; preds = %if.end65
  %cmp85 = icmp slt i32 %sub70, 0
  br i1 %cmp85, label %if.then86, label %if.end87

if.then86:                                        ; preds = %if.end84
  br label %while.end89

if.end87:                                         ; preds = %if.end84
  %dec88 = add nsw i32 %unHi.1, -1
  br label %while.body62

while.end89:                                      ; preds = %if.then86, %if.then64
  %cmp90 = icmp sgt i32 %unLo.1, %unHi.1
  br i1 %cmp90, label %if.then91, label %if.end92

if.then91:                                        ; preds = %while.end89
  br label %while.end104

if.end92:                                         ; preds = %while.end89
  %idxprom94 = sext i32 %unLo.1 to i64
  %arrayidx95 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom94
  %i16 = load i32, i32* %arrayidx95, align 4
  %idxprom96 = sext i32 %unHi.1 to i64
  %arrayidx97 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom96
  %i17 = load i32, i32* %arrayidx97, align 4
  %idxprom98 = sext i32 %unLo.1 to i64
  %arrayidx99 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom98
  store i32 %i17, i32* %arrayidx99, align 4
  %idxprom100 = sext i32 %unHi.1 to i64
  %arrayidx101 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom100
  store i32 %i16, i32* %arrayidx101, align 4
  %inc102 = add nsw i32 %unLo.1, 1
  %dec103 = add nsw i32 %unHi.1, -1
  br label %while.body33

while.end104:                                     ; preds = %if.then91
  %cmp105 = icmp slt i32 %gtHi.1, %ltLo.1
  br i1 %cmp105, label %if.then106, label %if.end107

if.then106:                                       ; preds = %while.end104
  br label %while.cond

if.end107:                                        ; preds = %while.end104
  %sub108 = sub nsw i32 %ltLo.1, %i
  %sub109 = sub nsw i32 %unLo.1, %ltLo.1
  %cmp110 = icmp slt i32 %sub108, %sub109
  br i1 %cmp110, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end107
  %sub111 = sub nsw i32 %ltLo.1, %i
  br label %cond.end

cond.false:                                       ; preds = %if.end107
  %sub112 = sub nsw i32 %unLo.1, %ltLo.1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub111, %cond.true ], [ %sub112, %cond.false ]
  %sub113 = sub nsw i32 %unLo.1, %cond
  br label %while.cond114

while.cond114:                                    ; preds = %while.body116, %cond.end
  %yyp1.0 = phi i32 [ %i, %cond.end ], [ %inc126, %while.body116 ]
  %yyp2.0 = phi i32 [ %sub113, %cond.end ], [ %inc127, %while.body116 ]
  %yyn.0 = phi i32 [ %cond, %cond.end ], [ %dec128, %while.body116 ]
  %cmp115 = icmp sgt i32 %yyn.0, 0
  br i1 %cmp115, label %while.body116, label %while.end129

while.body116:                                    ; preds = %while.cond114
  %idxprom118 = sext i32 %yyp1.0 to i64
  %arrayidx119 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom118
  %i18 = load i32, i32* %arrayidx119, align 4
  %idxprom120 = sext i32 %yyp2.0 to i64
  %arrayidx121 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom120
  %i19 = load i32, i32* %arrayidx121, align 4
  %idxprom122 = sext i32 %yyp1.0 to i64
  %arrayidx123 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom122
  store i32 %i19, i32* %arrayidx123, align 4
  %idxprom124 = sext i32 %yyp2.0 to i64
  %arrayidx125 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom124
  store i32 %i18, i32* %arrayidx125, align 4
  %inc126 = add nsw i32 %yyp1.0, 1
  %inc127 = add nsw i32 %yyp2.0, 1
  %dec128 = add nsw i32 %yyn.0, -1
  br label %while.cond114

while.end129:                                     ; preds = %while.cond114
  %sub130 = sub nsw i32 %i1, %gtHi.1
  %sub131 = sub nsw i32 %gtHi.1, %unHi.1
  %cmp132 = icmp slt i32 %sub130, %sub131
  br i1 %cmp132, label %cond.true133, label %cond.false135

cond.true133:                                     ; preds = %while.end129
  %sub134 = sub nsw i32 %i1, %gtHi.1
  br label %cond.end137

cond.false135:                                    ; preds = %while.end129
  %sub136 = sub nsw i32 %gtHi.1, %unHi.1
  br label %cond.end137

cond.end137:                                      ; preds = %cond.false135, %cond.true133
  %cond138 = phi i32 [ %sub134, %cond.true133 ], [ %sub136, %cond.false135 ]
  %sub141 = sub nsw i32 %i1, %cond138
  %add142 = add nsw i32 %sub141, 1
  br label %while.cond144

while.cond144:                                    ; preds = %while.body146, %cond.end137
  %yyp1139.0 = phi i32 [ %unLo.1, %cond.end137 ], [ %inc156, %while.body146 ]
  %yyp2140.0 = phi i32 [ %add142, %cond.end137 ], [ %inc157, %while.body146 ]
  %yyn143.0 = phi i32 [ %cond138, %cond.end137 ], [ %dec158, %while.body146 ]
  %cmp145 = icmp sgt i32 %yyn143.0, 0
  br i1 %cmp145, label %while.body146, label %while.end159

while.body146:                                    ; preds = %while.cond144
  %idxprom148 = sext i32 %yyp1139.0 to i64
  %arrayidx149 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom148
  %i20 = load i32, i32* %arrayidx149, align 4
  %idxprom150 = sext i32 %yyp2140.0 to i64
  %arrayidx151 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom150
  %i21 = load i32, i32* %arrayidx151, align 4
  %idxprom152 = sext i32 %yyp1139.0 to i64
  %arrayidx153 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom152
  store i32 %i21, i32* %arrayidx153, align 4
  %idxprom154 = sext i32 %yyp2140.0 to i64
  %arrayidx155 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom154
  store i32 %i20, i32* %arrayidx155, align 4
  %inc156 = add nsw i32 %yyp1139.0, 1
  %inc157 = add nsw i32 %yyp2140.0, 1
  %dec158 = add nsw i32 %yyn143.0, -1
  br label %while.cond144

while.end159:                                     ; preds = %while.cond144
  %add160 = add nsw i32 %i, %unLo.1
  %sub161 = sub nsw i32 %add160, %ltLo.1
  %sub162 = sub nsw i32 %sub161, 1
  %sub163 = sub nsw i32 %gtHi.1, %unHi.1
  %sub164 = sub nsw i32 %i1, %sub163
  %add165 = add nsw i32 %sub164, 1
  %sub166 = sub nsw i32 %sub162, %i
  %sub167 = sub nsw i32 %i1, %add165
  %cmp168 = icmp sgt i32 %sub166, %sub167
  br i1 %cmp168, label %if.then169, label %if.else180

if.then169:                                       ; preds = %while.end159
  %idxprom170 = sext i32 %dec to i64
  %arrayidx171 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom170
  store i32 %i, i32* %arrayidx171, align 4
  %idxprom172 = sext i32 %dec to i64
  %arrayidx173 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom172
  store i32 %sub162, i32* %arrayidx173, align 4
  %inc174 = add nsw i32 %dec, 1
  %idxprom175 = sext i32 %inc174 to i64
  %arrayidx176 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom175
  store i32 %add165, i32* %arrayidx176, align 4
  %idxprom177 = sext i32 %inc174 to i64
  %arrayidx178 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom177
  store i32 %i1, i32* %arrayidx178, align 4
  %inc179 = add nsw i32 %inc174, 1
  br label %if.end191

if.else180:                                       ; preds = %while.end159
  %idxprom181 = sext i32 %dec to i64
  %arrayidx182 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom181
  store i32 %add165, i32* %arrayidx182, align 4
  %idxprom183 = sext i32 %dec to i64
  %arrayidx184 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom183
  store i32 %i1, i32* %arrayidx184, align 4
  %inc185 = add nsw i32 %dec, 1
  %idxprom186 = sext i32 %inc185 to i64
  %arrayidx187 = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo, i64 0, i64 %idxprom186
  store i32 %i, i32* %arrayidx187, align 4
  %idxprom188 = sext i32 %inc185 to i64
  %arrayidx189 = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi, i64 0, i64 %idxprom188
  store i32 %sub162, i32* %arrayidx189, align 4
  %inc190 = add nsw i32 %inc185, 1
  br label %if.end191

if.end191:                                        ; preds = %if.else180, %if.then169
  %sp.1 = phi i32 [ %inc179, %if.then169 ], [ %inc190, %if.else180 ]
  br label %while.cond

while.end192:                                     ; preds = %while.cond
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @fallbackSimpleSort(i32* %fmap, i32* %eclass, i32 %lo, i32 %hi) #0 {
entry:
  %cmp = icmp eq i32 %lo, %hi
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end58

if.end:                                           ; preds = %entry
  %sub = sub nsw i32 %hi, %lo
  %cmp1 = icmp sgt i32 %sub, 3
  br i1 %cmp1, label %if.then2, label %if.end26

if.then2:                                         ; preds = %if.end
  %sub3 = sub nsw i32 %hi, 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc24, %if.then2
  %i.0 = phi i32 [ %sub3, %if.then2 ], [ %dec, %for.inc24 ]
  %cmp4 = icmp sge i32 %i.0, %lo
  br i1 %cmp4, label %for.body, label %for.end25

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i32, i32* %fmap, i64 %idxprom
  %i = load i32, i32* %arrayidx, align 4
  %idxprom5 = sext i32 %i to i64
  %arrayidx6 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom5
  %i1 = load i32, i32* %arrayidx6, align 4
  %add = add nsw i32 %i.0, 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ %add, %for.body ], [ %add20, %for.inc ]
  %cmp8 = icmp sle i32 %j.0, %hi
  br i1 %cmp8, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond7
  %idxprom9 = sext i32 %j.0 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom9
  %i2 = load i32, i32* %arrayidx10, align 4
  %idxprom11 = zext i32 %i2 to i64
  %arrayidx12 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom11
  %i3 = load i32, i32* %arrayidx12, align 4
  %cmp13 = icmp ugt i32 %i1, %i3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond7
  %i4 = phi i1 [ false, %for.cond7 ], [ %cmp13, %land.rhs ]
  br i1 %i4, label %for.body14, label %for.end

for.body14:                                       ; preds = %land.end
  %idxprom15 = sext i32 %j.0 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom15
  %i5 = load i32, i32* %arrayidx16, align 4
  %sub17 = sub nsw i32 %j.0, 4
  %idxprom18 = sext i32 %sub17 to i64
  %arrayidx19 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom18
  store i32 %i5, i32* %arrayidx19, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body14
  %add20 = add nsw i32 %j.0, 4
  br label %for.cond7

for.end:                                          ; preds = %land.end
  %sub21 = sub nsw i32 %j.0, 4
  %idxprom22 = sext i32 %sub21 to i64
  %arrayidx23 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom22
  store i32 %i, i32* %arrayidx23, align 4
  br label %for.inc24

for.inc24:                                        ; preds = %for.end
  %dec = add nsw i32 %i.0, -1
  br label %for.cond

for.end25:                                        ; preds = %for.cond
  br label %if.end26

if.end26:                                         ; preds = %for.end25, %if.end
  %sub27 = sub nsw i32 %hi, 1
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc56, %if.end26
  %i.1 = phi i32 [ %sub27, %if.end26 ], [ %dec57, %for.inc56 ]
  %cmp29 = icmp sge i32 %i.1, %lo
  br i1 %cmp29, label %for.body30, label %for.end58

for.body30:                                       ; preds = %for.cond28
  %idxprom31 = sext i32 %i.1 to i64
  %arrayidx32 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom31
  %i6 = load i32, i32* %arrayidx32, align 4
  %idxprom33 = sext i32 %i6 to i64
  %arrayidx34 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom33
  %i7 = load i32, i32* %arrayidx34, align 4
  %add35 = add nsw i32 %i.1, 1
  br label %for.cond36

for.cond36:                                       ; preds = %for.inc51, %for.body30
  %j.1 = phi i32 [ %add35, %for.body30 ], [ %inc, %for.inc51 ]
  %cmp37 = icmp sle i32 %j.1, %hi
  br i1 %cmp37, label %land.rhs38, label %land.end44

land.rhs38:                                       ; preds = %for.cond36
  %idxprom39 = sext i32 %j.1 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom39
  %i8 = load i32, i32* %arrayidx40, align 4
  %idxprom41 = zext i32 %i8 to i64
  %arrayidx42 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom41
  %i9 = load i32, i32* %arrayidx42, align 4
  %cmp43 = icmp ugt i32 %i7, %i9
  br label %land.end44

land.end44:                                       ; preds = %land.rhs38, %for.cond36
  %i10 = phi i1 [ false, %for.cond36 ], [ %cmp43, %land.rhs38 ]
  br i1 %i10, label %for.body45, label %for.end52

for.body45:                                       ; preds = %land.end44
  %idxprom46 = sext i32 %j.1 to i64
  %arrayidx47 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom46
  %i11 = load i32, i32* %arrayidx47, align 4
  %sub48 = sub nsw i32 %j.1, 1
  %idxprom49 = sext i32 %sub48 to i64
  %arrayidx50 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom49
  store i32 %i11, i32* %arrayidx50, align 4
  br label %for.inc51

for.inc51:                                        ; preds = %for.body45
  %inc = add nsw i32 %j.1, 1
  br label %for.cond36

for.end52:                                        ; preds = %land.end44
  %sub53 = sub nsw i32 %j.1, 1
  %idxprom54 = sext i32 %sub53 to i64
  %arrayidx55 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom54
  store i32 %i6, i32* %arrayidx55, align 4
  br label %for.inc56

for.inc56:                                        ; preds = %for.end52
  %dec57 = add nsw i32 %i.1, -1
  br label %for.cond28

for.end58:                                        ; preds = %for.cond28, %if.then
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @compressStream(i32 %stream, i32 %zStream) #0 {
entry:
  %ibuf = alloca [5000 x i8], align 16
  %nbytes_in_lo32 = alloca i32, align 4
  %nbytes_in_hi32 = alloca i32, align 4
  %nbytes_out_lo32 = alloca i32, align 4
  %nbytes_out_hi32 = alloca i32, align 4
  %bzerr = alloca i32, align 4
  %bzerr_dummy = alloca i32, align 4
  %buf_nin = alloca [32 x i8], align 16
  %buf_nout = alloca [32 x i8], align 16
  %nbytes_in = alloca %struct.UInt64, align 1
  %nbytes_out = alloca %struct.UInt64, align 1
  %i = load i32, i32* @blockSize100k, align 4
  %i1 = load i32, i32* @verbosity, align 4
  %i2 = load i32, i32* @workFactor, align 4
  %call = call i8* @BZ2_bzWriteOpen(i32* %bzerr, i32 %zStream, i32 %i, i32 %i1, i32 %i2)
  %i3 = load i32, i32* %bzerr, align 4
  %cmp = icmp ne i32 %i3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %errhandler

if.end:                                           ; preds = %entry
  %i4 = load i32, i32* @verbosity, align 4
  %cmp1 = icmp sge i32 %i4, 2
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %i5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0))
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end
  br label %while.body

while.body:                                       ; preds = %if.end15, %if.end4
  %call5 = call zeroext i8 @myfeof(i32 %stream)
  %tobool = icmp ne i8 %call5, 0
  br i1 %tobool, label %if.then6, label %if.end7

if.then6:                                         ; preds = %while.body
  br label %while.end

if.end7:                                          ; preds = %while.body
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %ibuf, i64 0, i64 0
  %call8 = call i32 @spec_fread(i8* %arraydecay, i32 1, i32 5000, i32 %stream)
  %cmp9 = icmp sgt i32 %call8, 0
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end7
  %arraydecay11 = getelementptr inbounds [5000 x i8], [5000 x i8]* %ibuf, i64 0, i64 0
  call void @BZ2_bzWrite(i32* %bzerr, i8* %call, i8* %arraydecay11, i32 %call8)
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end7
  %i6 = load i32, i32* %bzerr, align 4
  %cmp13 = icmp ne i32 %i6, 0
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end12
  br label %errhandler

if.end15:                                         ; preds = %if.end12
  br label %while.body

while.end:                                        ; preds = %if.then6
  call void @BZ2_bzWriteClose64(i32* %bzerr, i8* %call, i32 0, i32* %nbytes_in_lo32, i32* %nbytes_in_hi32, i32* %nbytes_out_lo32, i32* %nbytes_out_hi32)
  %i7 = load i32, i32* %bzerr, align 4
  %cmp16 = icmp ne i32 %i7, 0
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %while.end
  br label %errhandler

if.end18:                                         ; preds = %while.end
  %cmp19 = icmp eq i32 0, -1
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end18
  br label %errhandler_io

if.end21:                                         ; preds = %if.end18
  %cmp22 = icmp ne i32 %zStream, 1
  br i1 %cmp22, label %if.then23, label %if.end27

if.then23:                                        ; preds = %if.end21
  store i32 0, i32* @outputHandleJustInCase, align 4
  %cmp24 = icmp eq i32 0, -1
  br i1 %cmp24, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.then23
  br label %errhandler_io

if.end26:                                         ; preds = %if.then23
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end21
  store i32 0, i32* @outputHandleJustInCase, align 4
  %cmp28 = icmp eq i32 0, -1
  br i1 %cmp28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end27
  br label %errhandler_io

if.end30:                                         ; preds = %if.end27
  %i8 = load i32, i32* @verbosity, align 4
  %cmp31 = icmp sge i32 %i8, 1
  br i1 %cmp31, label %if.then32, label %if.end48

if.then32:                                        ; preds = %if.end30
  %i9 = load i32, i32* %nbytes_in_lo32, align 4
  %cmp33 = icmp eq i32 %i9, 0
  br i1 %cmp33, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then32
  %i10 = load i32, i32* %nbytes_in_hi32, align 4
  %cmp34 = icmp eq i32 %i10, 0
  br i1 %cmp34, label %if.then35, label %if.else

if.then35:                                        ; preds = %land.lhs.true
  %i11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i11, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.54, i64 0, i64 0))
  br label %if.end47

if.else:                                          ; preds = %land.lhs.true, %if.then32
  %i12 = load i32, i32* %nbytes_in_lo32, align 4
  %i13 = load i32, i32* %nbytes_in_hi32, align 4
  call void @uInt64_from_UInt32s(%struct.UInt64* %nbytes_in, i32 %i12, i32 %i13)
  %i14 = load i32, i32* %nbytes_out_lo32, align 4
  %i15 = load i32, i32* %nbytes_out_hi32, align 4
  call void @uInt64_from_UInt32s(%struct.UInt64* %nbytes_out, i32 %i14, i32 %i15)
  %call37 = call double @uInt64_to_double(%struct.UInt64* %nbytes_in)
  %call38 = call double @uInt64_to_double(%struct.UInt64* %nbytes_out)
  %arraydecay39 = getelementptr inbounds [32 x i8], [32 x i8]* %buf_nin, i64 0, i64 0
  call void @uInt64_toAscii(i8* %arraydecay39, %struct.UInt64* %nbytes_in)
  %arraydecay40 = getelementptr inbounds [32 x i8], [32 x i8]* %buf_nout, i64 0, i64 0
  call void @uInt64_toAscii(i8* %arraydecay40, %struct.UInt64* %nbytes_out)
  %i16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %div = fdiv double %call37, %call38
  %mul = fmul double 8.000000e+00, %call38
  %div41 = fdiv double %mul, %call37
  %div42 = fdiv double %call38, %call37
  %sub = fsub double 1.000000e+00, %div42
  %mul43 = fmul double 1.000000e+02, %sub
  %arraydecay44 = getelementptr inbounds [32 x i8], [32 x i8]* %buf_nin, i64 0, i64 0
  %arraydecay45 = getelementptr inbounds [32 x i8], [32 x i8]* %buf_nout, i64 0, i64 0
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2.55, i64 0, i64 0), double %div, double %div41, double %mul43, i8* %arraydecay44, i8* %arraydecay45)
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.then35
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end30
  br label %return

errhandler:                                       ; preds = %if.then17, %if.then14, %if.then
  call void @BZ2_bzWriteClose64(i32* %bzerr_dummy, i8* %call, i32 1, i32* %nbytes_in_lo32, i32* %nbytes_in_hi32, i32* %nbytes_out_lo32, i32* %nbytes_out_hi32)
  %i17 = load i32, i32* %bzerr, align 4
  switch i32 %i17, label %sw.default [
    i32 -9, label %sw.bb
    i32 -3, label %sw.bb49
    i32 -6, label %sw.bb50
  ]

sw.bb:                                            ; preds = %errhandler
  call void @configError()
  br label %sw.epilog

sw.bb49:                                          ; preds = %errhandler
  call void @outOfMemory()
  br label %sw.epilog

sw.bb50:                                          ; preds = %errhandler
  br label %errhandler_io

errhandler_io:                                    ; preds = %sw.bb50, %if.then29, %if.then25, %if.then20
  call void @ioError()
  br label %sw.epilog

sw.default:                                       ; preds = %errhandler
  call void @panic(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.56, i64 0, i64 0))
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %errhandler_io, %sw.bb49, %sw.bb
  call void @panic(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.57, i64 0, i64 0))
  br label %return

return:                                           ; preds = %sw.epilog, %if.end48
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @myfeof(i32 %f) #0 {
entry:
  %call = call i32 @spec_getc(i32 %f)
  %cmp = icmp eq i32 %call, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %conv = trunc i32 %call to i8
  %call1 = call i32 @spec_ungetc(i8 zeroext %conv, i32 %f)
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.end ]
  ret i8 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @uInt64_from_UInt32s(%struct.UInt64* %n, i32 %lo32, i32 %hi32) #0 {
entry:
  %shr = lshr i32 %hi32, 24
  %and = and i32 %shr, 255
  %conv = trunc i32 %and to i8
  %b = getelementptr inbounds %struct.UInt64, %struct.UInt64* %n, i32 0, i32 0
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %b, i64 0, i64 7
  store i8 %conv, i8* %arrayidx, align 1
  %shr1 = lshr i32 %hi32, 16
  %and2 = and i32 %shr1, 255
  %conv3 = trunc i32 %and2 to i8
  %b4 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %n, i32 0, i32 0
  %arrayidx5 = getelementptr inbounds [8 x i8], [8 x i8]* %b4, i64 0, i64 6
  store i8 %conv3, i8* %arrayidx5, align 1
  %shr6 = lshr i32 %hi32, 8
  %and7 = and i32 %shr6, 255
  %conv8 = trunc i32 %and7 to i8
  %b9 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %n, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [8 x i8], [8 x i8]* %b9, i64 0, i64 5
  store i8 %conv8, i8* %arrayidx10, align 1
  %and11 = and i32 %hi32, 255
  %conv12 = trunc i32 %and11 to i8
  %b13 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %n, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [8 x i8], [8 x i8]* %b13, i64 0, i64 4
  store i8 %conv12, i8* %arrayidx14, align 1
  %shr15 = lshr i32 %lo32, 24
  %and16 = and i32 %shr15, 255
  %conv17 = trunc i32 %and16 to i8
  %b18 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %n, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [8 x i8], [8 x i8]* %b18, i64 0, i64 3
  store i8 %conv17, i8* %arrayidx19, align 1
  %shr20 = lshr i32 %lo32, 16
  %and21 = and i32 %shr20, 255
  %conv22 = trunc i32 %and21 to i8
  %b23 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %n, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [8 x i8], [8 x i8]* %b23, i64 0, i64 2
  store i8 %conv22, i8* %arrayidx24, align 1
  %shr25 = lshr i32 %lo32, 8
  %and26 = and i32 %shr25, 255
  %conv27 = trunc i32 %and26 to i8
  %b28 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %n, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [8 x i8], [8 x i8]* %b28, i64 0, i64 1
  store i8 %conv27, i8* %arrayidx29, align 1
  %and30 = and i32 %lo32, 255
  %conv31 = trunc i32 %and30 to i8
  %b32 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %n, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [8 x i8], [8 x i8]* %b32, i64 0, i64 0
  store i8 %conv31, i8* %arrayidx33, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal double @uInt64_to_double(%struct.UInt64* %n) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %base.0 = phi double [ 1.000000e+00, %entry ], [ %mul1, %for.inc ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %sum.0 = phi double [ 0.000000e+00, %entry ], [ %add, %for.inc ]
  %cmp = icmp slt i32 %i.0, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %b = getelementptr inbounds %struct.UInt64, %struct.UInt64* %n, i32 0, i32 0
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %b, i64 0, i64 %idxprom
  %i = load i8, i8* %arrayidx, align 1
  %conv = uitofp i8 %i to double
  %mul = fmul double %base.0, %conv
  %add = fadd double %sum.0, %mul
  %mul1 = fmul double %base.0, 2.560000e+02
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret double %sum.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @uInt64_toAscii(i8* %outbuf, %struct.UInt64* %n) #0 {
entry:
  %buf = alloca [32 x i8], align 16
  %n_copy = alloca %struct.UInt64, align 1
  %i = bitcast %struct.UInt64* %n_copy to i8*
  %i1 = bitcast %struct.UInt64* %n to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %i, i8* align 1 %i1, i64 8, i1 false)
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %nBuf.0 = phi i32 [ 0, %entry ], [ %inc, %do.cond ]
  %call = call i32 @uInt64_qrm10(%struct.UInt64* %n_copy)
  %add = add nsw i32 %call, 48
  %conv = trunc i32 %add to i8
  %idxprom = sext i32 %nBuf.0 to i64
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 %idxprom
  store i8 %conv, i8* %arrayidx, align 1
  %inc = add nsw i32 %nBuf.0, 1
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %call1 = call zeroext i8 @uInt64_isZero(%struct.UInt64* %n_copy)
  %tobool = icmp ne i8 %call1, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %idxprom2 = sext i32 %inc to i64
  %arrayidx3 = getelementptr inbounds i8, i8* %outbuf, i64 %idxprom2
  store i8 0, i8* %arrayidx3, align 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %i.0 = phi i32 [ 0, %do.end ], [ %inc10, %for.inc ]
  %cmp = icmp slt i32 %i.0, %inc
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %sub = sub nsw i32 %inc, %i.0
  %sub5 = sub nsw i32 %sub, 1
  %idxprom6 = sext i32 %sub5 to i64
  %arrayidx7 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 %idxprom6
  %i2 = load i8, i8* %arrayidx7, align 1
  %idxprom8 = sext i32 %i.0 to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %outbuf, i64 %idxprom8
  store i8 %i2, i8* %arrayidx9, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc10 = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @configError() #0 {
entry:
  %i = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i, i8* getelementptr inbounds ([236 x i8], [236 x i8]* @.str.17.62, i64 0, i64 0))
  call void @setExit(i32 3)
  %i1 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %i1) #9
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @outOfMemory() #0 {
entry:
  %i = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %i1 = load i8*, i8** @progName, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16.61, i64 0, i64 0), i8* %i1)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @ioError() #0 {
entry:
  %i = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %i1 = load i8*, i8** @progName, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.15.60, i64 0, i64 0), i8* %i1)
  %i2 = load i8*, i8** @progName, align 8
  call void @perror(i8* %i2)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @panic(i8* %s) #0 {
entry:
  %i = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %i1 = load i8*, i8** @progName, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.10.58, i64 0, i64 0), i8* %i1, i8* %s)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 3)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @showFileNames() #0 {
entry:
  %i = load i8, i8* @noisy, align 1
  %tobool = icmp ne i8 %i, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %i1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.59, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @cleanUpAndFail(i32 %ec) #0 {
entry:
  call void @setExit(i32 %ec)
  %i = load i32, i32* @exitValue, align 4
  call void @exit(i32 %i) #9
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @setExit(i32 %v) #0 {
entry:
  store i32 0, i32* @exitValue, align 4
  ret void
}

declare dso_local void @perror(i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @uInt64_qrm10(%struct.UInt64* %n) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %rem.0 = phi i32 [ 0, %entry ], [ %rem5, %for.inc ]
  %i.0 = phi i32 [ 7, %entry ], [ %dec, %for.inc ]
  %cmp = icmp sge i32 %i.0, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %mul = mul i32 %rem.0, 256
  %b = getelementptr inbounds %struct.UInt64, %struct.UInt64* %n, i32 0, i32 0
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %b, i64 0, i64 %idxprom
  %i = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %i to i32
  %add = add i32 %mul, %conv
  %div = udiv i32 %add, 10
  %conv1 = trunc i32 %div to i8
  %b2 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %n, i32 0, i32 0
  %idxprom3 = sext i32 %i.0 to i64
  %arrayidx4 = getelementptr inbounds [8 x i8], [8 x i8]* %b2, i64 0, i64 %idxprom3
  store i8 %conv1, i8* %arrayidx4, align 1
  %rem5 = urem i32 %add, 10
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %dec = add nsw i32 %i.0, -1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret i32 %rem.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uInt64_isZero(%struct.UInt64* %n) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %b = getelementptr inbounds %struct.UInt64, %struct.UInt64* %n, i32 0, i32 0
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %b, i64 0, i64 %idxprom
  %i = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %i to i32
  %cmp1 = icmp ne i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %return

return:                                           ; preds = %for.end, %if.then
  %retval.0 = phi i8 [ 0, %if.then ], [ 1, %for.end ]
  ret i8 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uncompressStream(i32 %zStream, i32 %stream) #0 {
entry:
  %bzerr = alloca i32, align 4
  %bzerr_dummy = alloca i32, align 4
  %obuf = alloca [5000 x i8], align 16
  %unused = alloca [5000 x i8], align 16
  %nUnused = alloca i32, align 4
  %unusedTmpV = alloca i8*, align 8
  store i32 0, i32* %nUnused, align 4
  br label %while.body

while.body:                                       ; preds = %if.end48, %entry
  %streamNo.0 = phi i32 [ 0, %entry ], [ %inc, %if.end48 ]
  %i = load i32, i32* @verbosity, align 4
  %i1 = load i8, i8* @smallMode, align 1
  %conv = zext i8 %i1 to i32
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 0
  %i2 = load i32, i32* %nUnused, align 4
  %call = call i8* @BZ2_bzReadOpen(i32* %bzerr, i32 %zStream, i32 %i, i32 %conv, i8* %arraydecay, i32 %i2)
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %i3 = load i32, i32* %bzerr, align 4
  %cmp2 = icmp ne i32 %i3, 0
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %while.body
  br label %errhandler

if.end:                                           ; preds = %lor.lhs.false
  %inc = add nsw i32 %streamNo.0, 1
  br label %while.cond4

while.cond4:                                      ; preds = %if.end24, %if.end
  %i4 = load i32, i32* %bzerr, align 4
  %cmp5 = icmp eq i32 %i4, 0
  br i1 %cmp5, label %while.body7, label %while.end

while.body7:                                      ; preds = %while.cond4
  %arraydecay8 = getelementptr inbounds [5000 x i8], [5000 x i8]* %obuf, i64 0, i64 0
  %call9 = call i32 @BZ2_bzRead(i32* %bzerr, i8* %call, i8* %arraydecay8, i32 5000)
  %i5 = load i32, i32* %bzerr, align 4
  %cmp10 = icmp eq i32 %i5, -5
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %while.body7
  br label %trycat

if.end13:                                         ; preds = %while.body7
  %i6 = load i32, i32* %bzerr, align 4
  %cmp14 = icmp eq i32 %i6, 0
  br i1 %cmp14, label %land.lhs.true, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %if.end13
  %i7 = load i32, i32* %bzerr, align 4
  %cmp17 = icmp eq i32 %i7, 4
  br i1 %cmp17, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %lor.lhs.false16, %if.end13
  %cmp19 = icmp sgt i32 %call9, 0
  br i1 %cmp19, label %if.then21, label %if.end24

if.then21:                                        ; preds = %land.lhs.true
  %arraydecay22 = getelementptr inbounds [5000 x i8], [5000 x i8]* %obuf, i64 0, i64 0
  %call23 = call i32 @spec_fwrite(i8* %arraydecay22, i32 1, i32 %call9, i32 %stream)
  br label %if.end24

if.end24:                                         ; preds = %if.then21, %land.lhs.true, %lor.lhs.false16
  br label %while.cond4

while.end:                                        ; preds = %while.cond4
  %i8 = load i32, i32* %bzerr, align 4
  %cmp25 = icmp ne i32 %i8, 4
  br i1 %cmp25, label %if.then27, label %if.end28

if.then27:                                        ; preds = %while.end
  br label %errhandler

if.end28:                                         ; preds = %while.end
  call void @BZ2_bzReadGetUnused(i32* %bzerr, i8* %call, i8** %unusedTmpV, i32* %nUnused)
  %i9 = load i32, i32* %bzerr, align 4
  %cmp29 = icmp ne i32 %i9, 0
  br i1 %cmp29, label %if.then31, label %if.end32

if.then31:                                        ; preds = %if.end28
  call void @panic(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5.65, i64 0, i64 0))
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %if.end28
  %i10 = load i8*, i8** %unusedTmpV, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end32
  %i.0 = phi i32 [ 0, %if.end32 ], [ %inc37, %for.inc ]
  %i11 = load i32, i32* %nUnused, align 4
  %cmp33 = icmp slt i32 %i.0, %i11
  br i1 %cmp33, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %i10, i64 %idxprom
  %i12 = load i8, i8* %arrayidx, align 1
  %idxprom35 = sext i32 %i.0 to i64
  %arrayidx36 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 %idxprom35
  store i8 %i12, i8* %arrayidx36, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc37 = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @BZ2_bzReadClose(i32* %bzerr, i8* %call)
  %i13 = load i32, i32* %bzerr, align 4
  %cmp38 = icmp ne i32 %i13, 0
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %for.end
  call void @panic(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5.65, i64 0, i64 0))
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %for.end
  %i14 = load i32, i32* %nUnused, align 4
  %cmp42 = icmp eq i32 %i14, 0
  br i1 %cmp42, label %land.lhs.true44, label %if.end48

land.lhs.true44:                                  ; preds = %if.end41
  %call45 = call zeroext i8 @myfeof(i32 %zStream)
  %conv46 = zext i8 %call45 to i32
  %tobool = icmp ne i32 %conv46, 0
  br i1 %tobool, label %if.then47, label %if.end48

if.then47:                                        ; preds = %land.lhs.true44
  br label %while.end49

if.end48:                                         ; preds = %land.lhs.true44, %if.end41
  br label %while.body

while.end49:                                      ; preds = %if.then47
  br label %closeok

closeok:                                          ; preds = %while.end87, %while.end49
  %cmp50 = icmp eq i32 0, -1
  br i1 %cmp50, label %if.then52, label %if.end53

if.then52:                                        ; preds = %closeok
  br label %errhandler_io

if.end53:                                         ; preds = %closeok
  %cmp54 = icmp ne i32 0, 0
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end53
  br label %errhandler_io

if.end57:                                         ; preds = %if.end53
  %cmp58 = icmp ne i32 %stream, 1
  br i1 %cmp58, label %if.then60, label %if.end65

if.then60:                                        ; preds = %if.end57
  store i32 0, i32* @outputHandleJustInCase, align 4
  %cmp61 = icmp eq i32 0, -1
  br i1 %cmp61, label %if.then63, label %if.end64

if.then63:                                        ; preds = %if.then60
  br label %errhandler_io

if.end64:                                         ; preds = %if.then60
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end57
  store i32 0, i32* @outputHandleJustInCase, align 4
  %i15 = load i32, i32* @verbosity, align 4
  %cmp66 = icmp sge i32 %i15, 2
  br i1 %cmp66, label %if.then68, label %if.end70

if.then68:                                        ; preds = %if.end65
  %i16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call69 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.66, i64 0, i64 0))
  br label %if.end70

if.end70:                                         ; preds = %if.then68, %if.end65
  br label %return

trycat:                                           ; preds = %if.then12
  %i17 = load i8, i8* @forceOverwrite, align 1
  %tobool71 = icmp ne i8 %i17, 0
  br i1 %tobool71, label %if.then72, label %if.end88

if.then72:                                        ; preds = %trycat
  %call73 = call i32 @spec_rewind(i32 %zStream)
  br label %while.body74

while.body74:                                     ; preds = %if.end86, %if.then72
  %call75 = call zeroext i8 @myfeof(i32 %zStream)
  %tobool76 = icmp ne i8 %call75, 0
  br i1 %tobool76, label %if.then77, label %if.end78

if.then77:                                        ; preds = %while.body74
  br label %while.end87

if.end78:                                         ; preds = %while.body74
  %arraydecay79 = getelementptr inbounds [5000 x i8], [5000 x i8]* %obuf, i64 0, i64 0
  %call80 = call i32 @spec_fread(i8* %arraydecay79, i32 1, i32 5000, i32 %zStream)
  %cmp81 = icmp sgt i32 %call80, 0
  br i1 %cmp81, label %if.then83, label %if.end86

if.then83:                                        ; preds = %if.end78
  %arraydecay84 = getelementptr inbounds [5000 x i8], [5000 x i8]* %obuf, i64 0, i64 0
  %call85 = call i32 @spec_fwrite(i8* %arraydecay84, i32 1, i32 %call80, i32 %stream)
  br label %if.end86

if.end86:                                         ; preds = %if.then83, %if.end78
  br label %while.body74

while.end87:                                      ; preds = %if.then77
  br label %closeok

if.end88:                                         ; preds = %trycat
  br label %errhandler

errhandler:                                       ; preds = %if.end88, %if.then27, %if.then
  %streamNo.1 = phi i32 [ %streamNo.0, %if.then ], [ %inc, %if.end88 ], [ %inc, %if.then27 ]
  call void @BZ2_bzReadClose(i32* %bzerr_dummy, i8* %call)
  %i18 = load i32, i32* %bzerr, align 4
  switch i32 %i18, label %sw.default [
    i32 -9, label %sw.bb
    i32 -6, label %sw.bb89
    i32 -4, label %sw.bb90
    i32 -3, label %sw.bb91
    i32 -7, label %sw.bb92
    i32 -5, label %sw.bb93
  ]

sw.bb:                                            ; preds = %errhandler
  call void @configError()
  br label %sw.epilog

sw.bb89:                                          ; preds = %errhandler
  br label %errhandler_io

errhandler_io:                                    ; preds = %sw.bb89, %if.then63, %if.then56, %if.then52
  call void @ioError()
  br label %sw.epilog

sw.bb90:                                          ; preds = %errhandler
  call void @crcError()
  br label %sw.bb91

sw.bb91:                                          ; preds = %sw.bb90, %errhandler
  call void @outOfMemory()
  br label %sw.bb92

sw.bb92:                                          ; preds = %sw.bb91, %errhandler
  call void @compressedStreamEOF()
  br label %sw.bb93

sw.bb93:                                          ; preds = %sw.bb92, %errhandler
  %cmp94 = icmp ne i32 %zStream, 0
  br i1 %cmp94, label %if.then96, label %if.end97

if.then96:                                        ; preds = %sw.bb93
  br label %if.end97

if.end97:                                         ; preds = %if.then96, %sw.bb93
  %cmp98 = icmp ne i32 %stream, 1
  br i1 %cmp98, label %if.then100, label %if.end101

if.then100:                                       ; preds = %if.end97
  br label %if.end101

if.end101:                                        ; preds = %if.then100, %if.end97
  %cmp102 = icmp eq i32 %streamNo.1, 1
  br i1 %cmp102, label %if.then104, label %if.else

if.then104:                                       ; preds = %if.end101
  br label %return

if.else:                                          ; preds = %if.end101
  %i19 = load i8, i8* @noisy, align 1
  %tobool105 = icmp ne i8 %i19, 0
  br i1 %tobool105, label %if.then106, label %if.end108

if.then106:                                       ; preds = %if.else
  %i20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %i21 = load i8*, i8** @progName, align 8
  %call107 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i20, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7.67, i64 0, i64 0), i8* %i21, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %if.end108

if.end108:                                        ; preds = %if.then106, %if.else
  br label %return

sw.default:                                       ; preds = %errhandler
  call void @panic(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.68, i64 0, i64 0))
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %errhandler_io, %sw.bb
  call void @panic(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9.69, i64 0, i64 0))
  br label %return

return:                                           ; preds = %sw.epilog, %if.end108, %if.then104, %if.end70
  %retval.0 = phi i8 [ 1, %sw.epilog ], [ 0, %if.then104 ], [ 1, %if.end108 ], [ 1, %if.end70 ]
  ret i8 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @crcError() #0 {
entry:
  %i = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %i1 = load i8*, i8** @progName, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12.72, i64 0, i64 0), i8* %i1)
  call void @showFileNames()
  call void @cadvise()
  call void @cleanUpAndFail(i32 2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @compressedStreamEOF() #0 {
entry:
  %i = load i8, i8* @noisy, align 1
  %tobool = icmp ne i8 %i, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %i1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %i2 = load i8*, i8** @progName, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i1, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.14.70, i64 0, i64 0), i8* %i2)
  %i3 = load i8*, i8** @progName, align 8
  call void @perror(i8* %i3)
  call void @showFileNames()
  call void @cadvise()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @cleanUpAndFail(i32 2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @cadvise() #0 {
entry:
  %i = load i8, i8* @noisy, align 1
  %tobool = icmp ne i8 %i, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %i1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i1, i8* getelementptr inbounds ([241 x i8], [241 x i8]* @.str.13.71, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bz__AssertH__fail(i32 %errcode) #0 {
entry:
  %i = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i8* @BZ2_bzlibVersion()
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i, i8* getelementptr inbounds ([269 x i8], [269 x i8]* @.str.75, i64 0, i64 0), i32 %errcode, i8* %call)
  %cmp = icmp eq i32 %errcode, 1007
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %i1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i1, i8* getelementptr inbounds ([1057 x i8], [1057 x i8]* @.str.1.76, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @exit(i32 0) #9
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzlibVersion() #0 {
entry:
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.77, i64 0, i64 0)
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzCompressInit(%struct.bz_stream* %strm, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) #0 {
entry:
  %call = call i32 @bz_config_ok()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %cmp = icmp eq %struct.bz_stream* %strm, null
  br i1 %cmp, label %if.then8, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %cmp1 = icmp slt i32 %blockSize100k, 1
  br i1 %cmp1, label %if.then8, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %cmp3 = icmp sgt i32 %blockSize100k, 9
  br i1 %cmp3, label %if.then8, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %cmp5 = icmp slt i32 %workFactor, 0
  br i1 %cmp5, label %if.then8, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %cmp7 = icmp sgt i32 %workFactor, 250
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %if.end
  br label %return

if.end9:                                          ; preds = %lor.lhs.false6
  %cmp10 = icmp eq i32 %workFactor, 0
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end9
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end9
  %workFactor.addr.0 = phi i32 [ 30, %if.then11 ], [ %workFactor, %if.end9 ]
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  %i = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8
  %cmp13 = icmp eq i8* (i8*, i32, i32)* %i, null
  br i1 %cmp13, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end12
  %bzalloc15 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %bzalloc15, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end12
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i1 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8
  %cmp17 = icmp eq void (i8*, i8*)* %i1, null
  br i1 %cmp17, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end16
  %bzfree19 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %bzfree19, align 8
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end16
  %bzalloc21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  %i2 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc21, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i3 = load i8*, i8** %opaque, align 8
  %call22 = call i8* %i2(i8* %i3, i32 55768, i32 1)
  %i4 = bitcast i8* %call22 to %struct.EState*
  %cmp23 = icmp eq %struct.EState* %i4, null
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end20
  br label %return

if.end25:                                         ; preds = %if.end20
  %strm26 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 0
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm26, align 8
  %arr1 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 4
  store i32* null, i32** %arr1, align 8
  %arr2 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 5
  store i32* null, i32** %arr2, align 8
  %ftab = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 6
  store i32* null, i32** %ftab, align 8
  %mul = mul nsw i32 100000, %blockSize100k
  %bzalloc27 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  %i5 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc27, align 8
  %opaque28 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i6 = load i8*, i8** %opaque28, align 8
  %conv = sext i32 %mul to i64
  %mul29 = mul i64 %conv, 4
  %conv30 = trunc i64 %mul29 to i32
  %call31 = call i8* %i5(i8* %i6, i32 %conv30, i32 1)
  %i7 = bitcast i8* %call31 to i32*
  %arr132 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 4
  store i32* %i7, i32** %arr132, align 8
  %bzalloc33 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  %i8 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc33, align 8
  %opaque34 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i9 = load i8*, i8** %opaque34, align 8
  %add = add nsw i32 %mul, 34
  %conv35 = sext i32 %add to i64
  %mul36 = mul i64 %conv35, 4
  %conv37 = trunc i64 %mul36 to i32
  %call38 = call i8* %i8(i8* %i9, i32 %conv37, i32 1)
  %i10 = bitcast i8* %call38 to i32*
  %arr239 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 5
  store i32* %i10, i32** %arr239, align 8
  %bzalloc40 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  %i11 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc40, align 8
  %opaque41 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i12 = load i8*, i8** %opaque41, align 8
  %call42 = call i8* %i11(i8* %i12, i32 262148, i32 1)
  %i13 = bitcast i8* %call42 to i32*
  %ftab43 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 6
  store i32* %i13, i32** %ftab43, align 8
  %arr144 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 4
  %i14 = load i32*, i32** %arr144, align 8
  %cmp45 = icmp eq i32* %i14, null
  br i1 %cmp45, label %if.then55, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %if.end25
  %arr248 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 5
  %i15 = load i32*, i32** %arr248, align 8
  %cmp49 = icmp eq i32* %i15, null
  br i1 %cmp49, label %if.then55, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %lor.lhs.false47
  %ftab52 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 6
  %i16 = load i32*, i32** %ftab52, align 8
  %cmp53 = icmp eq i32* %i16, null
  br i1 %cmp53, label %if.then55, label %if.end86

if.then55:                                        ; preds = %lor.lhs.false51, %lor.lhs.false47, %if.end25
  %arr156 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 4
  %i17 = load i32*, i32** %arr156, align 8
  %cmp57 = icmp ne i32* %i17, null
  br i1 %cmp57, label %if.then59, label %if.end63

if.then59:                                        ; preds = %if.then55
  %bzfree60 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i18 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree60, align 8
  %opaque61 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i19 = load i8*, i8** %opaque61, align 8
  %arr162 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 4
  %i20 = load i32*, i32** %arr162, align 8
  %i21 = bitcast i32* %i20 to i8*
  call void %i18(i8* %i19, i8* %i21)
  br label %if.end63

if.end63:                                         ; preds = %if.then59, %if.then55
  %arr264 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 5
  %i22 = load i32*, i32** %arr264, align 8
  %cmp65 = icmp ne i32* %i22, null
  br i1 %cmp65, label %if.then67, label %if.end71

if.then67:                                        ; preds = %if.end63
  %bzfree68 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i23 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree68, align 8
  %opaque69 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i24 = load i8*, i8** %opaque69, align 8
  %arr270 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 5
  %i25 = load i32*, i32** %arr270, align 8
  %i26 = bitcast i32* %i25 to i8*
  call void %i23(i8* %i24, i8* %i26)
  br label %if.end71

if.end71:                                         ; preds = %if.then67, %if.end63
  %ftab72 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 6
  %i27 = load i32*, i32** %ftab72, align 8
  %cmp73 = icmp ne i32* %i27, null
  br i1 %cmp73, label %if.then75, label %if.end79

if.then75:                                        ; preds = %if.end71
  %bzfree76 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i28 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree76, align 8
  %opaque77 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i29 = load i8*, i8** %opaque77, align 8
  %ftab78 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 6
  %i30 = load i32*, i32** %ftab78, align 8
  %i31 = bitcast i32* %i30 to i8*
  call void %i28(i8* %i29, i8* %i31)
  br label %if.end79

if.end79:                                         ; preds = %if.then75, %if.end71
  %cmp80 = icmp ne %struct.EState* %i4, null
  br i1 %cmp80, label %if.then82, label %if.end85

if.then82:                                        ; preds = %if.end79
  %bzfree83 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i32 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree83, align 8
  %opaque84 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i33 = load i8*, i8** %opaque84, align 8
  %i34 = bitcast %struct.EState* %i4 to i8*
  call void %i32(i8* %i33, i8* %i34)
  br label %if.end85

if.end85:                                         ; preds = %if.then82, %if.end79
  br label %return

if.end86:                                         ; preds = %lor.lhs.false51
  %blockNo = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 29
  store i32 0, i32* %blockNo, align 4
  %state = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 2
  store i32 2, i32* %state, align 4
  %mode = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 1
  store i32 2, i32* %mode, align 8
  %combinedCRC = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 27
  store i32 0, i32* %combinedCRC, align 4
  %blockSize100k87 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 30
  store i32 %blockSize100k, i32* %blockSize100k87, align 8
  %mul88 = mul nsw i32 100000, %blockSize100k
  %sub = sub nsw i32 %mul88, 19
  %nblockMAX = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 18
  store i32 %sub, i32* %nblockMAX, align 8
  %verbosity89 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 28
  store i32 %verbosity, i32* %verbosity89, align 8
  %workFactor90 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 12
  store i32 %workFactor.addr.0, i32* %workFactor90, align 8
  %arr291 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 5
  %i35 = load i32*, i32** %arr291, align 8
  %i36 = bitcast i32* %i35 to i8*
  %block = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 9
  store i8* %i36, i8** %block, align 8
  %arr192 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 4
  %i37 = load i32*, i32** %arr192, align 8
  %i38 = bitcast i32* %i37 to i16*
  %mtfv = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 10
  store i16* %i38, i16** %mtfv, align 8
  %zbits = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 11
  store i8* null, i8** %zbits, align 8
  %arr193 = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 4
  %i39 = load i32*, i32** %arr193, align 8
  %ptr = getelementptr inbounds %struct.EState, %struct.EState* %i4, i32 0, i32 8
  store i32* %i39, i32** %ptr, align 8
  %i40 = bitcast %struct.EState* %i4 to i8*
  %state94 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 8
  store i8* %i40, i8** %state94, align 8
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 2
  store i32 0, i32* %total_in_lo32, align 4
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 3
  store i32 0, i32* %total_in_hi32, align 8
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 6
  store i32 0, i32* %total_out_lo32, align 4
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 7
  store i32 0, i32* %total_out_hi32, align 8
  call void @init_RL(%struct.EState* %i4)
  call void @prepare_new_block(%struct.EState* %i4)
  br label %return

return:                                           ; preds = %if.end86, %if.end85, %if.then24, %if.then8, %if.then
  %retval.0 = phi i32 [ -2, %if.then8 ], [ -3, %if.then24 ], [ -3, %if.end85 ], [ 0, %if.end86 ], [ -9, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @bz_config_ok() #0 {
entry:
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @default_bzalloc(i8* %opaque, i32 %items, i32 %size) #0 {
entry:
  %mul = mul nsw i32 %items, %size
  %conv = sext i32 %mul to i64
  %call = call noalias i8* @malloc(i64 %conv) #8
  ret i8* %call
}

; Function Attrs: noinline nounwind uwtable
define internal void @default_bzfree(i8* %opaque, i8* %addr) #0 {
entry:
  %cmp = icmp ne i8* %addr, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @free(i8* %addr) #8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_RL(%struct.EState* %s) #0 {
entry:
  %state_in_ch = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  store i32 256, i32* %state_in_ch, align 4
  %state_in_len = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  store i32 0, i32* %state_in_len, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @prepare_new_block(%struct.EState* %s) #0 {
entry:
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  store i32 0, i32* %nblock, align 4
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  store i32 0, i32* %numZ, align 4
  %state_out_pos = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 20
  store i32 0, i32* %state_out_pos, align 8
  %blockCRC = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  store i32 -1, i32* %blockCRC, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 256
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %inUse = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 22
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %blockNo = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 29
  %i = load i32, i32* %blockNo, align 4
  %inc1 = add nsw i32 %i, 1
  store i32 %inc1, i32* %blockNo, align 4
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzCompress(%struct.bz_stream* %strm, i32 %action) #0 {
entry:
  %cmp = icmp eq %struct.bz_stream* %strm, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 8
  %i = load i8*, i8** %state, align 8
  %i1 = bitcast i8* %i to %struct.EState*
  %cmp1 = icmp eq %struct.EState* %i1, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  br label %return

if.end3:                                          ; preds = %if.end
  %strm4 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 0
  %i2 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8
  %cmp5 = icmp ne %struct.bz_stream* %i2, %strm
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  br label %return

if.end7:                                          ; preds = %if.end3
  br label %preswitch

preswitch:                                        ; preds = %if.then18, %if.then13, %if.end7
  %mode = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 1
  %i3 = load i32, i32* %mode, align 8
  switch i32 %i3, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb8
    i32 3, label %sw.bb23
    i32 4, label %sw.bb47
  ]

sw.bb:                                            ; preds = %preswitch
  br label %return

sw.bb8:                                           ; preds = %preswitch
  %cmp9 = icmp eq i32 %action, 0
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %sw.bb8
  %call = call zeroext i8 @handle_compress(%struct.bz_stream* %strm)
  %conv = zext i8 %call to i32
  %tobool = icmp ne i32 %conv, 0
  %i4 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 1, i32 -2
  br label %return

if.else:                                          ; preds = %sw.bb8
  %cmp11 = icmp eq i32 %action, 1
  br i1 %cmp11, label %if.then13, label %if.else15

if.then13:                                        ; preds = %if.else
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 1
  %i5 = load i32, i32* %avail_in, align 8
  %avail_in_expect = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 3
  store i32 %i5, i32* %avail_in_expect, align 8
  %mode14 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 1
  store i32 3, i32* %mode14, align 8
  br label %preswitch

if.else15:                                        ; preds = %if.else
  %cmp16 = icmp eq i32 %action, 2
  br i1 %cmp16, label %if.then18, label %if.else22

if.then18:                                        ; preds = %if.else15
  %avail_in19 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 1
  %i6 = load i32, i32* %avail_in19, align 8
  %avail_in_expect20 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 3
  store i32 %i6, i32* %avail_in_expect20, align 8
  %mode21 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 1
  store i32 4, i32* %mode21, align 8
  br label %preswitch

if.else22:                                        ; preds = %if.else15
  br label %return

sw.bb23:                                          ; preds = %preswitch
  %cmp24 = icmp ne i32 %action, 1
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %sw.bb23
  br label %return

if.end27:                                         ; preds = %sw.bb23
  %avail_in_expect28 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 3
  %i7 = load i32, i32* %avail_in_expect28, align 8
  %strm29 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 0
  %i8 = load %struct.bz_stream*, %struct.bz_stream** %strm29, align 8
  %avail_in30 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i8, i32 0, i32 1
  %i9 = load i32, i32* %avail_in30, align 8
  %cmp31 = icmp ne i32 %i7, %i9
  br i1 %cmp31, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.end27
  br label %return

if.end34:                                         ; preds = %if.end27
  %call35 = call zeroext i8 @handle_compress(%struct.bz_stream* %strm)
  %avail_in_expect36 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 3
  %i10 = load i32, i32* %avail_in_expect36, align 8
  %cmp37 = icmp ugt i32 %i10, 0
  br i1 %cmp37, label %if.then44, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end34
  %call39 = call zeroext i8 @isempty_RL(%struct.EState* %i1)
  %tobool40 = icmp ne i8 %call39, 0
  br i1 %tobool40, label %lor.lhs.false41, label %if.then44

lor.lhs.false41:                                  ; preds = %lor.lhs.false
  %state_out_pos = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 20
  %i11 = load i32, i32* %state_out_pos, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 19
  %i12 = load i32, i32* %numZ, align 4
  %cmp42 = icmp slt i32 %i11, %i12
  br i1 %cmp42, label %if.then44, label %if.end45

if.then44:                                        ; preds = %lor.lhs.false41, %lor.lhs.false, %if.end34
  br label %return

if.end45:                                         ; preds = %lor.lhs.false41
  %mode46 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 1
  store i32 2, i32* %mode46, align 8
  br label %return

sw.bb47:                                          ; preds = %preswitch
  %cmp48 = icmp ne i32 %action, 2
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %sw.bb47
  br label %return

if.end51:                                         ; preds = %sw.bb47
  %avail_in_expect52 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 3
  %i13 = load i32, i32* %avail_in_expect52, align 8
  %strm53 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 0
  %i14 = load %struct.bz_stream*, %struct.bz_stream** %strm53, align 8
  %avail_in54 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i14, i32 0, i32 1
  %i15 = load i32, i32* %avail_in54, align 8
  %cmp55 = icmp ne i32 %i13, %i15
  br i1 %cmp55, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.end51
  br label %return

if.end58:                                         ; preds = %if.end51
  %call59 = call zeroext i8 @handle_compress(%struct.bz_stream* %strm)
  %tobool60 = icmp ne i8 %call59, 0
  br i1 %tobool60, label %if.end62, label %if.then61

if.then61:                                        ; preds = %if.end58
  br label %return

if.end62:                                         ; preds = %if.end58
  %avail_in_expect63 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 3
  %i16 = load i32, i32* %avail_in_expect63, align 8
  %cmp64 = icmp ugt i32 %i16, 0
  br i1 %cmp64, label %if.then74, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %if.end62
  %call67 = call zeroext i8 @isempty_RL(%struct.EState* %i1)
  %tobool68 = icmp ne i8 %call67, 0
  br i1 %tobool68, label %lor.lhs.false69, label %if.then74

lor.lhs.false69:                                  ; preds = %lor.lhs.false66
  %state_out_pos70 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 20
  %i17 = load i32, i32* %state_out_pos70, align 8
  %numZ71 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 19
  %i18 = load i32, i32* %numZ71, align 4
  %cmp72 = icmp slt i32 %i17, %i18
  br i1 %cmp72, label %if.then74, label %if.end75

if.then74:                                        ; preds = %lor.lhs.false69, %lor.lhs.false66, %if.end62
  br label %return

if.end75:                                         ; preds = %lor.lhs.false69
  %mode76 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 1
  store i32 1, i32* %mode76, align 8
  br label %return

sw.epilog:                                        ; preds = %preswitch
  br label %return

return:                                           ; preds = %sw.epilog, %if.end75, %if.then74, %if.then61, %if.then57, %if.then50, %if.end45, %if.then44, %if.then33, %if.then26, %if.else22, %if.then10, %sw.bb, %if.then6, %if.then2, %if.then
  %retval.0 = phi i32 [ -2, %if.then ], [ -2, %if.then2 ], [ -2, %if.then6 ], [ 0, %sw.epilog ], [ -1, %if.then50 ], [ -1, %if.then57 ], [ 3, %if.then74 ], [ 4, %if.end75 ], [ -1, %if.then61 ], [ -1, %if.then26 ], [ -1, %if.then33 ], [ 2, %if.then44 ], [ 1, %if.end45 ], [ %cond, %if.then10 ], [ -2, %if.else22 ], [ -1, %sw.bb ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @handle_compress(%struct.bz_stream* %strm) #0 {
entry:
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 8
  %i = load i8*, i8** %state, align 8
  %i1 = bitcast i8* %i to %struct.EState*
  br label %while.body

while.body:                                       ; preds = %if.end65, %entry
  %progress_in.0 = phi i8 [ 0, %entry ], [ %progress_in.1, %if.end65 ]
  %progress_out.0 = phi i8 [ 0, %entry ], [ %progress_out.1, %if.end65 ]
  %state1 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 2
  %i2 = load i32, i32* %state1, align 4
  %cmp = icmp eq i32 %i2, 1
  br i1 %cmp, label %if.then, label %if.end30

if.then:                                          ; preds = %while.body
  %call = call zeroext i8 @copy_output_until_stop(%struct.EState* %i1)
  %conv = zext i8 %call to i32
  %conv2 = zext i8 %progress_out.0 to i32
  %or = or i32 %conv2, %conv
  %conv3 = trunc i32 %or to i8
  %state_out_pos = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 20
  %i3 = load i32, i32* %state_out_pos, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 19
  %i4 = load i32, i32* %numZ, align 4
  %cmp4 = icmp slt i32 %i3, %i4
  br i1 %cmp4, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then
  br label %while.end

if.end:                                           ; preds = %if.then
  %mode = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 1
  %i5 = load i32, i32* %mode, align 8
  %cmp7 = icmp eq i32 %i5, 4
  br i1 %cmp7, label %land.lhs.true, label %if.end15

land.lhs.true:                                    ; preds = %if.end
  %avail_in_expect = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 3
  %i6 = load i32, i32* %avail_in_expect, align 8
  %cmp9 = icmp eq i32 %i6, 0
  br i1 %cmp9, label %land.lhs.true11, label %if.end15

land.lhs.true11:                                  ; preds = %land.lhs.true
  %call12 = call zeroext i8 @isempty_RL(%struct.EState* %i1)
  %conv13 = zext i8 %call12 to i32
  %tobool = icmp ne i32 %conv13, 0
  br i1 %tobool, label %if.then14, label %if.end15

if.then14:                                        ; preds = %land.lhs.true11
  br label %while.end

if.end15:                                         ; preds = %land.lhs.true11, %land.lhs.true, %if.end
  call void @prepare_new_block(%struct.EState* %i1)
  %state16 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 2
  store i32 2, i32* %state16, align 4
  %mode17 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 1
  %i7 = load i32, i32* %mode17, align 8
  %cmp18 = icmp eq i32 %i7, 3
  br i1 %cmp18, label %land.lhs.true20, label %if.end29

land.lhs.true20:                                  ; preds = %if.end15
  %avail_in_expect21 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 3
  %i8 = load i32, i32* %avail_in_expect21, align 8
  %cmp22 = icmp eq i32 %i8, 0
  br i1 %cmp22, label %land.lhs.true24, label %if.end29

land.lhs.true24:                                  ; preds = %land.lhs.true20
  %call25 = call zeroext i8 @isempty_RL(%struct.EState* %i1)
  %conv26 = zext i8 %call25 to i32
  %tobool27 = icmp ne i32 %conv26, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %land.lhs.true24
  br label %while.end

if.end29:                                         ; preds = %land.lhs.true24, %land.lhs.true20, %if.end15
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %while.body
  %progress_out.1 = phi i8 [ %conv3, %if.end29 ], [ %progress_out.0, %while.body ]
  %state31 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 2
  %i9 = load i32, i32* %state31, align 4
  %cmp32 = icmp eq i32 %i9, 2
  br i1 %cmp32, label %if.then34, label %if.end65

if.then34:                                        ; preds = %if.end30
  %call35 = call zeroext i8 @copy_input_until_stop(%struct.EState* %i1)
  %conv36 = zext i8 %call35 to i32
  %conv37 = zext i8 %progress_in.0 to i32
  %or38 = or i32 %conv37, %conv36
  %conv39 = trunc i32 %or38 to i8
  %mode40 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 1
  %i10 = load i32, i32* %mode40, align 8
  %cmp41 = icmp ne i32 %i10, 2
  br i1 %cmp41, label %land.lhs.true43, label %if.else

land.lhs.true43:                                  ; preds = %if.then34
  %avail_in_expect44 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 3
  %i11 = load i32, i32* %avail_in_expect44, align 8
  %cmp45 = icmp eq i32 %i11, 0
  br i1 %cmp45, label %if.then47, label %if.else

if.then47:                                        ; preds = %land.lhs.true43
  call void @flush_RL(%struct.EState* %i1)
  %mode48 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 1
  %i12 = load i32, i32* %mode48, align 8
  %cmp49 = icmp eq i32 %i12, 4
  %conv50 = zext i1 %cmp49 to i32
  %conv51 = trunc i32 %conv50 to i8
  call void @BZ2_compressBlock(%struct.EState* %i1, i8 zeroext %conv51)
  %state52 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 2
  store i32 1, i32* %state52, align 4
  br label %if.end64

if.else:                                          ; preds = %land.lhs.true43, %if.then34
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 17
  %i13 = load i32, i32* %nblock, align 4
  %nblockMAX = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 18
  %i14 = load i32, i32* %nblockMAX, align 8
  %cmp53 = icmp sge i32 %i13, %i14
  br i1 %cmp53, label %if.then55, label %if.else57

if.then55:                                        ; preds = %if.else
  call void @BZ2_compressBlock(%struct.EState* %i1, i8 zeroext 0)
  %state56 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 2
  store i32 1, i32* %state56, align 4
  br label %if.end63

if.else57:                                        ; preds = %if.else
  %strm58 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 0
  %i15 = load %struct.bz_stream*, %struct.bz_stream** %strm58, align 8
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i15, i32 0, i32 1
  %i16 = load i32, i32* %avail_in, align 8
  %cmp59 = icmp eq i32 %i16, 0
  br i1 %cmp59, label %if.then61, label %if.end62

if.then61:                                        ; preds = %if.else57
  br label %while.end

if.end62:                                         ; preds = %if.else57
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then55
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then47
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end30
  %progress_in.1 = phi i8 [ %conv39, %if.end64 ], [ %progress_in.0, %if.end30 ]
  br label %while.body

while.end:                                        ; preds = %if.then61, %if.then28, %if.then14, %if.then6
  %progress_in.2 = phi i8 [ %progress_in.0, %if.then6 ], [ %progress_in.0, %if.then14 ], [ %progress_in.0, %if.then28 ], [ %conv39, %if.then61 ]
  %progress_out.2 = phi i8 [ %conv3, %if.then6 ], [ %conv3, %if.then14 ], [ %conv3, %if.then28 ], [ %progress_out.1, %if.then61 ]
  %conv66 = zext i8 %progress_in.2 to i32
  %tobool67 = icmp ne i32 %conv66, 0
  br i1 %tobool67, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.end
  %conv68 = zext i8 %progress_out.2 to i32
  %tobool69 = icmp ne i32 %conv68, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.end
  %i17 = phi i1 [ true, %while.end ], [ %tobool69, %lor.rhs ]
  %lor.ext = zext i1 %i17 to i32
  %conv70 = trunc i32 %lor.ext to i8
  ret i8 %conv70
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @isempty_RL(%struct.EState* %s) #0 {
entry:
  %state_in_ch = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i = load i32, i32* %state_in_ch, align 4
  %cmp = icmp ult i32 %i, 256
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %state_in_len = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  %i1 = load i32, i32* %state_in_len, align 8
  %cmp1 = icmp sgt i32 %i1, 0
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  br label %return

if.else:                                          ; preds = %land.lhs.true, %entry
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i8 [ 0, %if.then ], [ 1, %if.else ]
  ret i8 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @copy_output_until_stop(%struct.EState* %s) #0 {
entry:
  br label %while.body

while.body:                                       ; preds = %if.end19, %entry
  %progress_out.0 = phi i8 [ 0, %entry ], [ 1, %if.end19 ]
  %strm = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i, i32 0, i32 5
  %i1 = load i32, i32* %avail_out, align 8
  %cmp = icmp eq i32 %i1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  br label %while.end

if.end:                                           ; preds = %while.body
  %state_out_pos = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 20
  %i2 = load i32, i32* %state_out_pos, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i3 = load i32, i32* %numZ, align 4
  %cmp1 = icmp sge i32 %i2, %i3
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  br label %while.end

if.end3:                                          ; preds = %if.end
  %zbits = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 11
  %i4 = load i8*, i8** %zbits, align 8
  %state_out_pos4 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 20
  %i5 = load i32, i32* %state_out_pos4, align 8
  %idxprom = sext i32 %i5 to i64
  %arrayidx = getelementptr inbounds i8, i8* %i4, i64 %idxprom
  %i6 = load i8, i8* %arrayidx, align 1
  %strm5 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i7 = load %struct.bz_stream*, %struct.bz_stream** %strm5, align 8
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i7, i32 0, i32 4
  %i8 = load i8*, i8** %next_out, align 8
  store i8 %i6, i8* %i8, align 1
  %state_out_pos6 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 20
  %i9 = load i32, i32* %state_out_pos6, align 8
  %inc = add nsw i32 %i9, 1
  store i32 %inc, i32* %state_out_pos6, align 8
  %strm7 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i10 = load %struct.bz_stream*, %struct.bz_stream** %strm7, align 8
  %avail_out8 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i10, i32 0, i32 5
  %i11 = load i32, i32* %avail_out8, align 8
  %dec = add i32 %i11, -1
  store i32 %dec, i32* %avail_out8, align 8
  %strm9 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i12 = load %struct.bz_stream*, %struct.bz_stream** %strm9, align 8
  %next_out10 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i12, i32 0, i32 4
  %i13 = load i8*, i8** %next_out10, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %i13, i32 1
  store i8* %incdec.ptr, i8** %next_out10, align 8
  %strm11 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i14 = load %struct.bz_stream*, %struct.bz_stream** %strm11, align 8
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i14, i32 0, i32 6
  %i15 = load i32, i32* %total_out_lo32, align 4
  %inc12 = add i32 %i15, 1
  store i32 %inc12, i32* %total_out_lo32, align 4
  %strm13 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i16 = load %struct.bz_stream*, %struct.bz_stream** %strm13, align 8
  %total_out_lo3214 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i16, i32 0, i32 6
  %i17 = load i32, i32* %total_out_lo3214, align 4
  %cmp15 = icmp eq i32 %i17, 0
  br i1 %cmp15, label %if.then16, label %if.end19

if.then16:                                        ; preds = %if.end3
  %strm17 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i18 = load %struct.bz_stream*, %struct.bz_stream** %strm17, align 8
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i18, i32 0, i32 7
  %i19 = load i32, i32* %total_out_hi32, align 8
  %inc18 = add i32 %i19, 1
  store i32 %inc18, i32* %total_out_hi32, align 8
  br label %if.end19

if.end19:                                         ; preds = %if.then16, %if.end3
  br label %while.body

while.end:                                        ; preds = %if.then2, %if.then
  ret i8 %progress_out.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @copy_input_until_stop(%struct.EState* %s) #0 {
entry:
  %mode = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 1
  %i = load i32, i32* %mode, align 8
  %cmp = icmp eq i32 %i, 2
  br i1 %cmp, label %if.then, label %if.else59

if.then:                                          ; preds = %entry
  br label %while.body

while.body:                                       ; preds = %if.end58, %if.then
  %progress_in.0 = phi i8 [ 0, %if.then ], [ 1, %if.end58 ]
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i1 = load i32, i32* %nblock, align 4
  %nblockMAX = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 18
  %i2 = load i32, i32* %nblockMAX, align 8
  %cmp1 = icmp sge i32 %i1, %i2
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %while.body
  br label %while.end

if.end:                                           ; preds = %while.body
  %strm = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i3 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i3, i32 0, i32 1
  %i4 = load i32, i32* %avail_in, align 8
  %cmp3 = icmp eq i32 %i4, 0
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %while.end

if.end5:                                          ; preds = %if.end
  %strm6 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i5 = load %struct.bz_stream*, %struct.bz_stream** %strm6, align 8
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i5, i32 0, i32 0
  %i6 = load i8*, i8** %next_in, align 8
  %i7 = load i8, i8* %i6, align 1
  %conv = zext i8 %i7 to i32
  %state_in_ch = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i8 = load i32, i32* %state_in_ch, align 4
  %cmp7 = icmp ne i32 %conv, %i8
  br i1 %cmp7, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end5
  %state_in_len = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  %i9 = load i32, i32* %state_in_len, align 8
  %cmp9 = icmp eq i32 %i9, 1
  br i1 %cmp9, label %if.then11, label %if.else

if.then11:                                        ; preds = %land.lhs.true
  %state_in_ch12 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i10 = load i32, i32* %state_in_ch12, align 4
  %conv13 = trunc i32 %i10 to i8
  %blockCRC = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  %i11 = load i32, i32* %blockCRC, align 8
  %shl = shl i32 %i11, 8
  %blockCRC14 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  %i12 = load i32, i32* %blockCRC14, align 8
  %shr = lshr i32 %i12, 24
  %conv15 = zext i8 %conv13 to i32
  %xor = xor i32 %shr, %conv15
  %idxprom = zext i32 %xor to i64
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom
  %i13 = load i32, i32* %arrayidx, align 4
  %xor16 = xor i32 %shl, %i13
  %blockCRC17 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  store i32 %xor16, i32* %blockCRC17, align 8
  %inUse = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 22
  %state_in_ch18 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i14 = load i32, i32* %state_in_ch18, align 4
  %idxprom19 = zext i32 %i14 to i64
  %arrayidx20 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom19
  store i8 1, i8* %arrayidx20, align 1
  %block = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i15 = load i8*, i8** %block, align 8
  %nblock21 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i16 = load i32, i32* %nblock21, align 4
  %idxprom22 = sext i32 %i16 to i64
  %arrayidx23 = getelementptr inbounds i8, i8* %i15, i64 %idxprom22
  store i8 %conv13, i8* %arrayidx23, align 1
  %nblock24 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i17 = load i32, i32* %nblock24, align 4
  %inc = add nsw i32 %i17, 1
  store i32 %inc, i32* %nblock24, align 4
  %state_in_ch25 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  store i32 %conv, i32* %state_in_ch25, align 4
  br label %if.end44

if.else:                                          ; preds = %land.lhs.true, %if.end5
  %state_in_ch26 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i18 = load i32, i32* %state_in_ch26, align 4
  %cmp27 = icmp ne i32 %conv, %i18
  br i1 %cmp27, label %if.then32, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %state_in_len29 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  %i19 = load i32, i32* %state_in_len29, align 8
  %cmp30 = icmp eq i32 %i19, 255
  br i1 %cmp30, label %if.then32, label %if.else40

if.then32:                                        ; preds = %lor.lhs.false, %if.else
  %state_in_ch33 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i20 = load i32, i32* %state_in_ch33, align 4
  %cmp34 = icmp ult i32 %i20, 256
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.then32
  call void @add_pair_to_block(%struct.EState* %s)
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %if.then32
  %state_in_ch38 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  store i32 %conv, i32* %state_in_ch38, align 4
  %state_in_len39 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  store i32 1, i32* %state_in_len39, align 8
  br label %if.end43

if.else40:                                        ; preds = %lor.lhs.false
  %state_in_len41 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  %i21 = load i32, i32* %state_in_len41, align 8
  %inc42 = add nsw i32 %i21, 1
  store i32 %inc42, i32* %state_in_len41, align 8
  br label %if.end43

if.end43:                                         ; preds = %if.else40, %if.end37
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then11
  %strm45 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i22 = load %struct.bz_stream*, %struct.bz_stream** %strm45, align 8
  %next_in46 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i22, i32 0, i32 0
  %i23 = load i8*, i8** %next_in46, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %i23, i32 1
  store i8* %incdec.ptr, i8** %next_in46, align 8
  %strm47 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i24 = load %struct.bz_stream*, %struct.bz_stream** %strm47, align 8
  %avail_in48 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i24, i32 0, i32 1
  %i25 = load i32, i32* %avail_in48, align 8
  %dec = add i32 %i25, -1
  store i32 %dec, i32* %avail_in48, align 8
  %strm49 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i26 = load %struct.bz_stream*, %struct.bz_stream** %strm49, align 8
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i26, i32 0, i32 2
  %i27 = load i32, i32* %total_in_lo32, align 4
  %inc50 = add i32 %i27, 1
  store i32 %inc50, i32* %total_in_lo32, align 4
  %strm51 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i28 = load %struct.bz_stream*, %struct.bz_stream** %strm51, align 8
  %total_in_lo3252 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i28, i32 0, i32 2
  %i29 = load i32, i32* %total_in_lo3252, align 4
  %cmp53 = icmp eq i32 %i29, 0
  br i1 %cmp53, label %if.then55, label %if.end58

if.then55:                                        ; preds = %if.end44
  %strm56 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i30 = load %struct.bz_stream*, %struct.bz_stream** %strm56, align 8
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i30, i32 0, i32 3
  %i31 = load i32, i32* %total_in_hi32, align 8
  %inc57 = add i32 %i31, 1
  store i32 %inc57, i32* %total_in_hi32, align 8
  br label %if.end58

if.end58:                                         ; preds = %if.then55, %if.end44
  br label %while.body

while.end:                                        ; preds = %if.then4, %if.then2
  br label %if.end155

if.else59:                                        ; preds = %entry
  br label %while.body60

while.body60:                                     ; preds = %if.end151, %if.else59
  %progress_in.1 = phi i8 [ 0, %if.else59 ], [ 1, %if.end151 ]
  %nblock61 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i32 = load i32, i32* %nblock61, align 4
  %nblockMAX62 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 18
  %i33 = load i32, i32* %nblockMAX62, align 8
  %cmp63 = icmp sge i32 %i32, %i33
  br i1 %cmp63, label %if.then65, label %if.end66

if.then65:                                        ; preds = %while.body60
  br label %while.end154

if.end66:                                         ; preds = %while.body60
  %strm67 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i34 = load %struct.bz_stream*, %struct.bz_stream** %strm67, align 8
  %avail_in68 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i34, i32 0, i32 1
  %i35 = load i32, i32* %avail_in68, align 8
  %cmp69 = icmp eq i32 %i35, 0
  br i1 %cmp69, label %if.then71, label %if.end72

if.then71:                                        ; preds = %if.end66
  br label %while.end154

if.end72:                                         ; preds = %if.end66
  %avail_in_expect = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 3
  %i36 = load i32, i32* %avail_in_expect, align 8
  %cmp73 = icmp eq i32 %i36, 0
  br i1 %cmp73, label %if.then75, label %if.end76

if.then75:                                        ; preds = %if.end72
  br label %while.end154

if.end76:                                         ; preds = %if.end72
  %strm78 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i37 = load %struct.bz_stream*, %struct.bz_stream** %strm78, align 8
  %next_in79 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i37, i32 0, i32 0
  %i38 = load i8*, i8** %next_in79, align 8
  %i39 = load i8, i8* %i38, align 1
  %conv80 = zext i8 %i39 to i32
  %state_in_ch81 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i40 = load i32, i32* %state_in_ch81, align 4
  %cmp82 = icmp ne i32 %conv80, %i40
  br i1 %cmp82, label %land.lhs.true84, label %if.else113

land.lhs.true84:                                  ; preds = %if.end76
  %state_in_len85 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  %i41 = load i32, i32* %state_in_len85, align 8
  %cmp86 = icmp eq i32 %i41, 1
  br i1 %cmp86, label %if.then88, label %if.else113

if.then88:                                        ; preds = %land.lhs.true84
  %state_in_ch90 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i42 = load i32, i32* %state_in_ch90, align 4
  %conv91 = trunc i32 %i42 to i8
  %blockCRC92 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  %i43 = load i32, i32* %blockCRC92, align 8
  %shl93 = shl i32 %i43, 8
  %blockCRC94 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  %i44 = load i32, i32* %blockCRC94, align 8
  %shr95 = lshr i32 %i44, 24
  %conv96 = zext i8 %conv91 to i32
  %xor97 = xor i32 %shr95, %conv96
  %idxprom98 = zext i32 %xor97 to i64
  %arrayidx99 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom98
  %i45 = load i32, i32* %arrayidx99, align 4
  %xor100 = xor i32 %shl93, %i45
  %blockCRC101 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  store i32 %xor100, i32* %blockCRC101, align 8
  %inUse102 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 22
  %state_in_ch103 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i46 = load i32, i32* %state_in_ch103, align 4
  %idxprom104 = zext i32 %i46 to i64
  %arrayidx105 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse102, i64 0, i64 %idxprom104
  store i8 1, i8* %arrayidx105, align 1
  %block106 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i47 = load i8*, i8** %block106, align 8
  %nblock107 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i48 = load i32, i32* %nblock107, align 4
  %idxprom108 = sext i32 %i48 to i64
  %arrayidx109 = getelementptr inbounds i8, i8* %i47, i64 %idxprom108
  store i8 %conv91, i8* %arrayidx109, align 1
  %nblock110 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i49 = load i32, i32* %nblock110, align 4
  %inc111 = add nsw i32 %i49, 1
  store i32 %inc111, i32* %nblock110, align 4
  %state_in_ch112 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  store i32 %conv80, i32* %state_in_ch112, align 4
  br label %if.end133

if.else113:                                       ; preds = %land.lhs.true84, %if.end76
  %state_in_ch114 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i50 = load i32, i32* %state_in_ch114, align 4
  %cmp115 = icmp ne i32 %conv80, %i50
  br i1 %cmp115, label %if.then121, label %lor.lhs.false117

lor.lhs.false117:                                 ; preds = %if.else113
  %state_in_len118 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  %i51 = load i32, i32* %state_in_len118, align 8
  %cmp119 = icmp eq i32 %i51, 255
  br i1 %cmp119, label %if.then121, label %if.else129

if.then121:                                       ; preds = %lor.lhs.false117, %if.else113
  %state_in_ch122 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i52 = load i32, i32* %state_in_ch122, align 4
  %cmp123 = icmp ult i32 %i52, 256
  br i1 %cmp123, label %if.then125, label %if.end126

if.then125:                                       ; preds = %if.then121
  call void @add_pair_to_block(%struct.EState* %s)
  br label %if.end126

if.end126:                                        ; preds = %if.then125, %if.then121
  %state_in_ch127 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  store i32 %conv80, i32* %state_in_ch127, align 4
  %state_in_len128 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  store i32 1, i32* %state_in_len128, align 8
  br label %if.end132

if.else129:                                       ; preds = %lor.lhs.false117
  %state_in_len130 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  %i53 = load i32, i32* %state_in_len130, align 8
  %inc131 = add nsw i32 %i53, 1
  store i32 %inc131, i32* %state_in_len130, align 8
  br label %if.end132

if.end132:                                        ; preds = %if.else129, %if.end126
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then88
  %strm134 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i54 = load %struct.bz_stream*, %struct.bz_stream** %strm134, align 8
  %next_in135 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i54, i32 0, i32 0
  %i55 = load i8*, i8** %next_in135, align 8
  %incdec.ptr136 = getelementptr inbounds i8, i8* %i55, i32 1
  store i8* %incdec.ptr136, i8** %next_in135, align 8
  %strm137 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i56 = load %struct.bz_stream*, %struct.bz_stream** %strm137, align 8
  %avail_in138 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i56, i32 0, i32 1
  %i57 = load i32, i32* %avail_in138, align 8
  %dec139 = add i32 %i57, -1
  store i32 %dec139, i32* %avail_in138, align 8
  %strm140 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i58 = load %struct.bz_stream*, %struct.bz_stream** %strm140, align 8
  %total_in_lo32141 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i58, i32 0, i32 2
  %i59 = load i32, i32* %total_in_lo32141, align 4
  %inc142 = add i32 %i59, 1
  store i32 %inc142, i32* %total_in_lo32141, align 4
  %strm143 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i60 = load %struct.bz_stream*, %struct.bz_stream** %strm143, align 8
  %total_in_lo32144 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i60, i32 0, i32 2
  %i61 = load i32, i32* %total_in_lo32144, align 4
  %cmp145 = icmp eq i32 %i61, 0
  br i1 %cmp145, label %if.then147, label %if.end151

if.then147:                                       ; preds = %if.end133
  %strm148 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 0
  %i62 = load %struct.bz_stream*, %struct.bz_stream** %strm148, align 8
  %total_in_hi32149 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i62, i32 0, i32 3
  %i63 = load i32, i32* %total_in_hi32149, align 8
  %inc150 = add i32 %i63, 1
  store i32 %inc150, i32* %total_in_hi32149, align 8
  br label %if.end151

if.end151:                                        ; preds = %if.then147, %if.end133
  %avail_in_expect152 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 3
  %i64 = load i32, i32* %avail_in_expect152, align 8
  %dec153 = add i32 %i64, -1
  store i32 %dec153, i32* %avail_in_expect152, align 8
  br label %while.body60

while.end154:                                     ; preds = %if.then75, %if.then71, %if.then65
  br label %if.end155

if.end155:                                        ; preds = %while.end154, %while.end
  %progress_in.2 = phi i8 [ %progress_in.0, %while.end ], [ %progress_in.1, %while.end154 ]
  ret i8 %progress_in.2
}

; Function Attrs: noinline nounwind uwtable
define internal void @flush_RL(%struct.EState* %s) #0 {
entry:
  %state_in_ch = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i = load i32, i32* %state_in_ch, align 4
  %cmp = icmp ult i32 %i, 256
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @add_pair_to_block(%struct.EState* %s)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @init_RL(%struct.EState* %s)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_pair_to_block(%struct.EState* %s) #0 {
entry:
  %state_in_ch = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i = load i32, i32* %state_in_ch, align 4
  %conv = trunc i32 %i to i8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %state_in_len = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  %i1 = load i32, i32* %state_in_len, align 8
  %cmp = icmp slt i32 %i.0, %i1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %blockCRC = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  %i2 = load i32, i32* %blockCRC, align 8
  %shl = shl i32 %i2, 8
  %blockCRC2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  %i3 = load i32, i32* %blockCRC2, align 8
  %shr = lshr i32 %i3, 24
  %conv3 = zext i8 %conv to i32
  %xor = xor i32 %shr, %conv3
  %idxprom = zext i32 %xor to i64
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom
  %i4 = load i32, i32* %arrayidx, align 4
  %xor4 = xor i32 %shl, %i4
  %blockCRC5 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  store i32 %xor4, i32* %blockCRC5, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %inUse = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 22
  %state_in_ch6 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 13
  %i5 = load i32, i32* %state_in_ch6, align 4
  %idxprom7 = zext i32 %i5 to i64
  %arrayidx8 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom7
  store i8 1, i8* %arrayidx8, align 1
  %state_in_len9 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  %i6 = load i32, i32* %state_in_len9, align 8
  switch i32 %i6, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb14
    i32 3, label %sw.bb27
  ]

sw.bb:                                            ; preds = %for.end
  %block = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i7 = load i8*, i8** %block, align 8
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i8 = load i32, i32* %nblock, align 4
  %idxprom10 = sext i32 %i8 to i64
  %arrayidx11 = getelementptr inbounds i8, i8* %i7, i64 %idxprom10
  store i8 %conv, i8* %arrayidx11, align 1
  %nblock12 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i9 = load i32, i32* %nblock12, align 4
  %inc13 = add nsw i32 %i9, 1
  store i32 %inc13, i32* %nblock12, align 4
  br label %sw.epilog

sw.bb14:                                          ; preds = %for.end
  %block15 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i10 = load i8*, i8** %block15, align 8
  %nblock16 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i11 = load i32, i32* %nblock16, align 4
  %idxprom17 = sext i32 %i11 to i64
  %arrayidx18 = getelementptr inbounds i8, i8* %i10, i64 %idxprom17
  store i8 %conv, i8* %arrayidx18, align 1
  %nblock19 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i12 = load i32, i32* %nblock19, align 4
  %inc20 = add nsw i32 %i12, 1
  store i32 %inc20, i32* %nblock19, align 4
  %block21 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i13 = load i8*, i8** %block21, align 8
  %nblock22 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i14 = load i32, i32* %nblock22, align 4
  %idxprom23 = sext i32 %i14 to i64
  %arrayidx24 = getelementptr inbounds i8, i8* %i13, i64 %idxprom23
  store i8 %conv, i8* %arrayidx24, align 1
  %nblock25 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i15 = load i32, i32* %nblock25, align 4
  %inc26 = add nsw i32 %i15, 1
  store i32 %inc26, i32* %nblock25, align 4
  br label %sw.epilog

sw.bb27:                                          ; preds = %for.end
  %block28 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i16 = load i8*, i8** %block28, align 8
  %nblock29 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i17 = load i32, i32* %nblock29, align 4
  %idxprom30 = sext i32 %i17 to i64
  %arrayidx31 = getelementptr inbounds i8, i8* %i16, i64 %idxprom30
  store i8 %conv, i8* %arrayidx31, align 1
  %nblock32 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i18 = load i32, i32* %nblock32, align 4
  %inc33 = add nsw i32 %i18, 1
  store i32 %inc33, i32* %nblock32, align 4
  %block34 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i19 = load i8*, i8** %block34, align 8
  %nblock35 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i20 = load i32, i32* %nblock35, align 4
  %idxprom36 = sext i32 %i20 to i64
  %arrayidx37 = getelementptr inbounds i8, i8* %i19, i64 %idxprom36
  store i8 %conv, i8* %arrayidx37, align 1
  %nblock38 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i21 = load i32, i32* %nblock38, align 4
  %inc39 = add nsw i32 %i21, 1
  store i32 %inc39, i32* %nblock38, align 4
  %block40 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i22 = load i8*, i8** %block40, align 8
  %nblock41 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i23 = load i32, i32* %nblock41, align 4
  %idxprom42 = sext i32 %i23 to i64
  %arrayidx43 = getelementptr inbounds i8, i8* %i22, i64 %idxprom42
  store i8 %conv, i8* %arrayidx43, align 1
  %nblock44 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i24 = load i32, i32* %nblock44, align 4
  %inc45 = add nsw i32 %i24, 1
  store i32 %inc45, i32* %nblock44, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %for.end
  %inUse46 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 22
  %state_in_len47 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  %i25 = load i32, i32* %state_in_len47, align 8
  %sub = sub nsw i32 %i25, 4
  %idxprom48 = sext i32 %sub to i64
  %arrayidx49 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse46, i64 0, i64 %idxprom48
  store i8 1, i8* %arrayidx49, align 1
  %block50 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i26 = load i8*, i8** %block50, align 8
  %nblock51 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i27 = load i32, i32* %nblock51, align 4
  %idxprom52 = sext i32 %i27 to i64
  %arrayidx53 = getelementptr inbounds i8, i8* %i26, i64 %idxprom52
  store i8 %conv, i8* %arrayidx53, align 1
  %nblock54 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i28 = load i32, i32* %nblock54, align 4
  %inc55 = add nsw i32 %i28, 1
  store i32 %inc55, i32* %nblock54, align 4
  %block56 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i29 = load i8*, i8** %block56, align 8
  %nblock57 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i30 = load i32, i32* %nblock57, align 4
  %idxprom58 = sext i32 %i30 to i64
  %arrayidx59 = getelementptr inbounds i8, i8* %i29, i64 %idxprom58
  store i8 %conv, i8* %arrayidx59, align 1
  %nblock60 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i31 = load i32, i32* %nblock60, align 4
  %inc61 = add nsw i32 %i31, 1
  store i32 %inc61, i32* %nblock60, align 4
  %block62 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i32 = load i8*, i8** %block62, align 8
  %nblock63 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i33 = load i32, i32* %nblock63, align 4
  %idxprom64 = sext i32 %i33 to i64
  %arrayidx65 = getelementptr inbounds i8, i8* %i32, i64 %idxprom64
  store i8 %conv, i8* %arrayidx65, align 1
  %nblock66 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i34 = load i32, i32* %nblock66, align 4
  %inc67 = add nsw i32 %i34, 1
  store i32 %inc67, i32* %nblock66, align 4
  %block68 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i35 = load i8*, i8** %block68, align 8
  %nblock69 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i36 = load i32, i32* %nblock69, align 4
  %idxprom70 = sext i32 %i36 to i64
  %arrayidx71 = getelementptr inbounds i8, i8* %i35, i64 %idxprom70
  store i8 %conv, i8* %arrayidx71, align 1
  %nblock72 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i37 = load i32, i32* %nblock72, align 4
  %inc73 = add nsw i32 %i37, 1
  store i32 %inc73, i32* %nblock72, align 4
  %state_in_len74 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 14
  %i38 = load i32, i32* %state_in_len74, align 8
  %sub75 = sub nsw i32 %i38, 4
  %conv76 = trunc i32 %sub75 to i8
  %block77 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i39 = load i8*, i8** %block77, align 8
  %nblock78 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i40 = load i32, i32* %nblock78, align 4
  %idxprom79 = sext i32 %i40 to i64
  %arrayidx80 = getelementptr inbounds i8, i8* %i39, i64 %idxprom79
  store i8 %conv76, i8* %arrayidx80, align 1
  %nblock81 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i41 = load i32, i32* %nblock81, align 4
  %inc82 = add nsw i32 %i41, 1
  store i32 %inc82, i32* %nblock81, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb27, %sw.bb14, %sw.bb
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm) #0 {
entry:
  %cmp = icmp eq %struct.bz_stream* %strm, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 8
  %i = load i8*, i8** %state, align 8
  %i1 = bitcast i8* %i to %struct.EState*
  %cmp1 = icmp eq %struct.EState* %i1, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  br label %return

if.end3:                                          ; preds = %if.end
  %strm4 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 0
  %i2 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8
  %cmp5 = icmp ne %struct.bz_stream* %i2, %strm
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  br label %return

if.end7:                                          ; preds = %if.end3
  %arr1 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 4
  %i3 = load i32*, i32** %arr1, align 8
  %cmp8 = icmp ne i32* %i3, null
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end7
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i4 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i5 = load i8*, i8** %opaque, align 8
  %arr110 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 4
  %i6 = load i32*, i32** %arr110, align 8
  %i7 = bitcast i32* %i6 to i8*
  call void %i4(i8* %i5, i8* %i7)
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end7
  %arr2 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 5
  %i8 = load i32*, i32** %arr2, align 8
  %cmp12 = icmp ne i32* %i8, null
  br i1 %cmp12, label %if.then13, label %if.end17

if.then13:                                        ; preds = %if.end11
  %bzfree14 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i9 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree14, align 8
  %opaque15 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i10 = load i8*, i8** %opaque15, align 8
  %arr216 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 5
  %i11 = load i32*, i32** %arr216, align 8
  %i12 = bitcast i32* %i11 to i8*
  call void %i9(i8* %i10, i8* %i12)
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.end11
  %ftab = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 6
  %i13 = load i32*, i32** %ftab, align 8
  %cmp18 = icmp ne i32* %i13, null
  br i1 %cmp18, label %if.then19, label %if.end23

if.then19:                                        ; preds = %if.end17
  %bzfree20 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i14 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree20, align 8
  %opaque21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i15 = load i8*, i8** %opaque21, align 8
  %ftab22 = getelementptr inbounds %struct.EState, %struct.EState* %i1, i32 0, i32 6
  %i16 = load i32*, i32** %ftab22, align 8
  %i17 = bitcast i32* %i16 to i8*
  call void %i14(i8* %i15, i8* %i17)
  br label %if.end23

if.end23:                                         ; preds = %if.then19, %if.end17
  %bzfree24 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i18 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree24, align 8
  %opaque25 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i19 = load i8*, i8** %opaque25, align 8
  %state26 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 8
  %i20 = load i8*, i8** %state26, align 8
  call void %i18(i8* %i19, i8* %i20)
  %state27 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 8
  store i8* null, i8** %state27, align 8
  br label %return

return:                                           ; preds = %if.end23, %if.then6, %if.then2, %if.then
  %retval.0 = phi i32 [ -2, %if.then ], [ -2, %if.then2 ], [ -2, %if.then6 ], [ 0, %if.end23 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzDecompressInit(%struct.bz_stream* %strm, i32 %verbosity, i32 %small) #0 {
entry:
  %call = call i32 @bz_config_ok()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %cmp = icmp eq %struct.bz_stream* %strm, null
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  br label %return

if.end2:                                          ; preds = %if.end
  %cmp3 = icmp ne i32 %small, 0
  br i1 %cmp3, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %if.end2
  %cmp4 = icmp ne i32 %small, 1
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %land.lhs.true
  br label %return

if.end6:                                          ; preds = %land.lhs.true, %if.end2
  %cmp7 = icmp slt i32 %verbosity, 0
  br i1 %cmp7, label %if.then9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %cmp8 = icmp sgt i32 %verbosity, 4
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %lor.lhs.false, %if.end6
  br label %return

if.end10:                                         ; preds = %lor.lhs.false
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  %i = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8
  %cmp11 = icmp eq i8* (i8*, i32, i32)* %i, null
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end10
  %bzalloc13 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %bzalloc13, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end10
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i1 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8
  %cmp15 = icmp eq void (i8*, i8*)* %i1, null
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end14
  %bzfree17 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %bzfree17, align 8
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end14
  %bzalloc19 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  %i2 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc19, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i3 = load i8*, i8** %opaque, align 8
  %call20 = call i8* %i2(i8* %i3, i32 64144, i32 1)
  %i4 = bitcast i8* %call20 to %struct.DState*
  %cmp21 = icmp eq %struct.DState* %i4, null
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end18
  br label %return

if.end23:                                         ; preds = %if.end18
  %strm24 = getelementptr inbounds %struct.DState, %struct.DState* %i4, i32 0, i32 0
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm24, align 8
  %i5 = bitcast %struct.DState* %i4 to i8*
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 8
  store i8* %i5, i8** %state, align 8
  %state25 = getelementptr inbounds %struct.DState, %struct.DState* %i4, i32 0, i32 1
  store i32 10, i32* %state25, align 8
  %bsLive = getelementptr inbounds %struct.DState, %struct.DState* %i4, i32 0, i32 8
  store i32 0, i32* %bsLive, align 4
  %bsBuff = getelementptr inbounds %struct.DState, %struct.DState* %i4, i32 0, i32 7
  store i32 0, i32* %bsBuff, align 8
  %calculatedCombinedCRC = getelementptr inbounds %struct.DState, %struct.DState* %i4, i32 0, i32 26
  store i32 0, i32* %calculatedCombinedCRC, align 4
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 2
  store i32 0, i32* %total_in_lo32, align 4
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 3
  store i32 0, i32* %total_in_hi32, align 8
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 6
  store i32 0, i32* %total_out_lo32, align 4
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 7
  store i32 0, i32* %total_out_hi32, align 8
  %conv = trunc i32 %small to i8
  %smallDecompress = getelementptr inbounds %struct.DState, %struct.DState* %i4, i32 0, i32 10
  store i8 %conv, i8* %smallDecompress, align 4
  %ll4 = getelementptr inbounds %struct.DState, %struct.DState* %i4, i32 0, i32 22
  store i8* null, i8** %ll4, align 8
  %ll16 = getelementptr inbounds %struct.DState, %struct.DState* %i4, i32 0, i32 21
  store i16* null, i16** %ll16, align 8
  %tt = getelementptr inbounds %struct.DState, %struct.DState* %i4, i32 0, i32 20
  store i32* null, i32** %tt, align 8
  %currBlockNo = getelementptr inbounds %struct.DState, %struct.DState* %i4, i32 0, i32 11
  store i32 0, i32* %currBlockNo, align 8
  %verbosity26 = getelementptr inbounds %struct.DState, %struct.DState* %i4, i32 0, i32 12
  store i32 %verbosity, i32* %verbosity26, align 4
  br label %return

return:                                           ; preds = %if.end23, %if.then22, %if.then9, %if.then5, %if.then1, %if.then
  %retval.0 = phi i32 [ -2, %if.then1 ], [ -2, %if.then5 ], [ -2, %if.then9 ], [ -3, %if.then22 ], [ 0, %if.end23 ], [ -9, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_indexIntoF(i32 %indx, i32* %cftab) #0 {
entry:
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %nb.0 = phi i32 [ 0, %entry ], [ %nb.1, %do.cond ]
  %na.0 = phi i32 [ 256, %entry ], [ %na.1, %do.cond ]
  %add = add nsw i32 %nb.0, %na.0
  %shr = ashr i32 %add, 1
  %idxprom = sext i32 %shr to i64
  %arrayidx = getelementptr inbounds i32, i32* %cftab, i64 %idxprom
  %i = load i32, i32* %arrayidx, align 4
  %cmp = icmp sge i32 %indx, %i
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %do.body
  br label %if.end

if.else:                                          ; preds = %do.body
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %nb.1 = phi i32 [ %shr, %if.then ], [ %nb.0, %if.else ]
  %na.1 = phi i32 [ %na.0, %if.then ], [ %shr, %if.else ]
  br label %do.cond

do.cond:                                          ; preds = %if.end
  %sub = sub nsw i32 %na.1, %nb.1
  %cmp1 = icmp ne i32 %sub, 1
  br i1 %cmp1, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  ret i32 %nb.1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzDecompress(%struct.bz_stream* %strm) #0 {
entry:
  %cmp = icmp eq %struct.bz_stream* %strm, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 8
  %i = load i8*, i8** %state, align 8
  %i1 = bitcast i8* %i to %struct.DState*
  %cmp1 = icmp eq %struct.DState* %i1, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  br label %return

if.end3:                                          ; preds = %if.end
  %strm4 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 0
  %i2 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8
  %cmp5 = icmp ne %struct.bz_stream* %i2, %strm
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  br label %return

if.end7:                                          ; preds = %if.end3
  br label %while.body

while.body:                                       ; preds = %if.end70, %if.end7
  %state8 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 1
  %i3 = load i32, i32* %state8, align 8
  %cmp9 = icmp eq i32 %i3, 1
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %while.body
  br label %return

if.end11:                                         ; preds = %while.body
  %state12 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 1
  %i4 = load i32, i32* %state12, align 8
  %cmp13 = icmp eq i32 %i4, 2
  br i1 %cmp13, label %if.then14, label %if.end47

if.then14:                                        ; preds = %if.end11
  %smallDecompress = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 10
  %i5 = load i8, i8* %smallDecompress, align 4
  %tobool = icmp ne i8 %i5, 0
  br i1 %tobool, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.then14
  %call = call zeroext i8 @unRLE_obuf_to_output_SMALL(%struct.DState* %i1)
  br label %if.end17

if.else:                                          ; preds = %if.then14
  %call16 = call zeroext i8 @unRLE_obuf_to_output_FAST(%struct.DState* %i1)
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then15
  %corrupt.0 = phi i8 [ %call, %if.then15 ], [ %call16, %if.else ]
  %tobool18 = icmp ne i8 %corrupt.0, 0
  br i1 %tobool18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end17
  br label %return

if.end20:                                         ; preds = %if.end17
  %nblock_used = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 17
  %i6 = load i32, i32* %nblock_used, align 4
  %save_nblock = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 51
  %i7 = load i32, i32* %save_nblock, align 8
  %add = add nsw i32 %i7, 1
  %cmp21 = icmp eq i32 %i6, %add
  br i1 %cmp21, label %land.lhs.true, label %if.else45

land.lhs.true:                                    ; preds = %if.end20
  %state_out_len = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 3
  %i8 = load i32, i32* %state_out_len, align 8
  %cmp22 = icmp eq i32 %i8, 0
  br i1 %cmp22, label %if.then23, label %if.else45

if.then23:                                        ; preds = %land.lhs.true
  %calculatedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 25
  %i9 = load i32, i32* %calculatedBlockCRC, align 8
  %neg = xor i32 %i9, -1
  %calculatedBlockCRC24 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 25
  store i32 %neg, i32* %calculatedBlockCRC24, align 8
  %verbosity = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 12
  %i10 = load i32, i32* %verbosity, align 4
  %cmp25 = icmp sge i32 %i10, 3
  br i1 %cmp25, label %if.then26, label %if.end29

if.then26:                                        ; preds = %if.then23
  %i11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %storedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 23
  %i12 = load i32, i32* %storedBlockCRC, align 8
  %calculatedBlockCRC27 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 25
  %i13 = load i32, i32* %calculatedBlockCRC27, align 8
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.78, i64 0, i64 0), i32 %i12, i32 %i13)
  br label %if.end29

if.end29:                                         ; preds = %if.then26, %if.then23
  %verbosity30 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 12
  %i14 = load i32, i32* %verbosity30, align 4
  %cmp31 = icmp sge i32 %i14, 2
  br i1 %cmp31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end29
  %i15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.79, i64 0, i64 0))
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end29
  %calculatedBlockCRC35 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 25
  %i16 = load i32, i32* %calculatedBlockCRC35, align 8
  %storedBlockCRC36 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 23
  %i17 = load i32, i32* %storedBlockCRC36, align 8
  %cmp37 = icmp ne i32 %i16, %i17
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end34
  br label %return

if.end39:                                         ; preds = %if.end34
  %calculatedCombinedCRC = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 26
  %i18 = load i32, i32* %calculatedCombinedCRC, align 4
  %shl = shl i32 %i18, 1
  %calculatedCombinedCRC40 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 26
  %i19 = load i32, i32* %calculatedCombinedCRC40, align 4
  %shr = lshr i32 %i19, 31
  %or = or i32 %shl, %shr
  %calculatedCombinedCRC41 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 26
  store i32 %or, i32* %calculatedCombinedCRC41, align 4
  %calculatedBlockCRC42 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 25
  %i20 = load i32, i32* %calculatedBlockCRC42, align 8
  %calculatedCombinedCRC43 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 26
  %i21 = load i32, i32* %calculatedCombinedCRC43, align 4
  %xor = xor i32 %i21, %i20
  store i32 %xor, i32* %calculatedCombinedCRC43, align 4
  %state44 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 1
  store i32 14, i32* %state44, align 8
  br label %if.end46

if.else45:                                        ; preds = %land.lhs.true, %if.end20
  br label %return

if.end46:                                         ; preds = %if.end39
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end11
  %state48 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 1
  %i22 = load i32, i32* %state48, align 8
  %cmp49 = icmp sge i32 %i22, 10
  br i1 %cmp49, label %if.then50, label %if.end70

if.then50:                                        ; preds = %if.end47
  %call51 = call i32 @BZ2_decompress(%struct.DState* %i1)
  %cmp52 = icmp eq i32 %call51, 4
  br i1 %cmp52, label %if.then53, label %if.end65

if.then53:                                        ; preds = %if.then50
  %verbosity54 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 12
  %i23 = load i32, i32* %verbosity54, align 4
  %cmp55 = icmp sge i32 %i23, 3
  br i1 %cmp55, label %if.then56, label %if.end59

if.then56:                                        ; preds = %if.then53
  %i24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %storedCombinedCRC = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 24
  %i25 = load i32, i32* %storedCombinedCRC, align 4
  %calculatedCombinedCRC57 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 26
  %i26 = load i32, i32* %calculatedCombinedCRC57, align 4
  %call58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i24, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4.80, i64 0, i64 0), i32 %i25, i32 %i26)
  br label %if.end59

if.end59:                                         ; preds = %if.then56, %if.then53
  %calculatedCombinedCRC60 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 26
  %i27 = load i32, i32* %calculatedCombinedCRC60, align 4
  %storedCombinedCRC61 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 24
  %i28 = load i32, i32* %storedCombinedCRC61, align 4
  %cmp62 = icmp ne i32 %i27, %i28
  br i1 %cmp62, label %if.then63, label %if.end64

if.then63:                                        ; preds = %if.end59
  br label %return

if.end64:                                         ; preds = %if.end59
  br label %return

if.end65:                                         ; preds = %if.then50
  %state66 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 1
  %i29 = load i32, i32* %state66, align 8
  %cmp67 = icmp ne i32 %i29, 2
  br i1 %cmp67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %if.end65
  br label %return

if.end69:                                         ; preds = %if.end65
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end47
  br label %while.body

return:                                           ; preds = %if.then68, %if.end64, %if.then63, %if.else45, %if.then38, %if.then19, %if.then10, %if.then6, %if.then2, %if.then
  %retval.0 = phi i32 [ -2, %if.then ], [ -2, %if.then2 ], [ -2, %if.then6 ], [ -1, %if.then10 ], [ -4, %if.then19 ], [ -4, %if.then38 ], [ -4, %if.then63 ], [ %call51, %if.end64 ], [ %call51, %if.then68 ], [ 0, %if.else45 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @unRLE_obuf_to_output_SMALL(%struct.DState* %s) #0 {
entry:
  %blockRandomised = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 4
  %i = load i8, i8* %blockRandomised, align 4
  %tobool = icmp ne i8 %i, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.body

while.body:                                       ; preds = %if.end328, %if.then229, %if.then223, %if.then161, %if.then155, %if.then93, %if.then87, %if.then
  br label %while.body2

while.body2:                                      ; preds = %if.end26, %while.body
  %strm = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1, i32 0, i32 5
  %i2 = load i32, i32* %avail_out, align 8
  %cmp = icmp eq i32 %i2, 0
  br i1 %cmp, label %if.then3, label %if.end

if.then3:                                         ; preds = %while.body2
  br label %return

if.end:                                           ; preds = %while.body2
  %state_out_len = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  %i3 = load i32, i32* %state_out_len, align 8
  %cmp4 = icmp eq i32 %i3, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  br label %while.end

if.end6:                                          ; preds = %if.end
  %state_out_ch = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 2
  %i4 = load i8, i8* %state_out_ch, align 4
  %strm7 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i5 = load %struct.bz_stream*, %struct.bz_stream** %strm7, align 8
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i5, i32 0, i32 4
  %i6 = load i8*, i8** %next_out, align 8
  store i8 %i4, i8* %i6, align 1
  %calculatedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 25
  %i7 = load i32, i32* %calculatedBlockCRC, align 8
  %shl = shl i32 %i7, 8
  %calculatedBlockCRC8 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 25
  %i8 = load i32, i32* %calculatedBlockCRC8, align 8
  %shr = lshr i32 %i8, 24
  %state_out_ch9 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 2
  %i9 = load i8, i8* %state_out_ch9, align 4
  %conv = zext i8 %i9 to i32
  %xor = xor i32 %shr, %conv
  %idxprom = zext i32 %xor to i64
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom
  %i10 = load i32, i32* %arrayidx, align 4
  %xor10 = xor i32 %shl, %i10
  %calculatedBlockCRC11 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 25
  store i32 %xor10, i32* %calculatedBlockCRC11, align 8
  %state_out_len12 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  %i11 = load i32, i32* %state_out_len12, align 8
  %dec = add nsw i32 %i11, -1
  store i32 %dec, i32* %state_out_len12, align 8
  %strm13 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i12 = load %struct.bz_stream*, %struct.bz_stream** %strm13, align 8
  %next_out14 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i12, i32 0, i32 4
  %i13 = load i8*, i8** %next_out14, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %i13, i32 1
  store i8* %incdec.ptr, i8** %next_out14, align 8
  %strm15 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i14 = load %struct.bz_stream*, %struct.bz_stream** %strm15, align 8
  %avail_out16 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i14, i32 0, i32 5
  %i15 = load i32, i32* %avail_out16, align 8
  %dec17 = add i32 %i15, -1
  store i32 %dec17, i32* %avail_out16, align 8
  %strm18 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i16 = load %struct.bz_stream*, %struct.bz_stream** %strm18, align 8
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i16, i32 0, i32 6
  %i17 = load i32, i32* %total_out_lo32, align 4
  %inc = add i32 %i17, 1
  store i32 %inc, i32* %total_out_lo32, align 4
  %strm19 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i18 = load %struct.bz_stream*, %struct.bz_stream** %strm19, align 8
  %total_out_lo3220 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i18, i32 0, i32 6
  %i19 = load i32, i32* %total_out_lo3220, align 4
  %cmp21 = icmp eq i32 %i19, 0
  br i1 %cmp21, label %if.then23, label %if.end26

if.then23:                                        ; preds = %if.end6
  %strm24 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i20 = load %struct.bz_stream*, %struct.bz_stream** %strm24, align 8
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i20, i32 0, i32 7
  %i21 = load i32, i32* %total_out_hi32, align 8
  %inc25 = add i32 %i21, 1
  store i32 %inc25, i32* %total_out_hi32, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.then23, %if.end6
  br label %while.body2

while.end:                                        ; preds = %if.then5
  %nblock_used = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i22 = load i32, i32* %nblock_used, align 4
  %save_nblock = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i23 = load i32, i32* %save_nblock, align 8
  %add = add nsw i32 %i23, 1
  %cmp27 = icmp eq i32 %i22, %add
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %while.end
  br label %return

if.end30:                                         ; preds = %while.end
  %nblock_used31 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i24 = load i32, i32* %nblock_used31, align 4
  %save_nblock32 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i25 = load i32, i32* %save_nblock32, align 8
  %add33 = add nsw i32 %i25, 1
  %cmp34 = icmp sgt i32 %i24, %add33
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end30
  br label %return

if.end37:                                         ; preds = %if.end30
  %state_out_len38 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 1, i32* %state_out_len38, align 8
  %k0 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i26 = load i32, i32* %k0, align 8
  %conv39 = trunc i32 %i26 to i8
  %state_out_ch40 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 2
  store i8 %conv39, i8* %state_out_ch40, align 4
  %tPos = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i27 = load i32, i32* %tPos, align 4
  %cftab = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arraydecay = getelementptr inbounds [257 x i32], [257 x i32]* %cftab, i64 0, i64 0
  %call = call i32 @BZ2_indexIntoF(i32 %i27, i32* %arraydecay)
  %conv41 = trunc i32 %call to i8
  %ll16 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i28 = load i16*, i16** %ll16, align 8
  %tPos42 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i29 = load i32, i32* %tPos42, align 4
  %idxprom43 = zext i32 %i29 to i64
  %arrayidx44 = getelementptr inbounds i16, i16* %i28, i64 %idxprom43
  %i30 = load i16, i16* %arrayidx44, align 2
  %conv45 = zext i16 %i30 to i32
  %ll4 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i31 = load i8*, i8** %ll4, align 8
  %tPos46 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i32 = load i32, i32* %tPos46, align 4
  %shr47 = lshr i32 %i32, 1
  %idxprom48 = zext i32 %shr47 to i64
  %arrayidx49 = getelementptr inbounds i8, i8* %i31, i64 %idxprom48
  %i33 = load i8, i8* %arrayidx49, align 1
  %conv50 = zext i8 %i33 to i32
  %tPos51 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i34 = load i32, i32* %tPos51, align 4
  %shl52 = shl i32 %i34, 2
  %and = and i32 %shl52, 4
  %shr53 = lshr i32 %conv50, %and
  %and54 = and i32 %shr53, 15
  %shl55 = shl i32 %and54, 16
  %or = or i32 %conv45, %shl55
  %tPos56 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %or, i32* %tPos56, align 4
  %rNToGo = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i35 = load i32, i32* %rNToGo, align 8
  %cmp57 = icmp eq i32 %i35, 0
  br i1 %cmp57, label %if.then59, label %if.end71

if.then59:                                        ; preds = %if.end37
  %rTPos = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i36 = load i32, i32* %rTPos, align 4
  %idxprom60 = sext i32 %i36 to i64
  %arrayidx61 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom60
  %i37 = load i32, i32* %arrayidx61, align 4
  %rNToGo62 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 %i37, i32* %rNToGo62, align 8
  %rTPos63 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i38 = load i32, i32* %rTPos63, align 4
  %inc64 = add nsw i32 %i38, 1
  store i32 %inc64, i32* %rTPos63, align 4
  %rTPos65 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i39 = load i32, i32* %rTPos65, align 4
  %cmp66 = icmp eq i32 %i39, 512
  br i1 %cmp66, label %if.then68, label %if.end70

if.then68:                                        ; preds = %if.then59
  %rTPos69 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos69, align 4
  br label %if.end70

if.end70:                                         ; preds = %if.then68, %if.then59
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.end37
  %rNToGo72 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i40 = load i32, i32* %rNToGo72, align 8
  %dec73 = add nsw i32 %i40, -1
  store i32 %dec73, i32* %rNToGo72, align 8
  %rNToGo74 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i41 = load i32, i32* %rNToGo74, align 8
  %cmp75 = icmp eq i32 %i41, 1
  %i42 = zext i1 %cmp75 to i64
  %cond = select i1 %cmp75, i32 1, i32 0
  %conv77 = zext i8 %conv41 to i32
  %xor78 = xor i32 %conv77, %cond
  %conv79 = trunc i32 %xor78 to i8
  %nblock_used80 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i43 = load i32, i32* %nblock_used80, align 4
  %inc81 = add nsw i32 %i43, 1
  store i32 %inc81, i32* %nblock_used80, align 4
  %nblock_used82 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i44 = load i32, i32* %nblock_used82, align 4
  %save_nblock83 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i45 = load i32, i32* %save_nblock83, align 8
  %add84 = add nsw i32 %i45, 1
  %cmp85 = icmp eq i32 %i44, %add84
  br i1 %cmp85, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.end71
  br label %while.body

if.end88:                                         ; preds = %if.end71
  %conv89 = zext i8 %conv79 to i32
  %k090 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i46 = load i32, i32* %k090, align 8
  %cmp91 = icmp ne i32 %conv89, %i46
  br i1 %cmp91, label %if.then93, label %if.end96

if.then93:                                        ; preds = %if.end88
  %conv94 = zext i8 %conv79 to i32
  %k095 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %conv94, i32* %k095, align 8
  br label %while.body

if.end96:                                         ; preds = %if.end88
  %state_out_len97 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 2, i32* %state_out_len97, align 8
  %tPos98 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i47 = load i32, i32* %tPos98, align 4
  %cftab99 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arraydecay100 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab99, i64 0, i64 0
  %call101 = call i32 @BZ2_indexIntoF(i32 %i47, i32* %arraydecay100)
  %conv102 = trunc i32 %call101 to i8
  %ll16103 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i48 = load i16*, i16** %ll16103, align 8
  %tPos104 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i49 = load i32, i32* %tPos104, align 4
  %idxprom105 = zext i32 %i49 to i64
  %arrayidx106 = getelementptr inbounds i16, i16* %i48, i64 %idxprom105
  %i50 = load i16, i16* %arrayidx106, align 2
  %conv107 = zext i16 %i50 to i32
  %ll4108 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i51 = load i8*, i8** %ll4108, align 8
  %tPos109 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i52 = load i32, i32* %tPos109, align 4
  %shr110 = lshr i32 %i52, 1
  %idxprom111 = zext i32 %shr110 to i64
  %arrayidx112 = getelementptr inbounds i8, i8* %i51, i64 %idxprom111
  %i53 = load i8, i8* %arrayidx112, align 1
  %conv113 = zext i8 %i53 to i32
  %tPos114 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i54 = load i32, i32* %tPos114, align 4
  %shl115 = shl i32 %i54, 2
  %and116 = and i32 %shl115, 4
  %shr117 = lshr i32 %conv113, %and116
  %and118 = and i32 %shr117, 15
  %shl119 = shl i32 %and118, 16
  %or120 = or i32 %conv107, %shl119
  %tPos121 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %or120, i32* %tPos121, align 4
  %rNToGo122 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i55 = load i32, i32* %rNToGo122, align 8
  %cmp123 = icmp eq i32 %i55, 0
  br i1 %cmp123, label %if.then125, label %if.end138

if.then125:                                       ; preds = %if.end96
  %rTPos126 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i56 = load i32, i32* %rTPos126, align 4
  %idxprom127 = sext i32 %i56 to i64
  %arrayidx128 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom127
  %i57 = load i32, i32* %arrayidx128, align 4
  %rNToGo129 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 %i57, i32* %rNToGo129, align 8
  %rTPos130 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i58 = load i32, i32* %rTPos130, align 4
  %inc131 = add nsw i32 %i58, 1
  store i32 %inc131, i32* %rTPos130, align 4
  %rTPos132 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i59 = load i32, i32* %rTPos132, align 4
  %cmp133 = icmp eq i32 %i59, 512
  br i1 %cmp133, label %if.then135, label %if.end137

if.then135:                                       ; preds = %if.then125
  %rTPos136 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos136, align 4
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %if.then125
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end96
  %rNToGo139 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i60 = load i32, i32* %rNToGo139, align 8
  %dec140 = add nsw i32 %i60, -1
  store i32 %dec140, i32* %rNToGo139, align 8
  %rNToGo141 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i61 = load i32, i32* %rNToGo141, align 8
  %cmp142 = icmp eq i32 %i61, 1
  %i62 = zext i1 %cmp142 to i64
  %cond144 = select i1 %cmp142, i32 1, i32 0
  %conv145 = zext i8 %conv102 to i32
  %xor146 = xor i32 %conv145, %cond144
  %conv147 = trunc i32 %xor146 to i8
  %nblock_used148 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i63 = load i32, i32* %nblock_used148, align 4
  %inc149 = add nsw i32 %i63, 1
  store i32 %inc149, i32* %nblock_used148, align 4
  %nblock_used150 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i64 = load i32, i32* %nblock_used150, align 4
  %save_nblock151 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i65 = load i32, i32* %save_nblock151, align 8
  %add152 = add nsw i32 %i65, 1
  %cmp153 = icmp eq i32 %i64, %add152
  br i1 %cmp153, label %if.then155, label %if.end156

if.then155:                                       ; preds = %if.end138
  br label %while.body

if.end156:                                        ; preds = %if.end138
  %conv157 = zext i8 %conv147 to i32
  %k0158 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i66 = load i32, i32* %k0158, align 8
  %cmp159 = icmp ne i32 %conv157, %i66
  br i1 %cmp159, label %if.then161, label %if.end164

if.then161:                                       ; preds = %if.end156
  %conv162 = zext i8 %conv147 to i32
  %k0163 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %conv162, i32* %k0163, align 8
  br label %while.body

if.end164:                                        ; preds = %if.end156
  %state_out_len165 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 3, i32* %state_out_len165, align 8
  %tPos166 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i67 = load i32, i32* %tPos166, align 4
  %cftab167 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arraydecay168 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab167, i64 0, i64 0
  %call169 = call i32 @BZ2_indexIntoF(i32 %i67, i32* %arraydecay168)
  %conv170 = trunc i32 %call169 to i8
  %ll16171 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i68 = load i16*, i16** %ll16171, align 8
  %tPos172 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i69 = load i32, i32* %tPos172, align 4
  %idxprom173 = zext i32 %i69 to i64
  %arrayidx174 = getelementptr inbounds i16, i16* %i68, i64 %idxprom173
  %i70 = load i16, i16* %arrayidx174, align 2
  %conv175 = zext i16 %i70 to i32
  %ll4176 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i71 = load i8*, i8** %ll4176, align 8
  %tPos177 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i72 = load i32, i32* %tPos177, align 4
  %shr178 = lshr i32 %i72, 1
  %idxprom179 = zext i32 %shr178 to i64
  %arrayidx180 = getelementptr inbounds i8, i8* %i71, i64 %idxprom179
  %i73 = load i8, i8* %arrayidx180, align 1
  %conv181 = zext i8 %i73 to i32
  %tPos182 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i74 = load i32, i32* %tPos182, align 4
  %shl183 = shl i32 %i74, 2
  %and184 = and i32 %shl183, 4
  %shr185 = lshr i32 %conv181, %and184
  %and186 = and i32 %shr185, 15
  %shl187 = shl i32 %and186, 16
  %or188 = or i32 %conv175, %shl187
  %tPos189 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %or188, i32* %tPos189, align 4
  %rNToGo190 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i75 = load i32, i32* %rNToGo190, align 8
  %cmp191 = icmp eq i32 %i75, 0
  br i1 %cmp191, label %if.then193, label %if.end206

if.then193:                                       ; preds = %if.end164
  %rTPos194 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i76 = load i32, i32* %rTPos194, align 4
  %idxprom195 = sext i32 %i76 to i64
  %arrayidx196 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom195
  %i77 = load i32, i32* %arrayidx196, align 4
  %rNToGo197 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 %i77, i32* %rNToGo197, align 8
  %rTPos198 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i78 = load i32, i32* %rTPos198, align 4
  %inc199 = add nsw i32 %i78, 1
  store i32 %inc199, i32* %rTPos198, align 4
  %rTPos200 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i79 = load i32, i32* %rTPos200, align 4
  %cmp201 = icmp eq i32 %i79, 512
  br i1 %cmp201, label %if.then203, label %if.end205

if.then203:                                       ; preds = %if.then193
  %rTPos204 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos204, align 4
  br label %if.end205

if.end205:                                        ; preds = %if.then203, %if.then193
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.end164
  %rNToGo207 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i80 = load i32, i32* %rNToGo207, align 8
  %dec208 = add nsw i32 %i80, -1
  store i32 %dec208, i32* %rNToGo207, align 8
  %rNToGo209 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i81 = load i32, i32* %rNToGo209, align 8
  %cmp210 = icmp eq i32 %i81, 1
  %i82 = zext i1 %cmp210 to i64
  %cond212 = select i1 %cmp210, i32 1, i32 0
  %conv213 = zext i8 %conv170 to i32
  %xor214 = xor i32 %conv213, %cond212
  %conv215 = trunc i32 %xor214 to i8
  %nblock_used216 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i83 = load i32, i32* %nblock_used216, align 4
  %inc217 = add nsw i32 %i83, 1
  store i32 %inc217, i32* %nblock_used216, align 4
  %nblock_used218 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i84 = load i32, i32* %nblock_used218, align 4
  %save_nblock219 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i85 = load i32, i32* %save_nblock219, align 8
  %add220 = add nsw i32 %i85, 1
  %cmp221 = icmp eq i32 %i84, %add220
  br i1 %cmp221, label %if.then223, label %if.end224

if.then223:                                       ; preds = %if.end206
  br label %while.body

if.end224:                                        ; preds = %if.end206
  %conv225 = zext i8 %conv215 to i32
  %k0226 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i86 = load i32, i32* %k0226, align 8
  %cmp227 = icmp ne i32 %conv225, %i86
  br i1 %cmp227, label %if.then229, label %if.end232

if.then229:                                       ; preds = %if.end224
  %conv230 = zext i8 %conv215 to i32
  %k0231 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %conv230, i32* %k0231, align 8
  br label %while.body

if.end232:                                        ; preds = %if.end224
  %tPos233 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i87 = load i32, i32* %tPos233, align 4
  %cftab234 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arraydecay235 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab234, i64 0, i64 0
  %call236 = call i32 @BZ2_indexIntoF(i32 %i87, i32* %arraydecay235)
  %conv237 = trunc i32 %call236 to i8
  %ll16238 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i88 = load i16*, i16** %ll16238, align 8
  %tPos239 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i89 = load i32, i32* %tPos239, align 4
  %idxprom240 = zext i32 %i89 to i64
  %arrayidx241 = getelementptr inbounds i16, i16* %i88, i64 %idxprom240
  %i90 = load i16, i16* %arrayidx241, align 2
  %conv242 = zext i16 %i90 to i32
  %ll4243 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i91 = load i8*, i8** %ll4243, align 8
  %tPos244 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i92 = load i32, i32* %tPos244, align 4
  %shr245 = lshr i32 %i92, 1
  %idxprom246 = zext i32 %shr245 to i64
  %arrayidx247 = getelementptr inbounds i8, i8* %i91, i64 %idxprom246
  %i93 = load i8, i8* %arrayidx247, align 1
  %conv248 = zext i8 %i93 to i32
  %tPos249 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i94 = load i32, i32* %tPos249, align 4
  %shl250 = shl i32 %i94, 2
  %and251 = and i32 %shl250, 4
  %shr252 = lshr i32 %conv248, %and251
  %and253 = and i32 %shr252, 15
  %shl254 = shl i32 %and253, 16
  %or255 = or i32 %conv242, %shl254
  %tPos256 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %or255, i32* %tPos256, align 4
  %rNToGo257 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i95 = load i32, i32* %rNToGo257, align 8
  %cmp258 = icmp eq i32 %i95, 0
  br i1 %cmp258, label %if.then260, label %if.end273

if.then260:                                       ; preds = %if.end232
  %rTPos261 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i96 = load i32, i32* %rTPos261, align 4
  %idxprom262 = sext i32 %i96 to i64
  %arrayidx263 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom262
  %i97 = load i32, i32* %arrayidx263, align 4
  %rNToGo264 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 %i97, i32* %rNToGo264, align 8
  %rTPos265 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i98 = load i32, i32* %rTPos265, align 4
  %inc266 = add nsw i32 %i98, 1
  store i32 %inc266, i32* %rTPos265, align 4
  %rTPos267 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i99 = load i32, i32* %rTPos267, align 4
  %cmp268 = icmp eq i32 %i99, 512
  br i1 %cmp268, label %if.then270, label %if.end272

if.then270:                                       ; preds = %if.then260
  %rTPos271 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos271, align 4
  br label %if.end272

if.end272:                                        ; preds = %if.then270, %if.then260
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.end232
  %rNToGo274 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i100 = load i32, i32* %rNToGo274, align 8
  %dec275 = add nsw i32 %i100, -1
  store i32 %dec275, i32* %rNToGo274, align 8
  %rNToGo276 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i101 = load i32, i32* %rNToGo276, align 8
  %cmp277 = icmp eq i32 %i101, 1
  %i102 = zext i1 %cmp277 to i64
  %cond279 = select i1 %cmp277, i32 1, i32 0
  %conv280 = zext i8 %conv237 to i32
  %xor281 = xor i32 %conv280, %cond279
  %conv282 = trunc i32 %xor281 to i8
  %nblock_used283 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i103 = load i32, i32* %nblock_used283, align 4
  %inc284 = add nsw i32 %i103, 1
  store i32 %inc284, i32* %nblock_used283, align 4
  %conv285 = zext i8 %conv282 to i32
  %add286 = add nsw i32 %conv285, 4
  %state_out_len287 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 %add286, i32* %state_out_len287, align 8
  %tPos288 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i104 = load i32, i32* %tPos288, align 4
  %cftab289 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arraydecay290 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab289, i64 0, i64 0
  %call291 = call i32 @BZ2_indexIntoF(i32 %i104, i32* %arraydecay290)
  %k0292 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %call291, i32* %k0292, align 8
  %ll16293 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i105 = load i16*, i16** %ll16293, align 8
  %tPos294 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i106 = load i32, i32* %tPos294, align 4
  %idxprom295 = zext i32 %i106 to i64
  %arrayidx296 = getelementptr inbounds i16, i16* %i105, i64 %idxprom295
  %i107 = load i16, i16* %arrayidx296, align 2
  %conv297 = zext i16 %i107 to i32
  %ll4298 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i108 = load i8*, i8** %ll4298, align 8
  %tPos299 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i109 = load i32, i32* %tPos299, align 4
  %shr300 = lshr i32 %i109, 1
  %idxprom301 = zext i32 %shr300 to i64
  %arrayidx302 = getelementptr inbounds i8, i8* %i108, i64 %idxprom301
  %i110 = load i8, i8* %arrayidx302, align 1
  %conv303 = zext i8 %i110 to i32
  %tPos304 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i111 = load i32, i32* %tPos304, align 4
  %shl305 = shl i32 %i111, 2
  %and306 = and i32 %shl305, 4
  %shr307 = lshr i32 %conv303, %and306
  %and308 = and i32 %shr307, 15
  %shl309 = shl i32 %and308, 16
  %or310 = or i32 %conv297, %shl309
  %tPos311 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %or310, i32* %tPos311, align 4
  %rNToGo312 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i112 = load i32, i32* %rNToGo312, align 8
  %cmp313 = icmp eq i32 %i112, 0
  br i1 %cmp313, label %if.then315, label %if.end328

if.then315:                                       ; preds = %if.end273
  %rTPos316 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i113 = load i32, i32* %rTPos316, align 4
  %idxprom317 = sext i32 %i113 to i64
  %arrayidx318 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom317
  %i114 = load i32, i32* %arrayidx318, align 4
  %rNToGo319 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 %i114, i32* %rNToGo319, align 8
  %rTPos320 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i115 = load i32, i32* %rTPos320, align 4
  %inc321 = add nsw i32 %i115, 1
  store i32 %inc321, i32* %rTPos320, align 4
  %rTPos322 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i116 = load i32, i32* %rTPos322, align 4
  %cmp323 = icmp eq i32 %i116, 512
  br i1 %cmp323, label %if.then325, label %if.end327

if.then325:                                       ; preds = %if.then315
  %rTPos326 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos326, align 4
  br label %if.end327

if.end327:                                        ; preds = %if.then325, %if.then315
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.end273
  %rNToGo329 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i117 = load i32, i32* %rNToGo329, align 8
  %dec330 = add nsw i32 %i117, -1
  store i32 %dec330, i32* %rNToGo329, align 8
  %rNToGo331 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i118 = load i32, i32* %rNToGo331, align 8
  %cmp332 = icmp eq i32 %i118, 1
  %i119 = zext i1 %cmp332 to i64
  %cond334 = select i1 %cmp332, i32 1, i32 0
  %k0335 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i120 = load i32, i32* %k0335, align 8
  %xor336 = xor i32 %i120, %cond334
  store i32 %xor336, i32* %k0335, align 8
  %nblock_used337 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i121 = load i32, i32* %nblock_used337, align 4
  %inc338 = add nsw i32 %i121, 1
  store i32 %inc338, i32* %nblock_used337, align 4
  br label %while.body

if.else:                                          ; preds = %entry
  br label %while.body339

while.body339:                                    ; preds = %if.end530, %if.then527, %if.then521, %if.then485, %if.then479, %if.then443, %if.then437, %if.else
  br label %while.body341

while.body341:                                    ; preds = %if.end386, %while.body339
  %strm342 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i122 = load %struct.bz_stream*, %struct.bz_stream** %strm342, align 8
  %avail_out343 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i122, i32 0, i32 5
  %i123 = load i32, i32* %avail_out343, align 8
  %cmp344 = icmp eq i32 %i123, 0
  br i1 %cmp344, label %if.then346, label %if.end347

if.then346:                                       ; preds = %while.body341
  br label %return

if.end347:                                        ; preds = %while.body341
  %state_out_len348 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  %i124 = load i32, i32* %state_out_len348, align 8
  %cmp349 = icmp eq i32 %i124, 0
  br i1 %cmp349, label %if.then351, label %if.end352

if.then351:                                       ; preds = %if.end347
  br label %while.end387

if.end352:                                        ; preds = %if.end347
  %state_out_ch353 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 2
  %i125 = load i8, i8* %state_out_ch353, align 4
  %strm354 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i126 = load %struct.bz_stream*, %struct.bz_stream** %strm354, align 8
  %next_out355 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i126, i32 0, i32 4
  %i127 = load i8*, i8** %next_out355, align 8
  store i8 %i125, i8* %i127, align 1
  %calculatedBlockCRC356 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 25
  %i128 = load i32, i32* %calculatedBlockCRC356, align 8
  %shl357 = shl i32 %i128, 8
  %calculatedBlockCRC358 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 25
  %i129 = load i32, i32* %calculatedBlockCRC358, align 8
  %shr359 = lshr i32 %i129, 24
  %state_out_ch360 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 2
  %i130 = load i8, i8* %state_out_ch360, align 4
  %conv361 = zext i8 %i130 to i32
  %xor362 = xor i32 %shr359, %conv361
  %idxprom363 = zext i32 %xor362 to i64
  %arrayidx364 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom363
  %i131 = load i32, i32* %arrayidx364, align 4
  %xor365 = xor i32 %shl357, %i131
  %calculatedBlockCRC366 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 25
  store i32 %xor365, i32* %calculatedBlockCRC366, align 8
  %state_out_len367 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  %i132 = load i32, i32* %state_out_len367, align 8
  %dec368 = add nsw i32 %i132, -1
  store i32 %dec368, i32* %state_out_len367, align 8
  %strm369 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i133 = load %struct.bz_stream*, %struct.bz_stream** %strm369, align 8
  %next_out370 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i133, i32 0, i32 4
  %i134 = load i8*, i8** %next_out370, align 8
  %incdec.ptr371 = getelementptr inbounds i8, i8* %i134, i32 1
  store i8* %incdec.ptr371, i8** %next_out370, align 8
  %strm372 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i135 = load %struct.bz_stream*, %struct.bz_stream** %strm372, align 8
  %avail_out373 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i135, i32 0, i32 5
  %i136 = load i32, i32* %avail_out373, align 8
  %dec374 = add i32 %i136, -1
  store i32 %dec374, i32* %avail_out373, align 8
  %strm375 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i137 = load %struct.bz_stream*, %struct.bz_stream** %strm375, align 8
  %total_out_lo32376 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i137, i32 0, i32 6
  %i138 = load i32, i32* %total_out_lo32376, align 4
  %inc377 = add i32 %i138, 1
  store i32 %inc377, i32* %total_out_lo32376, align 4
  %strm378 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i139 = load %struct.bz_stream*, %struct.bz_stream** %strm378, align 8
  %total_out_lo32379 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i139, i32 0, i32 6
  %i140 = load i32, i32* %total_out_lo32379, align 4
  %cmp380 = icmp eq i32 %i140, 0
  br i1 %cmp380, label %if.then382, label %if.end386

if.then382:                                       ; preds = %if.end352
  %strm383 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i141 = load %struct.bz_stream*, %struct.bz_stream** %strm383, align 8
  %total_out_hi32384 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i141, i32 0, i32 7
  %i142 = load i32, i32* %total_out_hi32384, align 8
  %inc385 = add i32 %i142, 1
  store i32 %inc385, i32* %total_out_hi32384, align 8
  br label %if.end386

if.end386:                                        ; preds = %if.then382, %if.end352
  br label %while.body341

while.end387:                                     ; preds = %if.then351
  %nblock_used388 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i143 = load i32, i32* %nblock_used388, align 4
  %save_nblock389 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i144 = load i32, i32* %save_nblock389, align 8
  %add390 = add nsw i32 %i144, 1
  %cmp391 = icmp eq i32 %i143, %add390
  br i1 %cmp391, label %if.then393, label %if.end394

if.then393:                                       ; preds = %while.end387
  br label %return

if.end394:                                        ; preds = %while.end387
  %nblock_used395 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i145 = load i32, i32* %nblock_used395, align 4
  %save_nblock396 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i146 = load i32, i32* %save_nblock396, align 8
  %add397 = add nsw i32 %i146, 1
  %cmp398 = icmp sgt i32 %i145, %add397
  br i1 %cmp398, label %if.then400, label %if.end401

if.then400:                                       ; preds = %if.end394
  br label %return

if.end401:                                        ; preds = %if.end394
  %state_out_len402 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 1, i32* %state_out_len402, align 8
  %k0403 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i147 = load i32, i32* %k0403, align 8
  %conv404 = trunc i32 %i147 to i8
  %state_out_ch405 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 2
  store i8 %conv404, i8* %state_out_ch405, align 4
  %tPos406 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i148 = load i32, i32* %tPos406, align 4
  %cftab407 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arraydecay408 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab407, i64 0, i64 0
  %call409 = call i32 @BZ2_indexIntoF(i32 %i148, i32* %arraydecay408)
  %conv410 = trunc i32 %call409 to i8
  %ll16411 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i149 = load i16*, i16** %ll16411, align 8
  %tPos412 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i150 = load i32, i32* %tPos412, align 4
  %idxprom413 = zext i32 %i150 to i64
  %arrayidx414 = getelementptr inbounds i16, i16* %i149, i64 %idxprom413
  %i151 = load i16, i16* %arrayidx414, align 2
  %conv415 = zext i16 %i151 to i32
  %ll4416 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i152 = load i8*, i8** %ll4416, align 8
  %tPos417 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i153 = load i32, i32* %tPos417, align 4
  %shr418 = lshr i32 %i153, 1
  %idxprom419 = zext i32 %shr418 to i64
  %arrayidx420 = getelementptr inbounds i8, i8* %i152, i64 %idxprom419
  %i154 = load i8, i8* %arrayidx420, align 1
  %conv421 = zext i8 %i154 to i32
  %tPos422 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i155 = load i32, i32* %tPos422, align 4
  %shl423 = shl i32 %i155, 2
  %and424 = and i32 %shl423, 4
  %shr425 = lshr i32 %conv421, %and424
  %and426 = and i32 %shr425, 15
  %shl427 = shl i32 %and426, 16
  %or428 = or i32 %conv415, %shl427
  %tPos429 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %or428, i32* %tPos429, align 4
  %nblock_used430 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i156 = load i32, i32* %nblock_used430, align 4
  %inc431 = add nsw i32 %i156, 1
  store i32 %inc431, i32* %nblock_used430, align 4
  %nblock_used432 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i157 = load i32, i32* %nblock_used432, align 4
  %save_nblock433 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i158 = load i32, i32* %save_nblock433, align 8
  %add434 = add nsw i32 %i158, 1
  %cmp435 = icmp eq i32 %i157, %add434
  br i1 %cmp435, label %if.then437, label %if.end438

if.then437:                                       ; preds = %if.end401
  br label %while.body339

if.end438:                                        ; preds = %if.end401
  %conv439 = zext i8 %conv410 to i32
  %k0440 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i159 = load i32, i32* %k0440, align 8
  %cmp441 = icmp ne i32 %conv439, %i159
  br i1 %cmp441, label %if.then443, label %if.end446

if.then443:                                       ; preds = %if.end438
  %conv444 = zext i8 %conv410 to i32
  %k0445 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %conv444, i32* %k0445, align 8
  br label %while.body339

if.end446:                                        ; preds = %if.end438
  %state_out_len447 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 2, i32* %state_out_len447, align 8
  %tPos448 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i160 = load i32, i32* %tPos448, align 4
  %cftab449 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arraydecay450 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab449, i64 0, i64 0
  %call451 = call i32 @BZ2_indexIntoF(i32 %i160, i32* %arraydecay450)
  %conv452 = trunc i32 %call451 to i8
  %ll16453 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i161 = load i16*, i16** %ll16453, align 8
  %tPos454 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i162 = load i32, i32* %tPos454, align 4
  %idxprom455 = zext i32 %i162 to i64
  %arrayidx456 = getelementptr inbounds i16, i16* %i161, i64 %idxprom455
  %i163 = load i16, i16* %arrayidx456, align 2
  %conv457 = zext i16 %i163 to i32
  %ll4458 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i164 = load i8*, i8** %ll4458, align 8
  %tPos459 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i165 = load i32, i32* %tPos459, align 4
  %shr460 = lshr i32 %i165, 1
  %idxprom461 = zext i32 %shr460 to i64
  %arrayidx462 = getelementptr inbounds i8, i8* %i164, i64 %idxprom461
  %i166 = load i8, i8* %arrayidx462, align 1
  %conv463 = zext i8 %i166 to i32
  %tPos464 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i167 = load i32, i32* %tPos464, align 4
  %shl465 = shl i32 %i167, 2
  %and466 = and i32 %shl465, 4
  %shr467 = lshr i32 %conv463, %and466
  %and468 = and i32 %shr467, 15
  %shl469 = shl i32 %and468, 16
  %or470 = or i32 %conv457, %shl469
  %tPos471 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %or470, i32* %tPos471, align 4
  %nblock_used472 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i168 = load i32, i32* %nblock_used472, align 4
  %inc473 = add nsw i32 %i168, 1
  store i32 %inc473, i32* %nblock_used472, align 4
  %nblock_used474 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i169 = load i32, i32* %nblock_used474, align 4
  %save_nblock475 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i170 = load i32, i32* %save_nblock475, align 8
  %add476 = add nsw i32 %i170, 1
  %cmp477 = icmp eq i32 %i169, %add476
  br i1 %cmp477, label %if.then479, label %if.end480

if.then479:                                       ; preds = %if.end446
  br label %while.body339

if.end480:                                        ; preds = %if.end446
  %conv481 = zext i8 %conv452 to i32
  %k0482 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i171 = load i32, i32* %k0482, align 8
  %cmp483 = icmp ne i32 %conv481, %i171
  br i1 %cmp483, label %if.then485, label %if.end488

if.then485:                                       ; preds = %if.end480
  %conv486 = zext i8 %conv452 to i32
  %k0487 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %conv486, i32* %k0487, align 8
  br label %while.body339

if.end488:                                        ; preds = %if.end480
  %state_out_len489 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 3, i32* %state_out_len489, align 8
  %tPos490 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i172 = load i32, i32* %tPos490, align 4
  %cftab491 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arraydecay492 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab491, i64 0, i64 0
  %call493 = call i32 @BZ2_indexIntoF(i32 %i172, i32* %arraydecay492)
  %conv494 = trunc i32 %call493 to i8
  %ll16495 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i173 = load i16*, i16** %ll16495, align 8
  %tPos496 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i174 = load i32, i32* %tPos496, align 4
  %idxprom497 = zext i32 %i174 to i64
  %arrayidx498 = getelementptr inbounds i16, i16* %i173, i64 %idxprom497
  %i175 = load i16, i16* %arrayidx498, align 2
  %conv499 = zext i16 %i175 to i32
  %ll4500 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i176 = load i8*, i8** %ll4500, align 8
  %tPos501 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i177 = load i32, i32* %tPos501, align 4
  %shr502 = lshr i32 %i177, 1
  %idxprom503 = zext i32 %shr502 to i64
  %arrayidx504 = getelementptr inbounds i8, i8* %i176, i64 %idxprom503
  %i178 = load i8, i8* %arrayidx504, align 1
  %conv505 = zext i8 %i178 to i32
  %tPos506 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i179 = load i32, i32* %tPos506, align 4
  %shl507 = shl i32 %i179, 2
  %and508 = and i32 %shl507, 4
  %shr509 = lshr i32 %conv505, %and508
  %and510 = and i32 %shr509, 15
  %shl511 = shl i32 %and510, 16
  %or512 = or i32 %conv499, %shl511
  %tPos513 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %or512, i32* %tPos513, align 4
  %nblock_used514 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i180 = load i32, i32* %nblock_used514, align 4
  %inc515 = add nsw i32 %i180, 1
  store i32 %inc515, i32* %nblock_used514, align 4
  %nblock_used516 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i181 = load i32, i32* %nblock_used516, align 4
  %save_nblock517 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i182 = load i32, i32* %save_nblock517, align 8
  %add518 = add nsw i32 %i182, 1
  %cmp519 = icmp eq i32 %i181, %add518
  br i1 %cmp519, label %if.then521, label %if.end522

if.then521:                                       ; preds = %if.end488
  br label %while.body339

if.end522:                                        ; preds = %if.end488
  %conv523 = zext i8 %conv494 to i32
  %k0524 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i183 = load i32, i32* %k0524, align 8
  %cmp525 = icmp ne i32 %conv523, %i183
  br i1 %cmp525, label %if.then527, label %if.end530

if.then527:                                       ; preds = %if.end522
  %conv528 = zext i8 %conv494 to i32
  %k0529 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %conv528, i32* %k0529, align 8
  br label %while.body339

if.end530:                                        ; preds = %if.end522
  %tPos531 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i184 = load i32, i32* %tPos531, align 4
  %cftab532 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arraydecay533 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab532, i64 0, i64 0
  %call534 = call i32 @BZ2_indexIntoF(i32 %i184, i32* %arraydecay533)
  %conv535 = trunc i32 %call534 to i8
  %ll16536 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i185 = load i16*, i16** %ll16536, align 8
  %tPos537 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i186 = load i32, i32* %tPos537, align 4
  %idxprom538 = zext i32 %i186 to i64
  %arrayidx539 = getelementptr inbounds i16, i16* %i185, i64 %idxprom538
  %i187 = load i16, i16* %arrayidx539, align 2
  %conv540 = zext i16 %i187 to i32
  %ll4541 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i188 = load i8*, i8** %ll4541, align 8
  %tPos542 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i189 = load i32, i32* %tPos542, align 4
  %shr543 = lshr i32 %i189, 1
  %idxprom544 = zext i32 %shr543 to i64
  %arrayidx545 = getelementptr inbounds i8, i8* %i188, i64 %idxprom544
  %i190 = load i8, i8* %arrayidx545, align 1
  %conv546 = zext i8 %i190 to i32
  %tPos547 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i191 = load i32, i32* %tPos547, align 4
  %shl548 = shl i32 %i191, 2
  %and549 = and i32 %shl548, 4
  %shr550 = lshr i32 %conv546, %and549
  %and551 = and i32 %shr550, 15
  %shl552 = shl i32 %and551, 16
  %or553 = or i32 %conv540, %shl552
  %tPos554 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %or553, i32* %tPos554, align 4
  %nblock_used555 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i192 = load i32, i32* %nblock_used555, align 4
  %inc556 = add nsw i32 %i192, 1
  store i32 %inc556, i32* %nblock_used555, align 4
  %conv557 = zext i8 %conv535 to i32
  %add558 = add nsw i32 %conv557, 4
  %state_out_len559 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 %add558, i32* %state_out_len559, align 8
  %tPos560 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i193 = load i32, i32* %tPos560, align 4
  %cftab561 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arraydecay562 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab561, i64 0, i64 0
  %call563 = call i32 @BZ2_indexIntoF(i32 %i193, i32* %arraydecay562)
  %k0564 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %call563, i32* %k0564, align 8
  %ll16565 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i194 = load i16*, i16** %ll16565, align 8
  %tPos566 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i195 = load i32, i32* %tPos566, align 4
  %idxprom567 = zext i32 %i195 to i64
  %arrayidx568 = getelementptr inbounds i16, i16* %i194, i64 %idxprom567
  %i196 = load i16, i16* %arrayidx568, align 2
  %conv569 = zext i16 %i196 to i32
  %ll4570 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i197 = load i8*, i8** %ll4570, align 8
  %tPos571 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i198 = load i32, i32* %tPos571, align 4
  %shr572 = lshr i32 %i198, 1
  %idxprom573 = zext i32 %shr572 to i64
  %arrayidx574 = getelementptr inbounds i8, i8* %i197, i64 %idxprom573
  %i199 = load i8, i8* %arrayidx574, align 1
  %conv575 = zext i8 %i199 to i32
  %tPos576 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i200 = load i32, i32* %tPos576, align 4
  %shl577 = shl i32 %i200, 2
  %and578 = and i32 %shl577, 4
  %shr579 = lshr i32 %conv575, %and578
  %and580 = and i32 %shr579, 15
  %shl581 = shl i32 %and580, 16
  %or582 = or i32 %conv569, %shl581
  %tPos583 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %or582, i32* %tPos583, align 4
  %nblock_used584 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i201 = load i32, i32* %nblock_used584, align 4
  %inc585 = add nsw i32 %i201, 1
  store i32 %inc585, i32* %nblock_used584, align 4
  br label %while.body339

return:                                           ; preds = %if.then400, %if.then393, %if.then346, %if.then36, %if.then29, %if.then3
  %retval.0 = phi i8 [ 0, %if.then3 ], [ 0, %if.then29 ], [ 1, %if.then36 ], [ 0, %if.then346 ], [ 0, %if.then393 ], [ 1, %if.then400 ]
  ret i8 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @unRLE_obuf_to_output_FAST(%struct.DState* %s) #0 {
entry:
  %blockRandomised = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 4
  %i = load i8, i8* %blockRandomised, align 4
  %tobool = icmp ne i8 %i, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %while.body

while.body:                                       ; preds = %if.end265, %if.then192, %if.then186, %if.then138, %if.then132, %if.then84, %if.then78, %if.then
  br label %while.body2

while.body2:                                      ; preds = %if.end26, %while.body
  %strm = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1 = load %struct.bz_stream*, %struct.bz_stream** %strm, align 8
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1, i32 0, i32 5
  %i2 = load i32, i32* %avail_out, align 8
  %cmp = icmp eq i32 %i2, 0
  br i1 %cmp, label %if.then3, label %if.end

if.then3:                                         ; preds = %while.body2
  br label %return

if.end:                                           ; preds = %while.body2
  %state_out_len = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  %i3 = load i32, i32* %state_out_len, align 8
  %cmp4 = icmp eq i32 %i3, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  br label %while.end

if.end6:                                          ; preds = %if.end
  %state_out_ch = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 2
  %i4 = load i8, i8* %state_out_ch, align 4
  %strm7 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i5 = load %struct.bz_stream*, %struct.bz_stream** %strm7, align 8
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i5, i32 0, i32 4
  %i6 = load i8*, i8** %next_out, align 8
  store i8 %i4, i8* %i6, align 1
  %calculatedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 25
  %i7 = load i32, i32* %calculatedBlockCRC, align 8
  %shl = shl i32 %i7, 8
  %calculatedBlockCRC8 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 25
  %i8 = load i32, i32* %calculatedBlockCRC8, align 8
  %shr = lshr i32 %i8, 24
  %state_out_ch9 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 2
  %i9 = load i8, i8* %state_out_ch9, align 4
  %conv = zext i8 %i9 to i32
  %xor = xor i32 %shr, %conv
  %idxprom = zext i32 %xor to i64
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom
  %i10 = load i32, i32* %arrayidx, align 4
  %xor10 = xor i32 %shl, %i10
  %calculatedBlockCRC11 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 25
  store i32 %xor10, i32* %calculatedBlockCRC11, align 8
  %state_out_len12 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  %i11 = load i32, i32* %state_out_len12, align 8
  %dec = add nsw i32 %i11, -1
  store i32 %dec, i32* %state_out_len12, align 8
  %strm13 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i12 = load %struct.bz_stream*, %struct.bz_stream** %strm13, align 8
  %next_out14 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i12, i32 0, i32 4
  %i13 = load i8*, i8** %next_out14, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %i13, i32 1
  store i8* %incdec.ptr, i8** %next_out14, align 8
  %strm15 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i14 = load %struct.bz_stream*, %struct.bz_stream** %strm15, align 8
  %avail_out16 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i14, i32 0, i32 5
  %i15 = load i32, i32* %avail_out16, align 8
  %dec17 = add i32 %i15, -1
  store i32 %dec17, i32* %avail_out16, align 8
  %strm18 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i16 = load %struct.bz_stream*, %struct.bz_stream** %strm18, align 8
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i16, i32 0, i32 6
  %i17 = load i32, i32* %total_out_lo32, align 4
  %inc = add i32 %i17, 1
  store i32 %inc, i32* %total_out_lo32, align 4
  %strm19 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i18 = load %struct.bz_stream*, %struct.bz_stream** %strm19, align 8
  %total_out_lo3220 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i18, i32 0, i32 6
  %i19 = load i32, i32* %total_out_lo3220, align 4
  %cmp21 = icmp eq i32 %i19, 0
  br i1 %cmp21, label %if.then23, label %if.end26

if.then23:                                        ; preds = %if.end6
  %strm24 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i20 = load %struct.bz_stream*, %struct.bz_stream** %strm24, align 8
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i20, i32 0, i32 7
  %i21 = load i32, i32* %total_out_hi32, align 8
  %inc25 = add i32 %i21, 1
  store i32 %inc25, i32* %total_out_hi32, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.then23, %if.end6
  br label %while.body2

while.end:                                        ; preds = %if.then5
  %nblock_used = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i22 = load i32, i32* %nblock_used, align 4
  %save_nblock = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i23 = load i32, i32* %save_nblock, align 8
  %add = add nsw i32 %i23, 1
  %cmp27 = icmp eq i32 %i22, %add
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %while.end
  br label %return

if.end30:                                         ; preds = %while.end
  %nblock_used31 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i24 = load i32, i32* %nblock_used31, align 4
  %save_nblock32 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i25 = load i32, i32* %save_nblock32, align 8
  %add33 = add nsw i32 %i25, 1
  %cmp34 = icmp sgt i32 %i24, %add33
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end30
  br label %return

if.end37:                                         ; preds = %if.end30
  %state_out_len38 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 1, i32* %state_out_len38, align 8
  %k0 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i26 = load i32, i32* %k0, align 8
  %conv39 = trunc i32 %i26 to i8
  %state_out_ch40 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 2
  store i8 %conv39, i8* %state_out_ch40, align 4
  %tt = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i27 = load i32*, i32** %tt, align 8
  %tPos = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i28 = load i32, i32* %tPos, align 4
  %idxprom41 = zext i32 %i28 to i64
  %arrayidx42 = getelementptr inbounds i32, i32* %i27, i64 %idxprom41
  %i29 = load i32, i32* %arrayidx42, align 4
  %tPos43 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %i29, i32* %tPos43, align 4
  %tPos44 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i30 = load i32, i32* %tPos44, align 4
  %and = and i32 %i30, 255
  %conv45 = trunc i32 %and to i8
  %tPos46 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i31 = load i32, i32* %tPos46, align 4
  %shr47 = lshr i32 %i31, 8
  store i32 %shr47, i32* %tPos46, align 4
  %rNToGo = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i32 = load i32, i32* %rNToGo, align 8
  %cmp48 = icmp eq i32 %i32, 0
  br i1 %cmp48, label %if.then50, label %if.end62

if.then50:                                        ; preds = %if.end37
  %rTPos = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i33 = load i32, i32* %rTPos, align 4
  %idxprom51 = sext i32 %i33 to i64
  %arrayidx52 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom51
  %i34 = load i32, i32* %arrayidx52, align 4
  %rNToGo53 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 %i34, i32* %rNToGo53, align 8
  %rTPos54 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i35 = load i32, i32* %rTPos54, align 4
  %inc55 = add nsw i32 %i35, 1
  store i32 %inc55, i32* %rTPos54, align 4
  %rTPos56 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i36 = load i32, i32* %rTPos56, align 4
  %cmp57 = icmp eq i32 %i36, 512
  br i1 %cmp57, label %if.then59, label %if.end61

if.then59:                                        ; preds = %if.then50
  %rTPos60 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos60, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.then59, %if.then50
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end37
  %rNToGo63 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i37 = load i32, i32* %rNToGo63, align 8
  %dec64 = add nsw i32 %i37, -1
  store i32 %dec64, i32* %rNToGo63, align 8
  %rNToGo65 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i38 = load i32, i32* %rNToGo65, align 8
  %cmp66 = icmp eq i32 %i38, 1
  %i39 = zext i1 %cmp66 to i64
  %cond = select i1 %cmp66, i32 1, i32 0
  %conv68 = zext i8 %conv45 to i32
  %xor69 = xor i32 %conv68, %cond
  %conv70 = trunc i32 %xor69 to i8
  %nblock_used71 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i40 = load i32, i32* %nblock_used71, align 4
  %inc72 = add nsw i32 %i40, 1
  store i32 %inc72, i32* %nblock_used71, align 4
  %nblock_used73 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i41 = load i32, i32* %nblock_used73, align 4
  %save_nblock74 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i42 = load i32, i32* %save_nblock74, align 8
  %add75 = add nsw i32 %i42, 1
  %cmp76 = icmp eq i32 %i41, %add75
  br i1 %cmp76, label %if.then78, label %if.end79

if.then78:                                        ; preds = %if.end62
  br label %while.body

if.end79:                                         ; preds = %if.end62
  %conv80 = zext i8 %conv70 to i32
  %k081 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i43 = load i32, i32* %k081, align 8
  %cmp82 = icmp ne i32 %conv80, %i43
  br i1 %cmp82, label %if.then84, label %if.end87

if.then84:                                        ; preds = %if.end79
  %conv85 = zext i8 %conv70 to i32
  %k086 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %conv85, i32* %k086, align 8
  br label %while.body

if.end87:                                         ; preds = %if.end79
  %state_out_len88 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 2, i32* %state_out_len88, align 8
  %tt89 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i44 = load i32*, i32** %tt89, align 8
  %tPos90 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i45 = load i32, i32* %tPos90, align 4
  %idxprom91 = zext i32 %i45 to i64
  %arrayidx92 = getelementptr inbounds i32, i32* %i44, i64 %idxprom91
  %i46 = load i32, i32* %arrayidx92, align 4
  %tPos93 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %i46, i32* %tPos93, align 4
  %tPos94 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i47 = load i32, i32* %tPos94, align 4
  %and95 = and i32 %i47, 255
  %conv96 = trunc i32 %and95 to i8
  %tPos97 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i48 = load i32, i32* %tPos97, align 4
  %shr98 = lshr i32 %i48, 8
  store i32 %shr98, i32* %tPos97, align 4
  %rNToGo99 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i49 = load i32, i32* %rNToGo99, align 8
  %cmp100 = icmp eq i32 %i49, 0
  br i1 %cmp100, label %if.then102, label %if.end115

if.then102:                                       ; preds = %if.end87
  %rTPos103 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i50 = load i32, i32* %rTPos103, align 4
  %idxprom104 = sext i32 %i50 to i64
  %arrayidx105 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom104
  %i51 = load i32, i32* %arrayidx105, align 4
  %rNToGo106 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 %i51, i32* %rNToGo106, align 8
  %rTPos107 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i52 = load i32, i32* %rTPos107, align 4
  %inc108 = add nsw i32 %i52, 1
  store i32 %inc108, i32* %rTPos107, align 4
  %rTPos109 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i53 = load i32, i32* %rTPos109, align 4
  %cmp110 = icmp eq i32 %i53, 512
  br i1 %cmp110, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.then102
  %rTPos113 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos113, align 4
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.then102
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.end87
  %rNToGo116 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i54 = load i32, i32* %rNToGo116, align 8
  %dec117 = add nsw i32 %i54, -1
  store i32 %dec117, i32* %rNToGo116, align 8
  %rNToGo118 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i55 = load i32, i32* %rNToGo118, align 8
  %cmp119 = icmp eq i32 %i55, 1
  %i56 = zext i1 %cmp119 to i64
  %cond121 = select i1 %cmp119, i32 1, i32 0
  %conv122 = zext i8 %conv96 to i32
  %xor123 = xor i32 %conv122, %cond121
  %conv124 = trunc i32 %xor123 to i8
  %nblock_used125 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i57 = load i32, i32* %nblock_used125, align 4
  %inc126 = add nsw i32 %i57, 1
  store i32 %inc126, i32* %nblock_used125, align 4
  %nblock_used127 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i58 = load i32, i32* %nblock_used127, align 4
  %save_nblock128 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i59 = load i32, i32* %save_nblock128, align 8
  %add129 = add nsw i32 %i59, 1
  %cmp130 = icmp eq i32 %i58, %add129
  br i1 %cmp130, label %if.then132, label %if.end133

if.then132:                                       ; preds = %if.end115
  br label %while.body

if.end133:                                        ; preds = %if.end115
  %conv134 = zext i8 %conv124 to i32
  %k0135 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i60 = load i32, i32* %k0135, align 8
  %cmp136 = icmp ne i32 %conv134, %i60
  br i1 %cmp136, label %if.then138, label %if.end141

if.then138:                                       ; preds = %if.end133
  %conv139 = zext i8 %conv124 to i32
  %k0140 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %conv139, i32* %k0140, align 8
  br label %while.body

if.end141:                                        ; preds = %if.end133
  %state_out_len142 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 3, i32* %state_out_len142, align 8
  %tt143 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i61 = load i32*, i32** %tt143, align 8
  %tPos144 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i62 = load i32, i32* %tPos144, align 4
  %idxprom145 = zext i32 %i62 to i64
  %arrayidx146 = getelementptr inbounds i32, i32* %i61, i64 %idxprom145
  %i63 = load i32, i32* %arrayidx146, align 4
  %tPos147 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %i63, i32* %tPos147, align 4
  %tPos148 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i64 = load i32, i32* %tPos148, align 4
  %and149 = and i32 %i64, 255
  %conv150 = trunc i32 %and149 to i8
  %tPos151 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i65 = load i32, i32* %tPos151, align 4
  %shr152 = lshr i32 %i65, 8
  store i32 %shr152, i32* %tPos151, align 4
  %rNToGo153 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i66 = load i32, i32* %rNToGo153, align 8
  %cmp154 = icmp eq i32 %i66, 0
  br i1 %cmp154, label %if.then156, label %if.end169

if.then156:                                       ; preds = %if.end141
  %rTPos157 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i67 = load i32, i32* %rTPos157, align 4
  %idxprom158 = sext i32 %i67 to i64
  %arrayidx159 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom158
  %i68 = load i32, i32* %arrayidx159, align 4
  %rNToGo160 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 %i68, i32* %rNToGo160, align 8
  %rTPos161 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i69 = load i32, i32* %rTPos161, align 4
  %inc162 = add nsw i32 %i69, 1
  store i32 %inc162, i32* %rTPos161, align 4
  %rTPos163 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i70 = load i32, i32* %rTPos163, align 4
  %cmp164 = icmp eq i32 %i70, 512
  br i1 %cmp164, label %if.then166, label %if.end168

if.then166:                                       ; preds = %if.then156
  %rTPos167 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos167, align 4
  br label %if.end168

if.end168:                                        ; preds = %if.then166, %if.then156
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end141
  %rNToGo170 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i71 = load i32, i32* %rNToGo170, align 8
  %dec171 = add nsw i32 %i71, -1
  store i32 %dec171, i32* %rNToGo170, align 8
  %rNToGo172 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i72 = load i32, i32* %rNToGo172, align 8
  %cmp173 = icmp eq i32 %i72, 1
  %i73 = zext i1 %cmp173 to i64
  %cond175 = select i1 %cmp173, i32 1, i32 0
  %conv176 = zext i8 %conv150 to i32
  %xor177 = xor i32 %conv176, %cond175
  %conv178 = trunc i32 %xor177 to i8
  %nblock_used179 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i74 = load i32, i32* %nblock_used179, align 4
  %inc180 = add nsw i32 %i74, 1
  store i32 %inc180, i32* %nblock_used179, align 4
  %nblock_used181 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i75 = load i32, i32* %nblock_used181, align 4
  %save_nblock182 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i76 = load i32, i32* %save_nblock182, align 8
  %add183 = add nsw i32 %i76, 1
  %cmp184 = icmp eq i32 %i75, %add183
  br i1 %cmp184, label %if.then186, label %if.end187

if.then186:                                       ; preds = %if.end169
  br label %while.body

if.end187:                                        ; preds = %if.end169
  %conv188 = zext i8 %conv178 to i32
  %k0189 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i77 = load i32, i32* %k0189, align 8
  %cmp190 = icmp ne i32 %conv188, %i77
  br i1 %cmp190, label %if.then192, label %if.end195

if.then192:                                       ; preds = %if.end187
  %conv193 = zext i8 %conv178 to i32
  %k0194 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %conv193, i32* %k0194, align 8
  br label %while.body

if.end195:                                        ; preds = %if.end187
  %tt196 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i78 = load i32*, i32** %tt196, align 8
  %tPos197 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i79 = load i32, i32* %tPos197, align 4
  %idxprom198 = zext i32 %i79 to i64
  %arrayidx199 = getelementptr inbounds i32, i32* %i78, i64 %idxprom198
  %i80 = load i32, i32* %arrayidx199, align 4
  %tPos200 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %i80, i32* %tPos200, align 4
  %tPos201 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i81 = load i32, i32* %tPos201, align 4
  %and202 = and i32 %i81, 255
  %conv203 = trunc i32 %and202 to i8
  %tPos204 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i82 = load i32, i32* %tPos204, align 4
  %shr205 = lshr i32 %i82, 8
  store i32 %shr205, i32* %tPos204, align 4
  %rNToGo206 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i83 = load i32, i32* %rNToGo206, align 8
  %cmp207 = icmp eq i32 %i83, 0
  br i1 %cmp207, label %if.then209, label %if.end222

if.then209:                                       ; preds = %if.end195
  %rTPos210 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i84 = load i32, i32* %rTPos210, align 4
  %idxprom211 = sext i32 %i84 to i64
  %arrayidx212 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom211
  %i85 = load i32, i32* %arrayidx212, align 4
  %rNToGo213 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 %i85, i32* %rNToGo213, align 8
  %rTPos214 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i86 = load i32, i32* %rTPos214, align 4
  %inc215 = add nsw i32 %i86, 1
  store i32 %inc215, i32* %rTPos214, align 4
  %rTPos216 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i87 = load i32, i32* %rTPos216, align 4
  %cmp217 = icmp eq i32 %i87, 512
  br i1 %cmp217, label %if.then219, label %if.end221

if.then219:                                       ; preds = %if.then209
  %rTPos220 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos220, align 4
  br label %if.end221

if.end221:                                        ; preds = %if.then219, %if.then209
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %if.end195
  %rNToGo223 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i88 = load i32, i32* %rNToGo223, align 8
  %dec224 = add nsw i32 %i88, -1
  store i32 %dec224, i32* %rNToGo223, align 8
  %rNToGo225 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i89 = load i32, i32* %rNToGo225, align 8
  %cmp226 = icmp eq i32 %i89, 1
  %i90 = zext i1 %cmp226 to i64
  %cond228 = select i1 %cmp226, i32 1, i32 0
  %conv229 = zext i8 %conv203 to i32
  %xor230 = xor i32 %conv229, %cond228
  %conv231 = trunc i32 %xor230 to i8
  %nblock_used232 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i91 = load i32, i32* %nblock_used232, align 4
  %inc233 = add nsw i32 %i91, 1
  store i32 %inc233, i32* %nblock_used232, align 4
  %conv234 = zext i8 %conv231 to i32
  %add235 = add nsw i32 %conv234, 4
  %state_out_len236 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 %add235, i32* %state_out_len236, align 8
  %tt237 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i92 = load i32*, i32** %tt237, align 8
  %tPos238 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i93 = load i32, i32* %tPos238, align 4
  %idxprom239 = zext i32 %i93 to i64
  %arrayidx240 = getelementptr inbounds i32, i32* %i92, i64 %idxprom239
  %i94 = load i32, i32* %arrayidx240, align 4
  %tPos241 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %i94, i32* %tPos241, align 4
  %tPos242 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i95 = load i32, i32* %tPos242, align 4
  %and243 = and i32 %i95, 255
  %conv244 = trunc i32 %and243 to i8
  %conv245 = zext i8 %conv244 to i32
  %k0246 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %conv245, i32* %k0246, align 8
  %tPos247 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i96 = load i32, i32* %tPos247, align 4
  %shr248 = lshr i32 %i96, 8
  store i32 %shr248, i32* %tPos247, align 4
  %rNToGo249 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i97 = load i32, i32* %rNToGo249, align 8
  %cmp250 = icmp eq i32 %i97, 0
  br i1 %cmp250, label %if.then252, label %if.end265

if.then252:                                       ; preds = %if.end222
  %rTPos253 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i98 = load i32, i32* %rTPos253, align 4
  %idxprom254 = sext i32 %i98 to i64
  %arrayidx255 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom254
  %i99 = load i32, i32* %arrayidx255, align 4
  %rNToGo256 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 %i99, i32* %rNToGo256, align 8
  %rTPos257 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i100 = load i32, i32* %rTPos257, align 4
  %inc258 = add nsw i32 %i100, 1
  store i32 %inc258, i32* %rTPos257, align 4
  %rTPos259 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i101 = load i32, i32* %rTPos259, align 4
  %cmp260 = icmp eq i32 %i101, 512
  br i1 %cmp260, label %if.then262, label %if.end264

if.then262:                                       ; preds = %if.then252
  %rTPos263 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos263, align 4
  br label %if.end264

if.end264:                                        ; preds = %if.then262, %if.then252
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %if.end222
  %rNToGo266 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i102 = load i32, i32* %rNToGo266, align 8
  %dec267 = add nsw i32 %i102, -1
  store i32 %dec267, i32* %rNToGo266, align 8
  %rNToGo268 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i103 = load i32, i32* %rNToGo268, align 8
  %cmp269 = icmp eq i32 %i103, 1
  %i104 = zext i1 %cmp269 to i64
  %cond271 = select i1 %cmp269, i32 1, i32 0
  %k0272 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i105 = load i32, i32* %k0272, align 8
  %xor273 = xor i32 %i105, %cond271
  store i32 %xor273, i32* %k0272, align 8
  %nblock_used274 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i106 = load i32, i32* %nblock_used274, align 4
  %inc275 = add nsw i32 %i106, 1
  store i32 %inc275, i32* %nblock_used274, align 4
  br label %while.body

if.else:                                          ; preds = %entry
  %calculatedBlockCRC276 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 25
  %i107 = load i32, i32* %calculatedBlockCRC276, align 8
  %state_out_ch277 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 2
  %i108 = load i8, i8* %state_out_ch277, align 4
  %state_out_len278 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  %i109 = load i32, i32* %state_out_len278, align 8
  %nblock_used279 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i110 = load i32, i32* %nblock_used279, align 4
  %k0280 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i111 = load i32, i32* %k0280, align 8
  %tt281 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i112 = load i32*, i32** %tt281, align 8
  %tPos282 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i113 = load i32, i32* %tPos282, align 4
  %strm283 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i114 = load %struct.bz_stream*, %struct.bz_stream** %strm283, align 8
  %next_out284 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i114, i32 0, i32 4
  %i115 = load i8*, i8** %next_out284, align 8
  %strm285 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i116 = load %struct.bz_stream*, %struct.bz_stream** %strm285, align 8
  %avail_out286 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i116, i32 0, i32 5
  %i117 = load i32, i32* %avail_out286, align 8
  %save_nblock287 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i118 = load i32, i32* %save_nblock287, align 8
  %add288 = add nsw i32 %i118, 1
  br label %while.body289

while.body289:                                    ; preds = %if.end384, %if.then382, %if.then377, %if.then366, %if.then361, %if.else
  %c_tPos.0 = phi i32 [ %i113, %if.else ], [ %shr357, %if.then361 ], [ %shr357, %if.then366 ], [ %shr373, %if.then377 ], [ %shr373, %if.then382 ], [ %shr398, %if.end384 ]
  %cs_next_out.0 = phi i8* [ %i115, %if.else ], [ %cs_next_out.3, %if.then361 ], [ %cs_next_out.3, %if.then366 ], [ %cs_next_out.3, %if.then377 ], [ %cs_next_out.3, %if.then382 ], [ %cs_next_out.3, %if.end384 ]
  %c_k0.0 = phi i32 [ %i111, %if.else ], [ %c_k0.2, %if.then361 ], [ %conv367, %if.then366 ], [ %c_k0.2, %if.then377 ], [ %conv383, %if.then382 ], [ %conv397, %if.end384 ]
  %c_nblock_used.0 = phi i32 [ %i110, %if.else ], [ %inc358, %if.then361 ], [ %inc358, %if.then366 ], [ %inc374, %if.then377 ], [ %inc374, %if.then382 ], [ %inc399, %if.end384 ]
  %c_state_out_len.0 = phi i32 [ %i109, %if.else ], [ 2, %if.then361 ], [ 2, %if.then366 ], [ 3, %if.then377 ], [ 3, %if.then382 ], [ %add392, %if.end384 ]
  %c_state_out_ch.0 = phi i8 [ %i108, %if.else ], [ %conv336, %if.then361 ], [ %conv336, %if.then366 ], [ %conv336, %if.then377 ], [ %conv336, %if.then382 ], [ %conv336, %if.end384 ]
  %c_calculatedBlockCRC.0 = phi i32 [ %i107, %if.else ], [ %c_calculatedBlockCRC.3, %if.then361 ], [ %c_calculatedBlockCRC.3, %if.then366 ], [ %c_calculatedBlockCRC.3, %if.then377 ], [ %c_calculatedBlockCRC.3, %if.then382 ], [ %c_calculatedBlockCRC.3, %if.end384 ]
  %cs_avail_out.0 = phi i32 [ %i117, %if.else ], [ %cs_avail_out.3, %if.then361 ], [ %cs_avail_out.3, %if.then366 ], [ %cs_avail_out.3, %if.then377 ], [ %cs_avail_out.3, %if.then382 ], [ %cs_avail_out.3, %if.end384 ]
  %cmp290 = icmp sgt i32 %c_state_out_len.0, 0
  br i1 %cmp290, label %if.then292, label %if.end327

if.then292:                                       ; preds = %while.body289
  br label %while.body294

while.body294:                                    ; preds = %if.end302, %if.then292
  %cs_next_out.1 = phi i8* [ %cs_next_out.0, %if.then292 ], [ %incdec.ptr311, %if.end302 ]
  %c_state_out_len.1 = phi i32 [ %c_state_out_len.0, %if.then292 ], [ %dec310, %if.end302 ]
  %c_calculatedBlockCRC.1 = phi i32 [ %c_calculatedBlockCRC.0, %if.then292 ], [ %xor309, %if.end302 ]
  %cs_avail_out.1 = phi i32 [ %cs_avail_out.0, %if.then292 ], [ %dec312, %if.end302 ]
  %cmp295 = icmp eq i32 %cs_avail_out.1, 0
  br i1 %cmp295, label %if.then297, label %if.end298

if.then297:                                       ; preds = %while.body294
  br label %return_notr

if.end298:                                        ; preds = %while.body294
  %cmp299 = icmp eq i32 %c_state_out_len.1, 1
  br i1 %cmp299, label %if.then301, label %if.end302

if.then301:                                       ; preds = %if.end298
  br label %while.end313

if.end302:                                        ; preds = %if.end298
  store i8 %c_state_out_ch.0, i8* %cs_next_out.1, align 1
  %shl303 = shl i32 %c_calculatedBlockCRC.1, 8
  %shr304 = lshr i32 %c_calculatedBlockCRC.1, 24
  %conv305 = zext i8 %c_state_out_ch.0 to i32
  %xor306 = xor i32 %shr304, %conv305
  %idxprom307 = zext i32 %xor306 to i64
  %arrayidx308 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom307
  %i119 = load i32, i32* %arrayidx308, align 4
  %xor309 = xor i32 %shl303, %i119
  %dec310 = add nsw i32 %c_state_out_len.1, -1
  %incdec.ptr311 = getelementptr inbounds i8, i8* %cs_next_out.1, i32 1
  %dec312 = add i32 %cs_avail_out.1, -1
  br label %while.body294

while.end313:                                     ; preds = %if.then301
  br label %s_state_out_len_eq_one

s_state_out_len_eq_one:                           ; preds = %if.then351, %if.then346, %while.end313
  %c_tPos.1 = phi i32 [ %c_tPos.0, %while.end313 ], [ %shr341, %if.then346 ], [ %shr341, %if.then351 ]
  %cs_next_out.2 = phi i8* [ %cs_next_out.1, %while.end313 ], [ %cs_next_out.3, %if.then346 ], [ %cs_next_out.3, %if.then351 ]
  %c_k0.1 = phi i32 [ %c_k0.0, %while.end313 ], [ %conv347, %if.then346 ], [ %c_k0.2, %if.then351 ]
  %c_nblock_used.1 = phi i32 [ %c_nblock_used.0, %while.end313 ], [ %inc342, %if.then346 ], [ %inc342, %if.then351 ]
  %c_state_out_ch.1 = phi i8 [ %c_state_out_ch.0, %while.end313 ], [ %conv336, %if.then346 ], [ %conv336, %if.then351 ]
  %c_calculatedBlockCRC.2 = phi i32 [ %c_calculatedBlockCRC.1, %while.end313 ], [ %c_calculatedBlockCRC.3, %if.then346 ], [ %c_calculatedBlockCRC.3, %if.then351 ]
  %cs_avail_out.2 = phi i32 [ %cs_avail_out.1, %while.end313 ], [ %cs_avail_out.3, %if.then346 ], [ %cs_avail_out.3, %if.then351 ]
  %cmp314 = icmp eq i32 %cs_avail_out.2, 0
  br i1 %cmp314, label %if.then316, label %if.end317

if.then316:                                       ; preds = %s_state_out_len_eq_one
  br label %return_notr

if.end317:                                        ; preds = %s_state_out_len_eq_one
  store i8 %c_state_out_ch.1, i8* %cs_next_out.2, align 1
  %shl318 = shl i32 %c_calculatedBlockCRC.2, 8
  %shr319 = lshr i32 %c_calculatedBlockCRC.2, 24
  %conv320 = zext i8 %c_state_out_ch.1 to i32
  %xor321 = xor i32 %shr319, %conv320
  %idxprom322 = zext i32 %xor321 to i64
  %arrayidx323 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom322
  %i120 = load i32, i32* %arrayidx323, align 4
  %xor324 = xor i32 %shl318, %i120
  %incdec.ptr325 = getelementptr inbounds i8, i8* %cs_next_out.2, i32 1
  %dec326 = add i32 %cs_avail_out.2, -1
  br label %if.end327

if.end327:                                        ; preds = %if.end317, %while.body289
  %c_tPos.2 = phi i32 [ %c_tPos.1, %if.end317 ], [ %c_tPos.0, %while.body289 ]
  %cs_next_out.3 = phi i8* [ %incdec.ptr325, %if.end317 ], [ %cs_next_out.0, %while.body289 ]
  %c_k0.2 = phi i32 [ %c_k0.1, %if.end317 ], [ %c_k0.0, %while.body289 ]
  %c_nblock_used.2 = phi i32 [ %c_nblock_used.1, %if.end317 ], [ %c_nblock_used.0, %while.body289 ]
  %c_state_out_ch.2 = phi i8 [ %c_state_out_ch.1, %if.end317 ], [ %c_state_out_ch.0, %while.body289 ]
  %c_calculatedBlockCRC.3 = phi i32 [ %xor324, %if.end317 ], [ %c_calculatedBlockCRC.0, %while.body289 ]
  %cs_avail_out.3 = phi i32 [ %dec326, %if.end317 ], [ %cs_avail_out.0, %while.body289 ]
  %cmp328 = icmp sgt i32 %c_nblock_used.2, %add288
  br i1 %cmp328, label %if.then330, label %if.end331

if.then330:                                       ; preds = %if.end327
  br label %return

if.end331:                                        ; preds = %if.end327
  %cmp332 = icmp eq i32 %c_nblock_used.2, %add288
  br i1 %cmp332, label %if.then334, label %if.end335

if.then334:                                       ; preds = %if.end331
  br label %return_notr

if.end335:                                        ; preds = %if.end331
  %conv336 = trunc i32 %c_k0.2 to i8
  %idxprom337 = zext i32 %c_tPos.2 to i64
  %arrayidx338 = getelementptr inbounds i32, i32* %i112, i64 %idxprom337
  %i121 = load i32, i32* %arrayidx338, align 4
  %and339 = and i32 %i121, 255
  %conv340 = trunc i32 %and339 to i8
  %shr341 = lshr i32 %i121, 8
  %inc342 = add nsw i32 %c_nblock_used.2, 1
  %conv343 = zext i8 %conv340 to i32
  %cmp344 = icmp ne i32 %conv343, %c_k0.2
  br i1 %cmp344, label %if.then346, label %if.end348

if.then346:                                       ; preds = %if.end335
  %conv347 = zext i8 %conv340 to i32
  br label %s_state_out_len_eq_one

if.end348:                                        ; preds = %if.end335
  %cmp349 = icmp eq i32 %inc342, %add288
  br i1 %cmp349, label %if.then351, label %if.end352

if.then351:                                       ; preds = %if.end348
  br label %s_state_out_len_eq_one

if.end352:                                        ; preds = %if.end348
  %idxprom353 = zext i32 %shr341 to i64
  %arrayidx354 = getelementptr inbounds i32, i32* %i112, i64 %idxprom353
  %i122 = load i32, i32* %arrayidx354, align 4
  %and355 = and i32 %i122, 255
  %conv356 = trunc i32 %and355 to i8
  %shr357 = lshr i32 %i122, 8
  %inc358 = add nsw i32 %inc342, 1
  %cmp359 = icmp eq i32 %inc358, %add288
  br i1 %cmp359, label %if.then361, label %if.end362

if.then361:                                       ; preds = %if.end352
  br label %while.body289

if.end362:                                        ; preds = %if.end352
  %conv363 = zext i8 %conv356 to i32
  %cmp364 = icmp ne i32 %conv363, %c_k0.2
  br i1 %cmp364, label %if.then366, label %if.end368

if.then366:                                       ; preds = %if.end362
  %conv367 = zext i8 %conv356 to i32
  br label %while.body289

if.end368:                                        ; preds = %if.end362
  %idxprom369 = zext i32 %shr357 to i64
  %arrayidx370 = getelementptr inbounds i32, i32* %i112, i64 %idxprom369
  %i123 = load i32, i32* %arrayidx370, align 4
  %and371 = and i32 %i123, 255
  %conv372 = trunc i32 %and371 to i8
  %shr373 = lshr i32 %i123, 8
  %inc374 = add nsw i32 %inc358, 1
  %cmp375 = icmp eq i32 %inc374, %add288
  br i1 %cmp375, label %if.then377, label %if.end378

if.then377:                                       ; preds = %if.end368
  br label %while.body289

if.end378:                                        ; preds = %if.end368
  %conv379 = zext i8 %conv372 to i32
  %cmp380 = icmp ne i32 %conv379, %c_k0.2
  br i1 %cmp380, label %if.then382, label %if.end384

if.then382:                                       ; preds = %if.end378
  %conv383 = zext i8 %conv372 to i32
  br label %while.body289

if.end384:                                        ; preds = %if.end378
  %idxprom385 = zext i32 %shr373 to i64
  %arrayidx386 = getelementptr inbounds i32, i32* %i112, i64 %idxprom385
  %i124 = load i32, i32* %arrayidx386, align 4
  %and387 = and i32 %i124, 255
  %conv388 = trunc i32 %and387 to i8
  %shr389 = lshr i32 %i124, 8
  %inc390 = add nsw i32 %inc374, 1
  %conv391 = zext i8 %conv388 to i32
  %add392 = add nsw i32 %conv391, 4
  %idxprom393 = zext i32 %shr389 to i64
  %arrayidx394 = getelementptr inbounds i32, i32* %i112, i64 %idxprom393
  %i125 = load i32, i32* %arrayidx394, align 4
  %and395 = and i32 %i125, 255
  %conv396 = trunc i32 %and395 to i8
  %conv397 = zext i8 %conv396 to i32
  %shr398 = lshr i32 %i125, 8
  %inc399 = add nsw i32 %inc390, 1
  br label %while.body289

return_notr:                                      ; preds = %if.then334, %if.then316, %if.then297
  %c_tPos.3 = phi i32 [ %c_tPos.0, %if.then297 ], [ %c_tPos.1, %if.then316 ], [ %c_tPos.2, %if.then334 ]
  %cs_next_out.4 = phi i8* [ %cs_next_out.1, %if.then297 ], [ %cs_next_out.2, %if.then316 ], [ %cs_next_out.3, %if.then334 ]
  %c_k0.3 = phi i32 [ %c_k0.0, %if.then297 ], [ %c_k0.1, %if.then316 ], [ %c_k0.2, %if.then334 ]
  %c_nblock_used.3 = phi i32 [ %c_nblock_used.0, %if.then297 ], [ %c_nblock_used.1, %if.then316 ], [ %c_nblock_used.2, %if.then334 ]
  %c_state_out_len.2 = phi i32 [ %c_state_out_len.1, %if.then297 ], [ 1, %if.then316 ], [ 0, %if.then334 ]
  %c_state_out_ch.3 = phi i8 [ %c_state_out_ch.0, %if.then297 ], [ %c_state_out_ch.1, %if.then316 ], [ %c_state_out_ch.2, %if.then334 ]
  %c_calculatedBlockCRC.4 = phi i32 [ %c_calculatedBlockCRC.1, %if.then297 ], [ %c_calculatedBlockCRC.2, %if.then316 ], [ %c_calculatedBlockCRC.3, %if.then334 ]
  %cs_avail_out.4 = phi i32 [ %cs_avail_out.1, %if.then297 ], [ %cs_avail_out.2, %if.then316 ], [ %cs_avail_out.3, %if.then334 ]
  %strm400 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i126 = load %struct.bz_stream*, %struct.bz_stream** %strm400, align 8
  %total_out_lo32401 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i126, i32 0, i32 6
  %i127 = load i32, i32* %total_out_lo32401, align 4
  %sub = sub i32 %i117, %cs_avail_out.4
  %strm402 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i128 = load %struct.bz_stream*, %struct.bz_stream** %strm402, align 8
  %total_out_lo32403 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i128, i32 0, i32 6
  %i129 = load i32, i32* %total_out_lo32403, align 4
  %add404 = add i32 %i129, %sub
  store i32 %add404, i32* %total_out_lo32403, align 4
  %strm405 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i130 = load %struct.bz_stream*, %struct.bz_stream** %strm405, align 8
  %total_out_lo32406 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i130, i32 0, i32 6
  %i131 = load i32, i32* %total_out_lo32406, align 4
  %cmp407 = icmp ult i32 %i131, %i127
  br i1 %cmp407, label %if.then409, label %if.end413

if.then409:                                       ; preds = %return_notr
  %strm410 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i132 = load %struct.bz_stream*, %struct.bz_stream** %strm410, align 8
  %total_out_hi32411 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i132, i32 0, i32 7
  %i133 = load i32, i32* %total_out_hi32411, align 8
  %inc412 = add i32 %i133, 1
  store i32 %inc412, i32* %total_out_hi32411, align 8
  br label %if.end413

if.end413:                                        ; preds = %if.then409, %return_notr
  %calculatedBlockCRC414 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 25
  store i32 %c_calculatedBlockCRC.4, i32* %calculatedBlockCRC414, align 8
  %state_out_ch415 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 2
  store i8 %c_state_out_ch.3, i8* %state_out_ch415, align 4
  %state_out_len416 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 %c_state_out_len.2, i32* %state_out_len416, align 8
  %nblock_used417 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  store i32 %c_nblock_used.3, i32* %nblock_used417, align 4
  %k0418 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %c_k0.3, i32* %k0418, align 8
  %tt419 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  store i32* %i112, i32** %tt419, align 8
  %tPos420 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %c_tPos.3, i32* %tPos420, align 4
  %strm421 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i134 = load %struct.bz_stream*, %struct.bz_stream** %strm421, align 8
  %next_out422 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i134, i32 0, i32 4
  store i8* %cs_next_out.4, i8** %next_out422, align 8
  %strm423 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i135 = load %struct.bz_stream*, %struct.bz_stream** %strm423, align 8
  %avail_out424 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i135, i32 0, i32 5
  store i32 %cs_avail_out.4, i32* %avail_out424, align 8
  br label %if.end425

if.end425:                                        ; preds = %if.end413
  br label %return

return:                                           ; preds = %if.end425, %if.then330, %if.then36, %if.then29, %if.then3
  %retval.0 = phi i8 [ 0, %if.then3 ], [ 0, %if.then29 ], [ 1, %if.then36 ], [ 0, %if.end425 ], [ 1, %if.then330 ]
  ret i8 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm) #0 {
entry:
  %cmp = icmp eq %struct.bz_stream* %strm, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 8
  %i = load i8*, i8** %state, align 8
  %i1 = bitcast i8* %i to %struct.DState*
  %cmp1 = icmp eq %struct.DState* %i1, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  br label %return

if.end3:                                          ; preds = %if.end
  %strm4 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 0
  %i2 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8
  %cmp5 = icmp ne %struct.bz_stream* %i2, %strm
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  br label %return

if.end7:                                          ; preds = %if.end3
  %tt = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 20
  %i3 = load i32*, i32** %tt, align 8
  %cmp8 = icmp ne i32* %i3, null
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end7
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i4 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i5 = load i8*, i8** %opaque, align 8
  %tt10 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 20
  %i6 = load i32*, i32** %tt10, align 8
  %i7 = bitcast i32* %i6 to i8*
  call void %i4(i8* %i5, i8* %i7)
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end7
  %ll16 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 21
  %i8 = load i16*, i16** %ll16, align 8
  %cmp12 = icmp ne i16* %i8, null
  br i1 %cmp12, label %if.then13, label %if.end17

if.then13:                                        ; preds = %if.end11
  %bzfree14 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i9 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree14, align 8
  %opaque15 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i10 = load i8*, i8** %opaque15, align 8
  %ll1616 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 21
  %i11 = load i16*, i16** %ll1616, align 8
  %i12 = bitcast i16* %i11 to i8*
  call void %i9(i8* %i10, i8* %i12)
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.end11
  %ll4 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 22
  %i13 = load i8*, i8** %ll4, align 8
  %cmp18 = icmp ne i8* %i13, null
  br i1 %cmp18, label %if.then19, label %if.end23

if.then19:                                        ; preds = %if.end17
  %bzfree20 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i14 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree20, align 8
  %opaque21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i15 = load i8*, i8** %opaque21, align 8
  %ll422 = getelementptr inbounds %struct.DState, %struct.DState* %i1, i32 0, i32 22
  %i16 = load i8*, i8** %ll422, align 8
  call void %i14(i8* %i15, i8* %i16)
  br label %if.end23

if.end23:                                         ; preds = %if.then19, %if.end17
  %bzfree24 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  %i17 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree24, align 8
  %opaque25 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  %i18 = load i8*, i8** %opaque25, align 8
  %state26 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 8
  %i19 = load i8*, i8** %state26, align 8
  call void %i17(i8* %i18, i8* %i19)
  %state27 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 8
  store i8* null, i8** %state27, align 8
  br label %return

return:                                           ; preds = %if.end23, %if.then6, %if.then2, %if.then
  %retval.0 = phi i32 [ -2, %if.then ], [ -2, %if.then2 ], [ -2, %if.then6 ], [ 0, %if.end23 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzWriteOpen(i32* %bzerror, i32 %f, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) #0 {
entry:
  %cmp = icmp ne i32* %bzerror, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %bzerror, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp ne %struct.bzFile* null, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 0, i32* %lastErr, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %cmp4 = icmp eq i32 %f, 0
  br i1 %cmp4, label %if.then16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %cmp5 = icmp slt i32 %blockSize100k, 1
  br i1 %cmp5, label %if.then16, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp sgt i32 %blockSize100k, 9
  br i1 %cmp7, label %if.then16, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %cmp9 = icmp slt i32 %workFactor, 0
  br i1 %cmp9, label %if.then16, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %cmp11 = icmp sgt i32 %workFactor, 250
  br i1 %cmp11, label %if.then16, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %cmp13 = icmp slt i32 %verbosity, 0
  br i1 %cmp13, label %if.then16, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false12
  %cmp15 = icmp sgt i32 %verbosity, 4
  br i1 %cmp15, label %if.then16, label %if.end24

if.then16:                                        ; preds = %lor.lhs.false14, %lor.lhs.false12, %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false, %if.end3
  %cmp17 = icmp ne i32* %bzerror, null
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.then16
  store i32 -2, i32* %bzerror, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.then16
  %cmp20 = icmp ne %struct.bzFile* null, null
  br i1 %cmp20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.end19
  %lastErr22 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 -2, i32* %lastErr22, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.end19
  br label %return

if.end24:                                         ; preds = %lor.lhs.false14
  %call = call noalias i8* @malloc(i64 5104) #8
  %i = bitcast i8* %call to %struct.bzFile*
  %cmp25 = icmp eq %struct.bzFile* %i, null
  br i1 %cmp25, label %if.then26, label %if.end34

if.then26:                                        ; preds = %if.end24
  %cmp27 = icmp ne i32* %bzerror, null
  br i1 %cmp27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.then26
  store i32 -3, i32* %bzerror, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then28, %if.then26
  %cmp30 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp30, label %if.then31, label %if.end33

if.then31:                                        ; preds = %if.end29
  %lastErr32 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -3, i32* %lastErr32, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %if.end29
  br label %return

if.end34:                                         ; preds = %if.end24
  %cmp35 = icmp ne i32* %bzerror, null
  br i1 %cmp35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end34
  store i32 0, i32* %bzerror, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %if.end34
  %cmp38 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp38, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.end37
  %lastErr40 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr40, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.end37
  %initialisedOk = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 6
  store i8 0, i8* %initialisedOk, align 4
  %bufN = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 2
  store i32 0, i32* %bufN, align 4
  %handle = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 0
  store i32 %f, i32* %handle, align 8
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 3
  store i8 1, i8* %writing, align 8
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %bzalloc, align 8
  %strm42 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm42, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %bzfree, align 8
  %strm43 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm43, i32 0, i32 11
  store i8* null, i8** %opaque, align 8
  %cmp44 = icmp eq i32 %workFactor, 0
  br i1 %cmp44, label %if.then45, label %if.end46

if.then45:                                        ; preds = %if.end41
  br label %if.end46

if.end46:                                         ; preds = %if.then45, %if.end41
  %workFactor.addr.0 = phi i32 [ 30, %if.then45 ], [ %workFactor, %if.end41 ]
  %strm47 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %call48 = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %strm47, i32 %blockSize100k, i32 %verbosity, i32 %workFactor.addr.0)
  %cmp49 = icmp ne i32 %call48, 0
  br i1 %cmp49, label %if.then50, label %if.end58

if.then50:                                        ; preds = %if.end46
  %cmp51 = icmp ne i32* %bzerror, null
  br i1 %cmp51, label %if.then52, label %if.end53

if.then52:                                        ; preds = %if.then50
  store i32 %call48, i32* %bzerror, align 4
  br label %if.end53

if.end53:                                         ; preds = %if.then52, %if.then50
  %cmp54 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp54, label %if.then55, label %if.end57

if.then55:                                        ; preds = %if.end53
  %lastErr56 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 %call48, i32* %lastErr56, align 8
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %if.end53
  %i1 = bitcast %struct.bzFile* %i to i8*
  call void @free(i8* %i1) #8
  br label %return

if.end58:                                         ; preds = %if.end46
  %strm59 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm59, i32 0, i32 1
  store i32 0, i32* %avail_in, align 8
  %initialisedOk60 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 6
  store i8 1, i8* %initialisedOk60, align 4
  %i2 = bitcast %struct.bzFile* %i to i8*
  br label %return

return:                                           ; preds = %if.end58, %if.end57, %if.end33, %if.end23
  %retval.0 = phi i8* [ null, %if.end23 ], [ null, %if.end33 ], [ null, %if.end57 ], [ %i2, %if.end58 ]
  ret i8* %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzWrite(i32* %bzerror, i8* %b, i8* %buf, i32 %len) #0 {
entry:
  %i = bitcast i8* %b to %struct.bzFile*
  %cmp = icmp ne i32* %bzerror, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %bzerror, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %cmp4 = icmp eq %struct.bzFile* %i, null
  br i1 %cmp4, label %if.then8, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %cmp5 = icmp eq i8* %buf, null
  br i1 %cmp5, label %if.then8, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp slt i32 %len, 0
  br i1 %cmp7, label %if.then8, label %if.end16

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false, %if.end3
  %cmp9 = icmp ne i32* %bzerror, null
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.then8
  store i32 -2, i32* %bzerror, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.then8
  %cmp12 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.end11
  %lastErr14 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -2, i32* %lastErr14, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.end11
  br label %return

if.end16:                                         ; preds = %lor.lhs.false6
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 3
  %i1 = load i8, i8* %writing, align 8
  %tobool = icmp ne i8 %i1, 0
  br i1 %tobool, label %if.end25, label %if.then17

if.then17:                                        ; preds = %if.end16
  %cmp18 = icmp ne i32* %bzerror, null
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.then17
  store i32 -1, i32* %bzerror, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.then17
  %cmp21 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp21, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.end20
  %lastErr23 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -1, i32* %lastErr23, align 8
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.end20
  br label %return

if.end25:                                         ; preds = %if.end16
  %cmp26 = icmp eq i32 %len, 0
  br i1 %cmp26, label %if.then27, label %if.end35

if.then27:                                        ; preds = %if.end25
  %cmp28 = icmp ne i32* %bzerror, null
  br i1 %cmp28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.then27
  store i32 0, i32* %bzerror, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %if.then27
  %cmp31 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end30
  %lastErr33 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr33, align 8
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end30
  br label %return

if.end35:                                         ; preds = %if.end25
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 1
  store i32 %len, i32* %avail_in, align 8
  %strm36 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm36, i32 0, i32 0
  store i8* %buf, i8** %next_in, align 8
  br label %while.body

while.body:                                       ; preds = %if.end82, %if.end35
  %strm37 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm37, i32 0, i32 5
  store i32 5000, i32* %avail_out, align 8
  %buf38 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 1
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf38, i64 0, i64 0
  %strm39 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm39, i32 0, i32 4
  store i8* %arraydecay, i8** %next_out, align 8
  %strm40 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %call = call i32 @BZ2_bzCompress(%struct.bz_stream* %strm40, i32 0)
  %cmp41 = icmp ne i32 %call, 1
  br i1 %cmp41, label %if.then42, label %if.end50

if.then42:                                        ; preds = %while.body
  %cmp43 = icmp ne i32* %bzerror, null
  br i1 %cmp43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %if.then42
  store i32 %call, i32* %bzerror, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %if.then42
  %cmp46 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp46, label %if.then47, label %if.end49

if.then47:                                        ; preds = %if.end45
  %lastErr48 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 %call, i32* %lastErr48, align 8
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %if.end45
  br label %return

if.end50:                                         ; preds = %while.body
  %strm51 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_out52 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm51, i32 0, i32 5
  %i2 = load i32, i32* %avail_out52, align 8
  %cmp53 = icmp ult i32 %i2, 5000
  br i1 %cmp53, label %if.then54, label %if.end70

if.then54:                                        ; preds = %if.end50
  %strm55 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_out56 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm55, i32 0, i32 5
  %i3 = load i32, i32* %avail_out56, align 8
  %sub = sub i32 5000, %i3
  %buf57 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 1
  %arraydecay58 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf57, i64 0, i64 0
  %handle = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 0
  %i4 = load i32, i32* %handle, align 8
  %call59 = call i32 @spec_fwrite(i8* %arraydecay58, i32 1, i32 %sub, i32 %i4)
  %cmp60 = icmp ne i32 %sub, %call59
  br i1 %cmp60, label %if.then61, label %if.end69

if.then61:                                        ; preds = %if.then54
  %cmp62 = icmp ne i32* %bzerror, null
  br i1 %cmp62, label %if.then63, label %if.end64

if.then63:                                        ; preds = %if.then61
  store i32 -6, i32* %bzerror, align 4
  br label %if.end64

if.end64:                                         ; preds = %if.then63, %if.then61
  %cmp65 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp65, label %if.then66, label %if.end68

if.then66:                                        ; preds = %if.end64
  %lastErr67 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -6, i32* %lastErr67, align 8
  br label %if.end68

if.end68:                                         ; preds = %if.then66, %if.end64
  br label %return

if.end69:                                         ; preds = %if.then54
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end50
  %strm71 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_in72 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm71, i32 0, i32 1
  %i5 = load i32, i32* %avail_in72, align 8
  %cmp73 = icmp eq i32 %i5, 0
  br i1 %cmp73, label %if.then74, label %if.end82

if.then74:                                        ; preds = %if.end70
  %cmp75 = icmp ne i32* %bzerror, null
  br i1 %cmp75, label %if.then76, label %if.end77

if.then76:                                        ; preds = %if.then74
  store i32 0, i32* %bzerror, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.then76, %if.then74
  %cmp78 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp78, label %if.then79, label %if.end81

if.then79:                                        ; preds = %if.end77
  %lastErr80 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr80, align 8
  br label %if.end81

if.end81:                                         ; preds = %if.then79, %if.end77
  br label %return

if.end82:                                         ; preds = %if.end70
  br label %while.body

return:                                           ; preds = %if.end81, %if.end68, %if.end49, %if.end34, %if.end24, %if.end15
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzWriteClose(i32* %bzerror, i8* %b, i32 %abandon, i32* %nbytes_in, i32* %nbytes_out) #0 {
entry:
  call void @BZ2_bzWriteClose64(i32* %bzerror, i8* %b, i32 %abandon, i32* %nbytes_in, i32* null, i32* %nbytes_out, i32* null)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzWriteClose64(i32* %bzerror, i8* %b, i32 %abandon, i32* %nbytes_in_lo32, i32* %nbytes_in_hi32, i32* %nbytes_out_lo32, i32* %nbytes_out_hi32) #0 {
entry:
  %i = bitcast i8* %b to %struct.bzFile*
  %cmp = icmp eq %struct.bzFile* %i, null
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %cmp1 = icmp ne i32* %bzerror, null
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  store i32 0, i32* %bzerror, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %cmp3 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  br label %return

if.end6:                                          ; preds = %entry
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 3
  %i1 = load i8, i8* %writing, align 8
  %tobool = icmp ne i8 %i1, 0
  br i1 %tobool, label %if.end15, label %if.then7

if.then7:                                         ; preds = %if.end6
  %cmp8 = icmp ne i32* %bzerror, null
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.then7
  store i32 -1, i32* %bzerror, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.then7
  %cmp11 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end10
  %lastErr13 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -1, i32* %lastErr13, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end10
  br label %return

if.end15:                                         ; preds = %if.end6
  %cmp16 = icmp ne i32* %nbytes_in_lo32, null
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end15
  store i32 0, i32* %nbytes_in_lo32, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end15
  %cmp19 = icmp ne i32* %nbytes_in_hi32, null
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end18
  store i32 0, i32* %nbytes_in_hi32, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %if.end18
  %cmp22 = icmp ne i32* %nbytes_out_lo32, null
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end21
  store i32 0, i32* %nbytes_out_lo32, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end21
  %cmp25 = icmp ne i32* %nbytes_out_hi32, null
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end24
  store i32 0, i32* %nbytes_out_hi32, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.end24
  %tobool28 = icmp ne i32 %abandon, 0
  br i1 %tobool28, label %if.end69, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end27
  %lastErr29 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  %i2 = load i32, i32* %lastErr29, align 8
  %cmp30 = icmp eq i32 %i2, 0
  br i1 %cmp30, label %if.then31, label %if.end69

if.then31:                                        ; preds = %land.lhs.true
  br label %while.body

while.body:                                       ; preds = %if.end68, %if.then31
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  store i32 5000, i32* %avail_out, align 8
  %buf = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 1
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 0
  %strm32 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm32, i32 0, i32 4
  store i8* %arraydecay, i8** %next_out, align 8
  %strm33 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %call = call i32 @BZ2_bzCompress(%struct.bz_stream* %strm33, i32 2)
  %cmp34 = icmp ne i32 %call, 3
  br i1 %cmp34, label %land.lhs.true35, label %if.end45

land.lhs.true35:                                  ; preds = %while.body
  %cmp36 = icmp ne i32 %call, 4
  br i1 %cmp36, label %if.then37, label %if.end45

if.then37:                                        ; preds = %land.lhs.true35
  %cmp38 = icmp ne i32* %bzerror, null
  br i1 %cmp38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.then37
  store i32 %call, i32* %bzerror, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.then37
  %cmp41 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp41, label %if.then42, label %if.end44

if.then42:                                        ; preds = %if.end40
  %lastErr43 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 %call, i32* %lastErr43, align 8
  br label %if.end44

if.end44:                                         ; preds = %if.then42, %if.end40
  br label %return

if.end45:                                         ; preds = %land.lhs.true35, %while.body
  %strm46 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_out47 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm46, i32 0, i32 5
  %i3 = load i32, i32* %avail_out47, align 8
  %cmp48 = icmp ult i32 %i3, 5000
  br i1 %cmp48, label %if.then49, label %if.end65

if.then49:                                        ; preds = %if.end45
  %strm50 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_out51 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm50, i32 0, i32 5
  %i4 = load i32, i32* %avail_out51, align 8
  %sub = sub i32 5000, %i4
  %buf52 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 1
  %arraydecay53 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf52, i64 0, i64 0
  %handle = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 0
  %i5 = load i32, i32* %handle, align 8
  %call54 = call i32 @spec_fwrite(i8* %arraydecay53, i32 1, i32 %sub, i32 %i5)
  %cmp55 = icmp ne i32 %sub, %call54
  br i1 %cmp55, label %if.then56, label %if.end64

if.then56:                                        ; preds = %if.then49
  %cmp57 = icmp ne i32* %bzerror, null
  br i1 %cmp57, label %if.then58, label %if.end59

if.then58:                                        ; preds = %if.then56
  store i32 -6, i32* %bzerror, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then58, %if.then56
  %cmp60 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp60, label %if.then61, label %if.end63

if.then61:                                        ; preds = %if.end59
  %lastErr62 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -6, i32* %lastErr62, align 8
  br label %if.end63

if.end63:                                         ; preds = %if.then61, %if.end59
  br label %return

if.end64:                                         ; preds = %if.then49
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end45
  %cmp66 = icmp eq i32 %call, 4
  br i1 %cmp66, label %if.then67, label %if.end68

if.then67:                                        ; preds = %if.end65
  br label %while.end

if.end68:                                         ; preds = %if.end65
  br label %while.body

while.end:                                        ; preds = %if.then67
  br label %if.end69

if.end69:                                         ; preds = %while.end, %land.lhs.true, %if.end27
  %tobool70 = icmp ne i32 %abandon, 0
  br i1 %tobool70, label %if.end72, label %if.then71

if.then71:                                        ; preds = %if.end69
  br label %if.end72

if.end72:                                         ; preds = %if.then71, %if.end69
  %cmp73 = icmp ne i32* %nbytes_in_lo32, null
  br i1 %cmp73, label %if.then74, label %if.end76

if.then74:                                        ; preds = %if.end72
  %strm75 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm75, i32 0, i32 2
  %i6 = load i32, i32* %total_in_lo32, align 4
  store i32 %i6, i32* %nbytes_in_lo32, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.then74, %if.end72
  %cmp77 = icmp ne i32* %nbytes_in_hi32, null
  br i1 %cmp77, label %if.then78, label %if.end80

if.then78:                                        ; preds = %if.end76
  %strm79 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm79, i32 0, i32 3
  %i7 = load i32, i32* %total_in_hi32, align 8
  store i32 %i7, i32* %nbytes_in_hi32, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %if.end76
  %cmp81 = icmp ne i32* %nbytes_out_lo32, null
  br i1 %cmp81, label %if.then82, label %if.end84

if.then82:                                        ; preds = %if.end80
  %strm83 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm83, i32 0, i32 6
  %i8 = load i32, i32* %total_out_lo32, align 4
  store i32 %i8, i32* %nbytes_out_lo32, align 4
  br label %if.end84

if.end84:                                         ; preds = %if.then82, %if.end80
  %cmp85 = icmp ne i32* %nbytes_out_hi32, null
  br i1 %cmp85, label %if.then86, label %if.end88

if.then86:                                        ; preds = %if.end84
  %strm87 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm87, i32 0, i32 7
  %i9 = load i32, i32* %total_out_hi32, align 8
  store i32 %i9, i32* %nbytes_out_hi32, align 4
  br label %if.end88

if.end88:                                         ; preds = %if.then86, %if.end84
  %cmp89 = icmp ne i32* %bzerror, null
  br i1 %cmp89, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end88
  store i32 0, i32* %bzerror, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end88
  %cmp92 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp92, label %if.then93, label %if.end95

if.then93:                                        ; preds = %if.end91
  %lastErr94 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr94, align 8
  br label %if.end95

if.end95:                                         ; preds = %if.then93, %if.end91
  %strm96 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %call97 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm96)
  %i10 = bitcast %struct.bzFile* %i to i8*
  call void @free(i8* %i10) #8
  br label %return

return:                                           ; preds = %if.end95, %if.end63, %if.end44, %if.end14, %if.end5
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzReadOpen(i32* %bzerror, i32 %f, i32 %verbosity, i32 %small, i8* %unused, i32 %nUnused) #0 {
entry:
  %cmp = icmp ne i32* %bzerror, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %bzerror, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp ne %struct.bzFile* null, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 0, i32* %lastErr, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %cmp4 = icmp eq i32 %f, 0
  br i1 %cmp4, label %if.then21, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %cmp5 = icmp ne i32 %small, 0
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false7

land.lhs.true:                                    ; preds = %lor.lhs.false
  %cmp6 = icmp ne i32 %small, 1
  br i1 %cmp6, label %if.then21, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %cmp8 = icmp slt i32 %verbosity, 0
  br i1 %cmp8, label %if.then21, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %cmp10 = icmp sgt i32 %verbosity, 4
  br i1 %cmp10, label %if.then21, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false9
  %cmp12 = icmp eq i8* %unused, null
  br i1 %cmp12, label %land.lhs.true13, label %lor.lhs.false15

land.lhs.true13:                                  ; preds = %lor.lhs.false11
  %cmp14 = icmp ne i32 %nUnused, 0
  br i1 %cmp14, label %if.then21, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %land.lhs.true13, %lor.lhs.false11
  %cmp16 = icmp ne i8* %unused, null
  br i1 %cmp16, label %land.lhs.true17, label %if.end29

land.lhs.true17:                                  ; preds = %lor.lhs.false15
  %cmp18 = icmp slt i32 %nUnused, 0
  br i1 %cmp18, label %if.then21, label %lor.lhs.false19

lor.lhs.false19:                                  ; preds = %land.lhs.true17
  %cmp20 = icmp sgt i32 %nUnused, 5000
  br i1 %cmp20, label %if.then21, label %if.end29

if.then21:                                        ; preds = %lor.lhs.false19, %land.lhs.true17, %land.lhs.true13, %lor.lhs.false9, %lor.lhs.false7, %land.lhs.true, %if.end3
  %cmp22 = icmp ne i32* %bzerror, null
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.then21
  store i32 -2, i32* %bzerror, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.then21
  %cmp25 = icmp ne %struct.bzFile* null, null
  br i1 %cmp25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end24
  %lastErr27 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 -2, i32* %lastErr27, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end24
  br label %return

if.end29:                                         ; preds = %lor.lhs.false19, %lor.lhs.false15
  %call = call noalias i8* @malloc(i64 5104) #8
  %i = bitcast i8* %call to %struct.bzFile*
  %cmp30 = icmp eq %struct.bzFile* %i, null
  br i1 %cmp30, label %if.then31, label %if.end39

if.then31:                                        ; preds = %if.end29
  %cmp32 = icmp ne i32* %bzerror, null
  br i1 %cmp32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.then31
  store i32 -3, i32* %bzerror, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then33, %if.then31
  %cmp35 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp35, label %if.then36, label %if.end38

if.then36:                                        ; preds = %if.end34
  %lastErr37 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -3, i32* %lastErr37, align 8
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %if.end34
  br label %return

if.end39:                                         ; preds = %if.end29
  %cmp40 = icmp ne i32* %bzerror, null
  br i1 %cmp40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.end39
  store i32 0, i32* %bzerror, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.then41, %if.end39
  %cmp43 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp43, label %if.then44, label %if.end46

if.then44:                                        ; preds = %if.end42
  %lastErr45 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr45, align 8
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %if.end42
  %initialisedOk = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 6
  store i8 0, i8* %initialisedOk, align 4
  %handle = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 0
  store i32 %f, i32* %handle, align 8
  %bufN = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 2
  store i32 0, i32* %bufN, align 4
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 3
  store i8 0, i8* %writing, align 8
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %bzalloc, align 8
  %strm47 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm47, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %bzfree, align 8
  %strm48 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm48, i32 0, i32 11
  store i8* null, i8** %opaque, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end46
  %unused.addr.0 = phi i8* [ %unused, %if.end46 ], [ %add.ptr, %while.body ]
  %nUnused.addr.0 = phi i32 [ %nUnused, %if.end46 ], [ %dec, %while.body ]
  %cmp49 = icmp sgt i32 %nUnused.addr.0, 0
  br i1 %cmp49, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %i1 = load i8, i8* %unused.addr.0, align 1
  %buf = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 1
  %bufN50 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 2
  %i2 = load i32, i32* %bufN50, align 4
  %idxprom = sext i32 %i2 to i64
  %arrayidx = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 %idxprom
  store i8 %i1, i8* %arrayidx, align 1
  %bufN51 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 2
  %i3 = load i32, i32* %bufN51, align 4
  %inc = add nsw i32 %i3, 1
  store i32 %inc, i32* %bufN51, align 4
  %add.ptr = getelementptr inbounds i8, i8* %unused.addr.0, i64 1
  %dec = add nsw i32 %nUnused.addr.0, -1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %strm52 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %call53 = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %strm52, i32 %verbosity, i32 %small)
  %cmp54 = icmp ne i32 %call53, 0
  br i1 %cmp54, label %if.then55, label %if.end63

if.then55:                                        ; preds = %while.end
  %cmp56 = icmp ne i32* %bzerror, null
  br i1 %cmp56, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.then55
  store i32 %call53, i32* %bzerror, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %if.then55
  %cmp59 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp59, label %if.then60, label %if.end62

if.then60:                                        ; preds = %if.end58
  %lastErr61 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 %call53, i32* %lastErr61, align 8
  br label %if.end62

if.end62:                                         ; preds = %if.then60, %if.end58
  %i4 = bitcast %struct.bzFile* %i to i8*
  call void @free(i8* %i4) #8
  br label %return

if.end63:                                         ; preds = %while.end
  %bufN64 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 2
  %i5 = load i32, i32* %bufN64, align 4
  %strm65 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm65, i32 0, i32 1
  store i32 %i5, i32* %avail_in, align 8
  %buf66 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 1
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf66, i64 0, i64 0
  %strm67 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm67, i32 0, i32 0
  store i8* %arraydecay, i8** %next_in, align 8
  %initialisedOk68 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 6
  store i8 1, i8* %initialisedOk68, align 4
  %i6 = bitcast %struct.bzFile* %i to i8*
  br label %return

return:                                           ; preds = %if.end63, %if.end62, %if.end38, %if.end28
  %retval.0 = phi i8* [ null, %if.end28 ], [ null, %if.end38 ], [ null, %if.end62 ], [ %i6, %if.end63 ]
  ret i8* %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzReadClose(i32* %bzerror, i8* %b) #0 {
entry:
  %i = bitcast i8* %b to %struct.bzFile*
  %cmp = icmp ne i32* %bzerror, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %bzerror, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %cmp4 = icmp eq %struct.bzFile* %i, null
  br i1 %cmp4, label %if.then5, label %if.end13

if.then5:                                         ; preds = %if.end3
  %cmp6 = icmp ne i32* %bzerror, null
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.then5
  store i32 0, i32* %bzerror, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.then5
  %cmp9 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end8
  %lastErr11 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr11, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end8
  br label %return

if.end13:                                         ; preds = %if.end3
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 3
  %i1 = load i8, i8* %writing, align 8
  %tobool = icmp ne i8 %i1, 0
  br i1 %tobool, label %if.then14, label %if.end22

if.then14:                                        ; preds = %if.end13
  %cmp15 = icmp ne i32* %bzerror, null
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.then14
  store i32 -1, i32* %bzerror, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.then14
  %cmp18 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end17
  %lastErr20 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -1, i32* %lastErr20, align 8
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end17
  br label %return

if.end22:                                         ; preds = %if.end13
  %initialisedOk = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 6
  %i2 = load i8, i8* %initialisedOk, align 4
  %tobool23 = icmp ne i8 %i2, 0
  br i1 %tobool23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end22
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %call = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.end22
  %i3 = bitcast %struct.bzFile* %i to i8*
  call void @free(i8* %i3) #8
  br label %return

return:                                           ; preds = %if.end25, %if.end21, %if.end12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzRead(i32* %bzerror, i8* %b, i8* %buf, i32 %len) #0 {
entry:
  %i = bitcast i8* %b to %struct.bzFile*
  %cmp = icmp ne i32* %bzerror, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %bzerror, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %cmp4 = icmp eq %struct.bzFile* %i, null
  br i1 %cmp4, label %if.then8, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %cmp5 = icmp eq i8* %buf, null
  br i1 %cmp5, label %if.then8, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp slt i32 %len, 0
  br i1 %cmp7, label %if.then8, label %if.end16

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false, %if.end3
  %cmp9 = icmp ne i32* %bzerror, null
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.then8
  store i32 -2, i32* %bzerror, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.then8
  %cmp12 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.end11
  %lastErr14 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -2, i32* %lastErr14, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.end11
  br label %return

if.end16:                                         ; preds = %lor.lhs.false6
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 3
  %i1 = load i8, i8* %writing, align 8
  %tobool = icmp ne i8 %i1, 0
  br i1 %tobool, label %if.then17, label %if.end25

if.then17:                                        ; preds = %if.end16
  %cmp18 = icmp ne i32* %bzerror, null
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.then17
  store i32 -1, i32* %bzerror, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.then17
  %cmp21 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp21, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.end20
  %lastErr23 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -1, i32* %lastErr23, align 8
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.end20
  br label %return

if.end25:                                         ; preds = %if.end16
  %cmp26 = icmp eq i32 %len, 0
  br i1 %cmp26, label %if.then27, label %if.end35

if.then27:                                        ; preds = %if.end25
  %cmp28 = icmp ne i32* %bzerror, null
  br i1 %cmp28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.then27
  store i32 0, i32* %bzerror, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %if.then27
  %cmp31 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end30
  %lastErr33 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr33, align 8
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end30
  br label %return

if.end35:                                         ; preds = %if.end25
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  store i32 %len, i32* %avail_out, align 8
  %strm36 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm36, i32 0, i32 4
  store i8* %buf, i8** %next_out, align 8
  br label %while.body

while.body:                                       ; preds = %if.end120, %if.end35
  %strm37 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm37, i32 0, i32 1
  %i2 = load i32, i32* %avail_in, align 8
  %cmp38 = icmp eq i32 %i2, 0
  br i1 %cmp38, label %land.lhs.true, label %if.end50

land.lhs.true:                                    ; preds = %while.body
  %handle = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 0
  %i3 = load i32, i32* %handle, align 8
  %call = call zeroext i8 @myfeof.93(i32 %i3)
  %tobool39 = icmp ne i8 %call, 0
  br i1 %tobool39, label %if.end50, label %if.then40

if.then40:                                        ; preds = %land.lhs.true
  %buf41 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 1
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf41, i64 0, i64 0
  %handle42 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 0
  %i4 = load i32, i32* %handle42, align 8
  %call43 = call i32 @spec_fread(i8* %arraydecay, i32 1, i32 5000, i32 %i4)
  %bufN = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 2
  store i32 %call43, i32* %bufN, align 4
  %bufN44 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 2
  %i5 = load i32, i32* %bufN44, align 4
  %strm45 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_in46 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm45, i32 0, i32 1
  store i32 %i5, i32* %avail_in46, align 8
  %buf47 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 1
  %arraydecay48 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf47, i64 0, i64 0
  %strm49 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm49, i32 0, i32 0
  store i8* %arraydecay48, i8** %next_in, align 8
  br label %if.end50

if.end50:                                         ; preds = %if.then40, %land.lhs.true, %while.body
  %strm51 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %call52 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %strm51)
  %cmp53 = icmp ne i32 %call52, 0
  br i1 %cmp53, label %land.lhs.true54, label %if.end64

land.lhs.true54:                                  ; preds = %if.end50
  %cmp55 = icmp ne i32 %call52, 4
  br i1 %cmp55, label %if.then56, label %if.end64

if.then56:                                        ; preds = %land.lhs.true54
  %cmp57 = icmp ne i32* %bzerror, null
  br i1 %cmp57, label %if.then58, label %if.end59

if.then58:                                        ; preds = %if.then56
  store i32 %call52, i32* %bzerror, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then58, %if.then56
  %cmp60 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp60, label %if.then61, label %if.end63

if.then61:                                        ; preds = %if.end59
  %lastErr62 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 %call52, i32* %lastErr62, align 8
  br label %if.end63

if.end63:                                         ; preds = %if.then61, %if.end59
  br label %return

if.end64:                                         ; preds = %land.lhs.true54, %if.end50
  %cmp65 = icmp eq i32 %call52, 0
  br i1 %cmp65, label %land.lhs.true66, label %if.end90

land.lhs.true66:                                  ; preds = %if.end64
  %handle67 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 0
  %i6 = load i32, i32* %handle67, align 8
  %call68 = call zeroext i8 @myfeof.93(i32 %i6)
  %conv = zext i8 %call68 to i32
  %tobool69 = icmp ne i32 %conv, 0
  br i1 %tobool69, label %land.lhs.true70, label %if.end90

land.lhs.true70:                                  ; preds = %land.lhs.true66
  %strm71 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_in72 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm71, i32 0, i32 1
  %i7 = load i32, i32* %avail_in72, align 8
  %cmp73 = icmp eq i32 %i7, 0
  br i1 %cmp73, label %land.lhs.true75, label %if.end90

land.lhs.true75:                                  ; preds = %land.lhs.true70
  %strm76 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_out77 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm76, i32 0, i32 5
  %i8 = load i32, i32* %avail_out77, align 8
  %cmp78 = icmp ugt i32 %i8, 0
  br i1 %cmp78, label %if.then80, label %if.end90

if.then80:                                        ; preds = %land.lhs.true75
  %cmp81 = icmp ne i32* %bzerror, null
  br i1 %cmp81, label %if.then83, label %if.end84

if.then83:                                        ; preds = %if.then80
  store i32 -7, i32* %bzerror, align 4
  br label %if.end84

if.end84:                                         ; preds = %if.then83, %if.then80
  %cmp85 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp85, label %if.then87, label %if.end89

if.then87:                                        ; preds = %if.end84
  %lastErr88 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -7, i32* %lastErr88, align 8
  br label %if.end89

if.end89:                                         ; preds = %if.then87, %if.end84
  br label %return

if.end90:                                         ; preds = %land.lhs.true75, %land.lhs.true70, %land.lhs.true66, %if.end64
  %cmp91 = icmp eq i32 %call52, 4
  br i1 %cmp91, label %if.then93, label %if.end105

if.then93:                                        ; preds = %if.end90
  %cmp94 = icmp ne i32* %bzerror, null
  br i1 %cmp94, label %if.then96, label %if.end97

if.then96:                                        ; preds = %if.then93
  store i32 4, i32* %bzerror, align 4
  br label %if.end97

if.end97:                                         ; preds = %if.then96, %if.then93
  %cmp98 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp98, label %if.then100, label %if.end102

if.then100:                                       ; preds = %if.end97
  %lastErr101 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 4, i32* %lastErr101, align 8
  br label %if.end102

if.end102:                                        ; preds = %if.then100, %if.end97
  %strm103 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_out104 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm103, i32 0, i32 5
  %i9 = load i32, i32* %avail_out104, align 8
  %sub = sub i32 %len, %i9
  br label %return

if.end105:                                        ; preds = %if.end90
  %strm106 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_out107 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm106, i32 0, i32 5
  %i10 = load i32, i32* %avail_out107, align 8
  %cmp108 = icmp eq i32 %i10, 0
  br i1 %cmp108, label %if.then110, label %if.end120

if.then110:                                       ; preds = %if.end105
  %cmp111 = icmp ne i32* %bzerror, null
  br i1 %cmp111, label %if.then113, label %if.end114

if.then113:                                       ; preds = %if.then110
  store i32 0, i32* %bzerror, align 4
  br label %if.end114

if.end114:                                        ; preds = %if.then113, %if.then110
  %cmp115 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp115, label %if.then117, label %if.end119

if.then117:                                       ; preds = %if.end114
  %lastErr118 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr118, align 8
  br label %if.end119

if.end119:                                        ; preds = %if.then117, %if.end114
  br label %return

if.end120:                                        ; preds = %if.end105
  br label %while.body

return:                                           ; preds = %if.end119, %if.end102, %if.end89, %if.end63, %if.end34, %if.end24, %if.end15
  %retval.0 = phi i32 [ 0, %if.end15 ], [ 0, %if.end24 ], [ 0, %if.end34 ], [ 0, %if.end63 ], [ 0, %if.end89 ], [ %sub, %if.end102 ], [ %len, %if.end119 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @myfeof.93(i32 %f) #0 {
entry:
  %call = call i32 @spec_getc(i32 %f)
  %cmp = icmp eq i32 %call, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %conv = trunc i32 %call to i8
  %call1 = call i32 @spec_ungetc(i8 zeroext %conv, i32 %f)
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.end ]
  ret i8 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzReadGetUnused(i32* %bzerror, i8* %b, i8** %unused, i32* %nUnused) #0 {
entry:
  %i = bitcast i8* %b to %struct.bzFile*
  %cmp = icmp eq %struct.bzFile* %i, null
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %cmp1 = icmp ne i32* %bzerror, null
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  store i32 -2, i32* %bzerror, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %cmp3 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -2, i32* %lastErr, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  br label %return

if.end6:                                          ; preds = %entry
  %lastErr7 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  %i1 = load i32, i32* %lastErr7, align 8
  %cmp8 = icmp ne i32 %i1, 4
  br i1 %cmp8, label %if.then9, label %if.end17

if.then9:                                         ; preds = %if.end6
  %cmp10 = icmp ne i32* %bzerror, null
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.then9
  store i32 -1, i32* %bzerror, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.then9
  %cmp13 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp13, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end12
  %lastErr15 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -1, i32* %lastErr15, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end12
  br label %return

if.end17:                                         ; preds = %if.end6
  %cmp18 = icmp eq i8** %unused, null
  br i1 %cmp18, label %if.then20, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end17
  %cmp19 = icmp eq i32* %nUnused, null
  br i1 %cmp19, label %if.then20, label %if.end28

if.then20:                                        ; preds = %lor.lhs.false, %if.end17
  %cmp21 = icmp ne i32* %bzerror, null
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.then20
  store i32 -2, i32* %bzerror, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %if.then20
  %cmp24 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp24, label %if.then25, label %if.end27

if.then25:                                        ; preds = %if.end23
  %lastErr26 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 -2, i32* %lastErr26, align 8
  br label %if.end27

if.end27:                                         ; preds = %if.then25, %if.end23
  br label %return

if.end28:                                         ; preds = %lor.lhs.false
  %cmp29 = icmp ne i32* %bzerror, null
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end28
  store i32 0, i32* %bzerror, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %if.end28
  %cmp32 = icmp ne %struct.bzFile* %i, null
  br i1 %cmp32, label %if.then33, label %if.end35

if.then33:                                        ; preds = %if.end31
  %lastErr34 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  store i32 0, i32* %lastErr34, align 8
  br label %if.end35

if.end35:                                         ; preds = %if.then33, %if.end31
  %strm = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 1
  %i2 = load i32, i32* %avail_in, align 8
  store i32 %i2, i32* %nUnused, align 4
  %strm36 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 4
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm36, i32 0, i32 0
  %i3 = load i8*, i8** %next_in, align 8
  store i8* %i3, i8** %unused, align 8
  br label %return

return:                                           ; preds = %if.end35, %if.end27, %if.end16, %if.end5
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzBuffToBuffCompress(i8* %dest, i32* %destLen, i8* %source, i32 %sourceLen, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) #0 {
entry:
  %strm = alloca %struct.bz_stream, align 8
  %cmp = icmp eq i8* %dest, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %cmp1 = icmp eq i32* %destLen, null
  br i1 %cmp1, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %cmp3 = icmp eq i8* %source, null
  br i1 %cmp3, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %cmp5 = icmp slt i32 %blockSize100k, 1
  br i1 %cmp5, label %if.then, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %cmp7 = icmp sgt i32 %blockSize100k, 9
  br i1 %cmp7, label %if.then, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %cmp9 = icmp slt i32 %verbosity, 0
  br i1 %cmp9, label %if.then, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %cmp11 = icmp sgt i32 %verbosity, 4
  br i1 %cmp11, label %if.then, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %cmp13 = icmp slt i32 %workFactor, 0
  br i1 %cmp13, label %if.then, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false12
  %cmp15 = icmp sgt i32 %workFactor, 250
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false14, %lor.lhs.false12, %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  br label %return

if.end:                                           ; preds = %lor.lhs.false14
  %cmp16 = icmp eq i32 %workFactor, 0
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end
  %workFactor.addr.0 = phi i32 [ 30, %if.then17 ], [ %workFactor, %if.end ]
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %bzalloc, align 8
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %bzfree, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  store i8* null, i8** %opaque, align 8
  %call = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %strm, i32 %blockSize100k, i32 %verbosity, i32 %workFactor.addr.0)
  %cmp19 = icmp ne i32 %call, 0
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end18
  br label %return

if.end21:                                         ; preds = %if.end18
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 0
  store i8* %source, i8** %next_in, align 8
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 4
  store i8* %dest, i8** %next_out, align 8
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 1
  store i32 %sourceLen, i32* %avail_in, align 8
  %i = load i32, i32* %destLen, align 4
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  store i32 %i, i32* %avail_out, align 8
  %call22 = call i32 @BZ2_bzCompress(%struct.bz_stream* %strm, i32 2)
  %cmp23 = icmp eq i32 %call22, 3
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end21
  br label %output_overflow

if.end25:                                         ; preds = %if.end21
  %cmp26 = icmp ne i32 %call22, 4
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end25
  br label %errhandler

if.end28:                                         ; preds = %if.end25
  %avail_out29 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  %i1 = load i32, i32* %avail_out29, align 8
  %i2 = load i32, i32* %destLen, align 4
  %sub = sub i32 %i2, %i1
  store i32 %sub, i32* %destLen, align 4
  %call30 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm)
  br label %return

output_overflow:                                  ; preds = %if.then24
  %call31 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm)
  br label %return

errhandler:                                       ; preds = %if.then27
  %call32 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm)
  br label %return

return:                                           ; preds = %errhandler, %output_overflow, %if.end28, %if.then20, %if.then
  %retval.0 = phi i32 [ -2, %if.then ], [ %call, %if.then20 ], [ -8, %output_overflow ], [ %call22, %errhandler ], [ 0, %if.end28 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzBuffToBuffDecompress(i8* %dest, i32* %destLen, i8* %source, i32 %sourceLen, i32 %small, i32 %verbosity) #0 {
entry:
  %strm = alloca %struct.bz_stream, align 8
  %cmp = icmp eq i8* %dest, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %cmp1 = icmp eq i32* %destLen, null
  br i1 %cmp1, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %cmp3 = icmp eq i8* %source, null
  br i1 %cmp3, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %cmp5 = icmp ne i32 %small, 0
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false7

land.lhs.true:                                    ; preds = %lor.lhs.false4
  %cmp6 = icmp ne i32 %small, 1
  br i1 %cmp6, label %if.then, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %land.lhs.true, %lor.lhs.false4
  %cmp8 = icmp slt i32 %verbosity, 0
  br i1 %cmp8, label %if.then, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %cmp10 = icmp sgt i32 %verbosity, 4
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false7, %land.lhs.true, %lor.lhs.false2, %lor.lhs.false, %entry
  br label %return

if.end:                                           ; preds = %lor.lhs.false9
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %bzalloc, align 8
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %bzfree, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 11
  store i8* null, i8** %opaque, align 8
  %call = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %strm, i32 %verbosity, i32 %small)
  %cmp11 = icmp ne i32 %call, 0
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end
  br label %return

if.end13:                                         ; preds = %if.end
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 0
  store i8* %source, i8** %next_in, align 8
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 4
  store i8* %dest, i8** %next_out, align 8
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 1
  store i32 %sourceLen, i32* %avail_in, align 8
  %i = load i32, i32* %destLen, align 4
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  store i32 %i, i32* %avail_out, align 8
  %call14 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %strm)
  %cmp15 = icmp eq i32 %call14, 0
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end13
  br label %output_overflow_or_eof

if.end17:                                         ; preds = %if.end13
  %cmp18 = icmp ne i32 %call14, 4
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end17
  br label %errhandler

if.end20:                                         ; preds = %if.end17
  %avail_out21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  %i1 = load i32, i32* %avail_out21, align 8
  %i2 = load i32, i32* %destLen, align 4
  %sub = sub i32 %i2, %i1
  store i32 %sub, i32* %destLen, align 4
  %call22 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  br label %return

output_overflow_or_eof:                           ; preds = %if.then16
  %avail_out23 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i32 0, i32 5
  %i3 = load i32, i32* %avail_out23, align 8
  %cmp24 = icmp ugt i32 %i3, 0
  br i1 %cmp24, label %if.then25, label %if.else

if.then25:                                        ; preds = %output_overflow_or_eof
  %call26 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  br label %return

if.else:                                          ; preds = %output_overflow_or_eof
  %call27 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  br label %return

errhandler:                                       ; preds = %if.then19
  %call28 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  br label %return

return:                                           ; preds = %errhandler, %if.else, %if.then25, %if.end20, %if.then12, %if.then
  %retval.0 = phi i32 [ -2, %if.then ], [ %call, %if.then12 ], [ -7, %if.then25 ], [ -8, %if.else ], [ %call14, %errhandler ], [ 0, %if.end20 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzopen(i8* %path, i8* %mode) #0 {
entry:
  %call = call i8* @bzopen_or_bzdopen(i8* %path, i32 -1, i8* %mode, i32 0)
  ret i8* %call
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @bzopen_or_bzdopen(i8* %path, i32 %fd, i8* %mode, i32 %open_mode) #0 {
entry:
  %bzerr = alloca i32, align 4
  %unused = alloca [5000 x i8], align 16
  %mode2 = alloca [10 x i8], align 1
  %i = bitcast [10 x i8]* %mode2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %i, i8 0, i64 10, i1 false)
  %cmp = icmp eq i8* %mode, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %if.end
  %writing.0 = phi i32 [ 0, %if.end ], [ %writing.1, %sw.epilog ]
  %blockSize100k.0 = phi i32 [ 9, %if.end ], [ %blockSize100k.2, %sw.epilog ]
  %mode.addr.0 = phi i8* [ %mode, %if.end ], [ %incdec.ptr, %sw.epilog ]
  %smallMode.0 = phi i32 [ 0, %if.end ], [ %smallMode.1, %sw.epilog ]
  %i1 = load i8, i8* %mode.addr.0, align 1
  %tobool = icmp ne i8 %i1, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %i2 = load i8, i8* %mode.addr.0, align 1
  %conv = sext i8 %i2 to i32
  switch i32 %conv, label %sw.default [
    i32 114, label %sw.bb
    i32 119, label %sw.bb1
    i32 115, label %sw.bb2
  ]

sw.bb:                                            ; preds = %while.body
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  br label %sw.epilog

sw.bb2:                                           ; preds = %while.body
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %call = call i16** @__ctype_b_loc() #10
  %i3 = load i16*, i16** %call, align 8
  %i4 = load i8, i8* %mode.addr.0, align 1
  %conv3 = sext i8 %i4 to i32
  %idxprom = sext i32 %conv3 to i64
  %arrayidx = getelementptr inbounds i16, i16* %i3, i64 %idxprom
  %i5 = load i16, i16* %arrayidx, align 2
  %conv4 = zext i16 %i5 to i32
  %and = and i32 %conv4, 2048
  %tobool5 = icmp ne i32 %and, 0
  br i1 %tobool5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %sw.default
  %i6 = load i8, i8* %mode.addr.0, align 1
  %conv7 = sext i8 %i6 to i32
  %sub = sub nsw i32 %conv7, 48
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %sw.default
  %blockSize100k.1 = phi i32 [ %sub, %if.then6 ], [ %blockSize100k.0, %sw.default ]
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end8, %sw.bb2, %sw.bb1, %sw.bb
  %writing.1 = phi i32 [ %writing.0, %if.end8 ], [ %writing.0, %sw.bb2 ], [ 1, %sw.bb1 ], [ 0, %sw.bb ]
  %blockSize100k.2 = phi i32 [ %blockSize100k.1, %if.end8 ], [ %blockSize100k.0, %sw.bb2 ], [ %blockSize100k.0, %sw.bb1 ], [ %blockSize100k.0, %sw.bb ]
  %smallMode.1 = phi i32 [ %smallMode.0, %if.end8 ], [ 1, %sw.bb2 ], [ %smallMode.0, %sw.bb1 ], [ %smallMode.0, %sw.bb ]
  %incdec.ptr = getelementptr inbounds i8, i8* %mode.addr.0, i32 1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %mode2, i64 0, i64 0
  %tobool9 = icmp ne i32 %writing.0, 0
  %i7 = zext i1 %tobool9 to i64
  %cond = select i1 %tobool9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.96, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.97, i64 0, i64 0)
  %call10 = call i8* @strcat(i8* %arraydecay, i8* %cond) #8
  %arraydecay11 = getelementptr inbounds [10 x i8], [10 x i8]* %mode2, i64 0, i64 0
  %call12 = call i8* @strcat(i8* %arraydecay11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.98, i64 0, i64 0)) #8
  %cmp13 = icmp eq i32 %open_mode, 0
  br i1 %cmp13, label %if.then15, label %if.else25

if.then15:                                        ; preds = %while.end
  %cmp16 = icmp eq i8* %path, null
  br i1 %cmp16, label %if.then21, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then15
  %call18 = call i32 @strcmp(i8* %path, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9.99, i64 0, i64 0)) #11
  %cmp19 = icmp eq i32 %call18, 0
  br i1 %cmp19, label %if.then21, label %if.else

if.then21:                                        ; preds = %lor.lhs.false, %if.then15
  %tobool22 = icmp ne i32 %writing.0, 0
  %i8 = zext i1 %tobool22 to i64
  %cond23 = select i1 %tobool22, i32 1, i32 0
  br label %if.end24

if.else:                                          ; preds = %lor.lhs.false
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then21
  %fp.0 = phi i32 [ %cond23, %if.then21 ], [ 0, %if.else ]
  br label %if.end26

if.else25:                                        ; preds = %while.end
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.end24
  %fp.1 = phi i32 [ %fp.0, %if.end24 ], [ 0, %if.else25 ]
  %cmp27 = icmp eq i32 %fp.1, 0
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end26
  br label %return

if.end30:                                         ; preds = %if.end26
  %tobool31 = icmp ne i32 %writing.0, 0
  br i1 %tobool31, label %if.then32, label %if.else42

if.then32:                                        ; preds = %if.end30
  %cmp33 = icmp slt i32 %blockSize100k.0, 1
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.then32
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %if.then32
  %blockSize100k.3 = phi i32 [ 1, %if.then35 ], [ %blockSize100k.0, %if.then32 ]
  %cmp37 = icmp sgt i32 %blockSize100k.3, 9
  br i1 %cmp37, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.end36
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.end36
  %blockSize100k.4 = phi i32 [ 9, %if.then39 ], [ %blockSize100k.3, %if.end36 ]
  %call41 = call i8* @BZ2_bzWriteOpen(i32* %bzerr, i32 %fp.1, i32 %blockSize100k.4, i32 0, i32 30)
  br label %if.end45

if.else42:                                        ; preds = %if.end30
  %arraydecay43 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 0
  %call44 = call i8* @BZ2_bzReadOpen(i32* %bzerr, i32 %fp.1, i32 0, i32 %smallMode.0, i8* %arraydecay43, i32 0)
  br label %if.end45

if.end45:                                         ; preds = %if.else42, %if.end40
  %bzfp.0 = phi i8* [ %call41, %if.end40 ], [ %call44, %if.else42 ]
  %cmp46 = icmp eq i8* %bzfp.0, null
  br i1 %cmp46, label %if.then48, label %if.end55

if.then48:                                        ; preds = %if.end45
  %cmp49 = icmp ne i32 %fp.1, 0
  br i1 %cmp49, label %land.lhs.true, label %if.end54

land.lhs.true:                                    ; preds = %if.then48
  %cmp51 = icmp ne i32 %fp.1, 1
  br i1 %cmp51, label %if.then53, label %if.end54

if.then53:                                        ; preds = %land.lhs.true
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %land.lhs.true, %if.then48
  br label %return

if.end55:                                         ; preds = %if.end45
  br label %return

return:                                           ; preds = %if.end55, %if.end54, %if.then29, %if.then
  %retval.0 = phi i8* [ null, %if.then ], [ null, %if.then29 ], [ null, %if.end54 ], [ %bzfp.0, %if.end55 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind readnone willreturn
declare dso_local i16** @__ctype_b_loc() #6

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8*, i8*) #3

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzdopen(i32 %fd, i8* %mode) #0 {
entry:
  %call = call i8* @bzopen_or_bzdopen(i8* null, i32 %fd, i8* %mode, i32 1)
  ret i8* %call
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzread(i8* %b, i8* %buf, i32 %len) #0 {
entry:
  %bzerr = alloca i32, align 4
  %i = bitcast i8* %b to %struct.bzFile*
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  %i1 = load i32, i32* %lastErr, align 8
  %cmp = icmp eq i32 %i1, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %call = call i32 @BZ2_bzRead(i32* %bzerr, i8* %b, i8* %buf, i32 %len)
  %i2 = load i32, i32* %bzerr, align 4
  %cmp1 = icmp eq i32 %i2, 0
  br i1 %cmp1, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %i3 = load i32, i32* %bzerr, align 4
  %cmp2 = icmp eq i32 %i3, 4
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  br label %return

return:                                           ; preds = %if.else, %if.then3, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %call, %if.then3 ], [ -1, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzwrite(i8* %b, i8* %buf, i32 %len) #0 {
entry:
  %bzerr = alloca i32, align 4
  call void @BZ2_bzWrite(i32* %bzerr, i8* %b, i8* %buf, i32 %len)
  %i = load i32, i32* %bzerr, align 4
  %cmp = icmp eq i32 %i, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %return

if.else:                                          ; preds = %entry
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %len, %if.then ], [ -1, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzflush(i8* %b) #0 {
entry:
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzclose(i8* %b) #0 {
entry:
  %bzerr = alloca i32, align 4
  %i = bitcast i8* %b to %struct.bzFile*
  %handle = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 0
  %i1 = load i32, i32* %handle, align 8
  %cmp = icmp eq i8* %b, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end9

if.end:                                           ; preds = %entry
  %i2 = bitcast i8* %b to %struct.bzFile*
  %writing = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i2, i32 0, i32 3
  %i3 = load i8, i8* %writing, align 8
  %tobool = icmp ne i8 %i3, 0
  br i1 %tobool, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  call void @BZ2_bzWriteClose(i32* %bzerr, i8* %b, i32 0, i32* null, i32* null)
  %i4 = load i32, i32* %bzerr, align 4
  %cmp2 = icmp ne i32 %i4, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.then1
  call void @BZ2_bzWriteClose(i32* null, i8* %b, i32 1, i32* null, i32* null)
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.then1
  br label %if.end5

if.else:                                          ; preds = %if.end
  call void @BZ2_bzReadClose(i32* %bzerr, i8* %b)
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.end4
  %cmp6 = icmp ne i32 %i1, 0
  br i1 %cmp6, label %land.lhs.true, label %if.end9

land.lhs.true:                                    ; preds = %if.end5
  %cmp7 = icmp ne i32 %i1, 1
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %land.lhs.true
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %land.lhs.true, %if.end5, %if.then
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzerror(i8* %b, i32* %errnum) #0 {
entry:
  %i = bitcast i8* %b to %struct.bzFile*
  %lastErr = getelementptr inbounds %struct.bzFile, %struct.bzFile* %i, i32 0, i32 5
  %i1 = load i32, i32* %lastErr, align 8
  %cmp = icmp sgt i32 %i1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %err.0 = phi i32 [ 0, %if.then ], [ %i1, %entry ]
  store i32 %err.0, i32* %errnum, align 4
  %mul = mul nsw i32 %err.0, -1
  %idxprom = sext i32 %mul to i64
  %arrayidx = getelementptr inbounds [16 x i8*], [16 x i8*]* @bzerrorstrings, i64 0, i64 %idxprom
  %i2 = load i8*, i8** %arrayidx, align 8
  ret i8* %i2
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bsInitWrite(%struct.EState* %s) #0 {
entry:
  %bsLive = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 25
  store i32 0, i32* %bsLive, align 4
  %bsBuff = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 24
  store i32 0, i32* %bsBuff, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_compressBlock(%struct.EState* %s, i8 zeroext %is_last_block) #0 {
entry:
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i = load i32, i32* %nblock, align 4
  %cmp = icmp sgt i32 %i, 0
  br i1 %cmp, label %if.then, label %if.end15

if.then:                                          ; preds = %entry
  %blockCRC = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  %i1 = load i32, i32* %blockCRC, align 8
  %neg = xor i32 %i1, -1
  %blockCRC1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  store i32 %neg, i32* %blockCRC1, align 8
  %combinedCRC = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 27
  %i2 = load i32, i32* %combinedCRC, align 4
  %shl = shl i32 %i2, 1
  %combinedCRC2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 27
  %i3 = load i32, i32* %combinedCRC2, align 4
  %shr = lshr i32 %i3, 31
  %or = or i32 %shl, %shr
  %combinedCRC3 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 27
  store i32 %or, i32* %combinedCRC3, align 4
  %blockCRC4 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  %i4 = load i32, i32* %blockCRC4, align 8
  %combinedCRC5 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 27
  %i5 = load i32, i32* %combinedCRC5, align 4
  %xor = xor i32 %i5, %i4
  store i32 %xor, i32* %combinedCRC5, align 4
  %blockNo = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 29
  %i6 = load i32, i32* %blockNo, align 4
  %cmp6 = icmp sgt i32 %i6, 1
  br i1 %cmp6, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  store i32 0, i32* %numZ, align 4
  br label %if.end

if.end:                                           ; preds = %if.then7, %if.then
  %verbosity = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 28
  %i7 = load i32, i32* %verbosity, align 8
  %cmp8 = icmp sge i32 %i7, 2
  br i1 %cmp8, label %if.then9, label %if.end14

if.then9:                                         ; preds = %if.end
  %i8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %blockNo10 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 29
  %i9 = load i32, i32* %blockNo10, align 4
  %blockCRC11 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  %i10 = load i32, i32* %blockCRC11, align 8
  %combinedCRC12 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 27
  %i11 = load i32, i32* %combinedCRC12, align 4
  %nblock13 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i12 = load i32, i32* %nblock13, align 4
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i8, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i32 %i9, i32 %i10, i32 %i11, i32 %i12)
  br label %if.end14

if.end14:                                         ; preds = %if.then9, %if.end
  call void @BZ2_blockSort(%struct.EState* %s)
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %entry
  %arr2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 5
  %i13 = load i32*, i32** %arr2, align 8
  %i14 = bitcast i32* %i13 to i8*
  %nblock16 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i15 = load i32, i32* %nblock16, align 4
  %idxprom = sext i32 %i15 to i64
  %arrayidx = getelementptr inbounds i8, i8* %i14, i64 %idxprom
  %zbits = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 11
  store i8* %arrayidx, i8** %zbits, align 8
  %blockNo17 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 29
  %i16 = load i32, i32* %blockNo17, align 4
  %cmp18 = icmp eq i32 %i16, 1
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end15
  call void @BZ2_bsInitWrite(%struct.EState* %s)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 66)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 90)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 104)
  %blockSize100k = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 30
  %i17 = load i32, i32* %blockSize100k, align 8
  %add = add nsw i32 48, %i17
  %conv = trunc i32 %add to i8
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext %conv)
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end15
  %nblock21 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i18 = load i32, i32* %nblock21, align 4
  %cmp22 = icmp sgt i32 %i18, 0
  br i1 %cmp22, label %if.then24, label %if.end26

if.then24:                                        ; preds = %if.end20
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 49)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 65)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 89)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 38)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 83)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 89)
  %blockCRC25 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 26
  %i19 = load i32, i32* %blockCRC25, align 8
  call void @bsPutUInt32(%struct.EState* %s, i32 %i19)
  call void @bsW(%struct.EState* %s, i32 1, i32 0)
  %origPtr = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 7
  %i20 = load i32, i32* %origPtr, align 8
  call void @bsW(%struct.EState* %s, i32 24, i32 %i20)
  call void @generateMTFValues(%struct.EState* %s)
  call void @sendMTFValues(%struct.EState* %s)
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %if.end20
  %tobool = icmp ne i8 %is_last_block, 0
  br i1 %tobool, label %if.then27, label %if.end36

if.then27:                                        ; preds = %if.end26
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 23)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 114)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 69)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 56)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext 80)
  call void @bsPutUChar(%struct.EState* %s, i8 zeroext -112)
  %combinedCRC28 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 27
  %i21 = load i32, i32* %combinedCRC28, align 4
  call void @bsPutUInt32(%struct.EState* %s, i32 %i21)
  %verbosity29 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 28
  %i22 = load i32, i32* %verbosity29, align 8
  %cmp30 = icmp sge i32 %i22, 2
  br i1 %cmp30, label %if.then32, label %if.end35

if.then32:                                        ; preds = %if.then27
  %i23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %combinedCRC33 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 27
  %i24 = load i32, i32* %combinedCRC33, align 4
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i23, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1.114, i64 0, i64 0), i32 %i24)
  br label %if.end35

if.end35:                                         ; preds = %if.then32, %if.then27
  call void @bsFinishWrite(%struct.EState* %s)
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end26
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @bsPutUChar(%struct.EState* %s, i8 zeroext %c) #0 {
entry:
  %conv = zext i8 %c to i32
  call void @bsW(%struct.EState* %s, i32 8, i32 %conv)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @bsPutUInt32(%struct.EState* %s, i32 %u) #0 {
entry:
  %shr = lshr i32 %u, 24
  %conv = zext i32 %shr to i64
  %and = and i64 %conv, 255
  %conv1 = trunc i64 %and to i32
  call void @bsW(%struct.EState* %s, i32 8, i32 %conv1)
  %shr2 = lshr i32 %u, 16
  %conv3 = zext i32 %shr2 to i64
  %and4 = and i64 %conv3, 255
  %conv5 = trunc i64 %and4 to i32
  call void @bsW(%struct.EState* %s, i32 8, i32 %conv5)
  %shr6 = lshr i32 %u, 8
  %conv7 = zext i32 %shr6 to i64
  %and8 = and i64 %conv7, 255
  %conv9 = trunc i64 %and8 to i32
  call void @bsW(%struct.EState* %s, i32 8, i32 %conv9)
  %conv10 = zext i32 %u to i64
  %and11 = and i64 %conv10, 255
  %conv12 = trunc i64 %and11 to i32
  call void @bsW(%struct.EState* %s, i32 8, i32 %conv12)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @bsW(%struct.EState* %s, i32 %n, i32 %v) #0 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %bsLive = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 25
  %i = load i32, i32* %bsLive, align 4
  %cmp = icmp sge i32 %i, 8
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %bsBuff = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 24
  %i1 = load i32, i32* %bsBuff, align 8
  %shr = lshr i32 %i1, 24
  %conv = trunc i32 %shr to i8
  %zbits = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 11
  %i2 = load i8*, i8** %zbits, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i3 = load i32, i32* %numZ, align 4
  %idxprom = sext i32 %i3 to i64
  %arrayidx = getelementptr inbounds i8, i8* %i2, i64 %idxprom
  store i8 %conv, i8* %arrayidx, align 1
  %numZ1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i4 = load i32, i32* %numZ1, align 4
  %inc = add nsw i32 %i4, 1
  store i32 %inc, i32* %numZ1, align 4
  %bsBuff2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 24
  %i5 = load i32, i32* %bsBuff2, align 8
  %shl = shl i32 %i5, 8
  store i32 %shl, i32* %bsBuff2, align 8
  %bsLive3 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 25
  %i6 = load i32, i32* %bsLive3, align 4
  %sub = sub nsw i32 %i6, 8
  store i32 %sub, i32* %bsLive3, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %bsLive4 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 25
  %i7 = load i32, i32* %bsLive4, align 4
  %sub5 = sub nsw i32 32, %i7
  %sub6 = sub nsw i32 %sub5, %n
  %shl7 = shl i32 %v, %sub6
  %bsBuff8 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 24
  %i8 = load i32, i32* %bsBuff8, align 8
  %or = or i32 %i8, %shl7
  store i32 %or, i32* %bsBuff8, align 8
  %bsLive9 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 25
  %i9 = load i32, i32* %bsLive9, align 4
  %add = add nsw i32 %i9, %n
  store i32 %add, i32* %bsLive9, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @generateMTFValues(%struct.EState* %s) #0 {
entry:
  %yy = alloca [256 x i8], align 16
  %ptr1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 8
  %i = load i32*, i32** %ptr1, align 8
  %block2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 9
  %i1 = load i8*, i8** %block2, align 8
  %mtfv3 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 10
  %i2 = load i16*, i16** %mtfv3, align 8
  call void @makeMaps_e(%struct.EState* %s)
  %nInUse = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 21
  %i3 = load i32, i32* %nInUse, align 4
  %add = add nsw i32 %i3, 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp sle i32 %i.0, %add
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %mtfFreq = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 32
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq, i64 0, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc10, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc11, %for.inc10 ]
  %nInUse5 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 21
  %i4 = load i32, i32* %nInUse5, align 4
  %cmp6 = icmp slt i32 %i.1, %i4
  br i1 %cmp6, label %for.body7, label %for.end12

for.body7:                                        ; preds = %for.cond4
  %conv = trunc i32 %i.1 to i8
  %idxprom8 = sext i32 %i.1 to i64
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 %idxprom8
  store i8 %conv, i8* %arrayidx9, align 1
  br label %for.inc10

for.inc10:                                        ; preds = %for.body7
  %inc11 = add nsw i32 %i.1, 1
  br label %for.cond4

for.end12:                                        ; preds = %for.cond4
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc82, %for.end12
  %wr.0 = phi i32 [ 0, %for.end12 ], [ %wr.4, %for.inc82 ]
  %zPend.0 = phi i32 [ 0, %for.end12 ], [ %zPend.3, %for.inc82 ]
  %i.2 = phi i32 [ 0, %for.end12 ], [ %inc83, %for.inc82 ]
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i5 = load i32, i32* %nblock, align 4
  %cmp14 = icmp slt i32 %i.2, %i5
  br i1 %cmp14, label %for.body16, label %for.end84

for.body16:                                       ; preds = %for.cond13
  %idxprom17 = sext i32 %i.2 to i64
  %arrayidx18 = getelementptr inbounds i32, i32* %i, i64 %idxprom17
  %i6 = load i32, i32* %arrayidx18, align 4
  %sub = sub i32 %i6, 1
  %cmp19 = icmp slt i32 %sub, 0
  br i1 %cmp19, label %if.then, label %if.end

if.then:                                          ; preds = %for.body16
  %nblock21 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i7 = load i32, i32* %nblock21, align 4
  %add22 = add nsw i32 %sub, %i7
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body16
  %j.0 = phi i32 [ %add22, %if.then ], [ %sub, %for.body16 ]
  %unseqToSeq = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 23
  %idxprom23 = sext i32 %j.0 to i64
  %arrayidx24 = getelementptr inbounds i8, i8* %i1, i64 %idxprom23
  %i8 = load i8, i8* %arrayidx24, align 1
  %idxprom25 = zext i8 %i8 to i64
  %arrayidx26 = getelementptr inbounds [256 x i8], [256 x i8]* %unseqToSeq, i64 0, i64 %idxprom25
  %i9 = load i8, i8* %arrayidx26, align 1
  %arrayidx27 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 0
  %i10 = load i8, i8* %arrayidx27, align 16
  %conv28 = zext i8 %i10 to i32
  %conv29 = zext i8 %i9 to i32
  %cmp30 = icmp eq i32 %conv28, %conv29
  br i1 %cmp30, label %if.then32, label %if.else

if.then32:                                        ; preds = %if.end
  %inc33 = add nsw i32 %zPend.0, 1
  br label %if.end81

if.else:                                          ; preds = %if.end
  %cmp34 = icmp sgt i32 %zPend.0, 0
  br i1 %cmp34, label %if.then36, label %if.end57

if.then36:                                        ; preds = %if.else
  %dec = add nsw i32 %zPend.0, -1
  br label %while.body

while.body:                                       ; preds = %if.end55, %if.then36
  %wr.1 = phi i32 [ %wr.0, %if.then36 ], [ %wr.2, %if.end55 ]
  %zPend.1 = phi i32 [ %dec, %if.then36 ], [ %div, %if.end55 ]
  %and = and i32 %zPend.1, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then37, label %if.else44

if.then37:                                        ; preds = %while.body
  %idxprom38 = sext i32 %wr.1 to i64
  %arrayidx39 = getelementptr inbounds i16, i16* %i2, i64 %idxprom38
  store i16 1, i16* %arrayidx39, align 2
  %inc40 = add nsw i32 %wr.1, 1
  %mtfFreq41 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 32
  %arrayidx42 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq41, i64 0, i64 1
  %i11 = load i32, i32* %arrayidx42, align 4
  %inc43 = add nsw i32 %i11, 1
  store i32 %inc43, i32* %arrayidx42, align 4
  br label %if.end51

if.else44:                                        ; preds = %while.body
  %idxprom45 = sext i32 %wr.1 to i64
  %arrayidx46 = getelementptr inbounds i16, i16* %i2, i64 %idxprom45
  store i16 0, i16* %arrayidx46, align 2
  %inc47 = add nsw i32 %wr.1, 1
  %mtfFreq48 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 32
  %arrayidx49 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq48, i64 0, i64 0
  %i12 = load i32, i32* %arrayidx49, align 8
  %inc50 = add nsw i32 %i12, 1
  store i32 %inc50, i32* %arrayidx49, align 8
  br label %if.end51

if.end51:                                         ; preds = %if.else44, %if.then37
  %wr.2 = phi i32 [ %inc40, %if.then37 ], [ %inc47, %if.else44 ]
  %cmp52 = icmp slt i32 %zPend.1, 2
  br i1 %cmp52, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end51
  br label %while.end

if.end55:                                         ; preds = %if.end51
  %sub56 = sub nsw i32 %zPend.1, 2
  %div = sdiv i32 %sub56, 2
  br label %while.body

while.end:                                        ; preds = %if.then54
  br label %if.end57

if.end57:                                         ; preds = %while.end, %if.else
  %wr.3 = phi i32 [ %wr.2, %while.end ], [ %wr.0, %if.else ]
  %zPend.2 = phi i32 [ 0, %while.end ], [ %zPend.0, %if.else ]
  %arrayidx58 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 1
  %i13 = load i8, i8* %arrayidx58, align 1
  %arrayidx59 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 0
  %i14 = load i8, i8* %arrayidx59, align 16
  %arrayidx60 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 1
  store i8 %i14, i8* %arrayidx60, align 1
  %arrayidx61 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 1
  br label %while.cond

while.cond:                                       ; preds = %while.body66, %if.end57
  %rtmp.0 = phi i8 [ %i13, %if.end57 ], [ %i15, %while.body66 ]
  %ryy_j.0 = phi i8* [ %arrayidx61, %if.end57 ], [ %incdec.ptr, %while.body66 ]
  %conv62 = zext i8 %i9 to i32
  %conv63 = zext i8 %rtmp.0 to i32
  %cmp64 = icmp ne i32 %conv62, %conv63
  br i1 %cmp64, label %while.body66, label %while.end67

while.body66:                                     ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %ryy_j.0, i32 1
  %i15 = load i8, i8* %incdec.ptr, align 1
  store i8 %rtmp.0, i8* %incdec.ptr, align 1
  br label %while.cond

while.end67:                                      ; preds = %while.cond
  %arrayidx68 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 0
  store i8 %rtmp.0, i8* %arrayidx68, align 16
  %arrayidx69 = getelementptr inbounds [256 x i8], [256 x i8]* %yy, i64 0, i64 0
  %sub.ptr.lhs.cast = ptrtoint i8* %ryy_j.0 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %arrayidx69 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv70 = trunc i64 %sub.ptr.sub to i32
  %add71 = add nsw i32 %conv70, 1
  %conv72 = trunc i32 %add71 to i16
  %idxprom73 = sext i32 %wr.3 to i64
  %arrayidx74 = getelementptr inbounds i16, i16* %i2, i64 %idxprom73
  store i16 %conv72, i16* %arrayidx74, align 2
  %inc75 = add nsw i32 %wr.3, 1
  %mtfFreq76 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 32
  %add77 = add nsw i32 %conv70, 1
  %idxprom78 = sext i32 %add77 to i64
  %arrayidx79 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq76, i64 0, i64 %idxprom78
  %i16 = load i32, i32* %arrayidx79, align 4
  %inc80 = add nsw i32 %i16, 1
  store i32 %inc80, i32* %arrayidx79, align 4
  br label %if.end81

if.end81:                                         ; preds = %while.end67, %if.then32
  %wr.4 = phi i32 [ %wr.0, %if.then32 ], [ %inc75, %while.end67 ]
  %zPend.3 = phi i32 [ %inc33, %if.then32 ], [ %zPend.2, %while.end67 ]
  br label %for.inc82

for.inc82:                                        ; preds = %if.end81
  %inc83 = add nsw i32 %i.2, 1
  br label %for.cond13

for.end84:                                        ; preds = %for.cond13
  %cmp85 = icmp sgt i32 %zPend.0, 0
  br i1 %cmp85, label %if.then87, label %if.end115

if.then87:                                        ; preds = %for.end84
  %dec88 = add nsw i32 %zPend.0, -1
  br label %while.body90

while.body90:                                     ; preds = %if.end111, %if.then87
  %wr.5 = phi i32 [ %wr.0, %if.then87 ], [ %wr.6, %if.end111 ]
  %zPend.4 = phi i32 [ %dec88, %if.then87 ], [ %div113, %if.end111 ]
  %and91 = and i32 %zPend.4, 1
  %tobool92 = icmp ne i32 %and91, 0
  br i1 %tobool92, label %if.then93, label %if.else100

if.then93:                                        ; preds = %while.body90
  %idxprom94 = sext i32 %wr.5 to i64
  %arrayidx95 = getelementptr inbounds i16, i16* %i2, i64 %idxprom94
  store i16 1, i16* %arrayidx95, align 2
  %inc96 = add nsw i32 %wr.5, 1
  %mtfFreq97 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 32
  %arrayidx98 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq97, i64 0, i64 1
  %i17 = load i32, i32* %arrayidx98, align 4
  %inc99 = add nsw i32 %i17, 1
  store i32 %inc99, i32* %arrayidx98, align 4
  br label %if.end107

if.else100:                                       ; preds = %while.body90
  %idxprom101 = sext i32 %wr.5 to i64
  %arrayidx102 = getelementptr inbounds i16, i16* %i2, i64 %idxprom101
  store i16 0, i16* %arrayidx102, align 2
  %inc103 = add nsw i32 %wr.5, 1
  %mtfFreq104 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 32
  %arrayidx105 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq104, i64 0, i64 0
  %i18 = load i32, i32* %arrayidx105, align 8
  %inc106 = add nsw i32 %i18, 1
  store i32 %inc106, i32* %arrayidx105, align 8
  br label %if.end107

if.end107:                                        ; preds = %if.else100, %if.then93
  %wr.6 = phi i32 [ %inc96, %if.then93 ], [ %inc103, %if.else100 ]
  %cmp108 = icmp slt i32 %zPend.4, 2
  br i1 %cmp108, label %if.then110, label %if.end111

if.then110:                                       ; preds = %if.end107
  br label %while.end114

if.end111:                                        ; preds = %if.end107
  %sub112 = sub nsw i32 %zPend.4, 2
  %div113 = sdiv i32 %sub112, 2
  br label %while.body90

while.end114:                                     ; preds = %if.then110
  br label %if.end115

if.end115:                                        ; preds = %while.end114, %for.end84
  %wr.7 = phi i32 [ %wr.6, %while.end114 ], [ %wr.0, %for.end84 ]
  %conv116 = trunc i32 %add to i16
  %idxprom117 = sext i32 %wr.7 to i64
  %arrayidx118 = getelementptr inbounds i16, i16* %i2, i64 %idxprom117
  store i16 %conv116, i16* %arrayidx118, align 2
  %inc119 = add nsw i32 %wr.7, 1
  %mtfFreq120 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 32
  %idxprom121 = sext i32 %add to i64
  %arrayidx122 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq120, i64 0, i64 %idxprom121
  %i19 = load i32, i32* %arrayidx122, align 4
  %inc123 = add nsw i32 %i19, 1
  store i32 %inc123, i32* %arrayidx122, align 4
  %nMTF = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  store i32 %inc119, i32* %nMTF, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @sendMTFValues(%struct.EState* %s) #0 {
entry:
  %cost = alloca [6 x i16], align 2
  %fave = alloca [6 x i32], align 16
  %pos = alloca [6 x i8], align 1
  %inUse16 = alloca [16 x i8], align 16
  %mtfv1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 10
  %i = load i16*, i16** %mtfv1, align 8
  %verbosity = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 28
  %i1 = load i32, i32* %verbosity, align 8
  %cmp = icmp sge i32 %i1, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %i2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 17
  %i3 = load i32, i32* %nblock, align 4
  %nMTF = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i4 = load i32, i32* %nMTF, align 4
  %nInUse = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 21
  %i5 = load i32, i32* %nInUse, align 4
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.115, i64 0, i64 0), i32 %i3, i32 %i4, i32 %i5)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %nInUse2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 21
  %i6 = load i32, i32* %nInUse2, align 4
  %add = add nsw i32 %i6, 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %if.end
  %t.0 = phi i32 [ 0, %if.end ], [ %inc10, %for.inc9 ]
  %cmp3 = icmp slt i32 %t.0, 6
  br i1 %cmp3, label %for.body, label %for.end11

for.body:                                         ; preds = %for.cond
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc, %for.body
  %v.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp5 = icmp slt i32 %v.0, %add
  br i1 %cmp5, label %for.body6, label %for.end

for.body6:                                        ; preds = %for.cond4
  %len = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %idxprom = sext i32 %t.0 to i64
  %arrayidx = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len, i64 0, i64 %idxprom
  %idxprom7 = sext i32 %v.0 to i64
  %arrayidx8 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx, i64 0, i64 %idxprom7
  store i8 15, i8* %arrayidx8, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body6
  %inc = add nsw i32 %v.0, 1
  br label %for.cond4

for.end:                                          ; preds = %for.cond4
  br label %for.inc9

for.inc9:                                         ; preds = %for.end
  %inc10 = add nsw i32 %t.0, 1
  br label %for.cond

for.end11:                                        ; preds = %for.cond
  %nMTF12 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i7 = load i32, i32* %nMTF12, align 4
  %cmp13 = icmp sgt i32 %i7, 0
  br i1 %cmp13, label %if.end15, label %if.then14

if.then14:                                        ; preds = %for.end11
  call void @BZ2_bz__AssertH__fail(i32 3001)
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %for.end11
  %nMTF16 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i8 = load i32, i32* %nMTF16, align 4
  %cmp17 = icmp slt i32 %i8, 200
  br i1 %cmp17, label %if.then18, label %if.else

if.then18:                                        ; preds = %if.end15
  br label %if.end34

if.else:                                          ; preds = %if.end15
  %nMTF19 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i9 = load i32, i32* %nMTF19, align 4
  %cmp20 = icmp slt i32 %i9, 600
  br i1 %cmp20, label %if.then21, label %if.else22

if.then21:                                        ; preds = %if.else
  br label %if.end33

if.else22:                                        ; preds = %if.else
  %nMTF23 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i10 = load i32, i32* %nMTF23, align 4
  %cmp24 = icmp slt i32 %i10, 1200
  br i1 %cmp24, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.else22
  br label %if.end32

if.else26:                                        ; preds = %if.else22
  %nMTF27 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i11 = load i32, i32* %nMTF27, align 4
  %cmp28 = icmp slt i32 %i11, 2400
  br i1 %cmp28, label %if.then29, label %if.else30

if.then29:                                        ; preds = %if.else26
  br label %if.end31

if.else30:                                        ; preds = %if.else26
  br label %if.end31

if.end31:                                         ; preds = %if.else30, %if.then29
  %nGroups.0 = phi i32 [ 5, %if.then29 ], [ 6, %if.else30 ]
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then25
  %nGroups.1 = phi i32 [ 4, %if.then25 ], [ %nGroups.0, %if.end31 ]
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then21
  %nGroups.2 = phi i32 [ 3, %if.then21 ], [ %nGroups.1, %if.end32 ]
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then18
  %nGroups.3 = phi i32 [ 2, %if.then18 ], [ %nGroups.2, %if.end33 ]
  %nMTF35 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i12 = load i32, i32* %nMTF35, align 4
  br label %while.cond

while.cond:                                       ; preds = %for.end95, %if.end34
  %remF.0 = phi i32 [ %i12, %if.end34 ], [ %sub98, %for.end95 ]
  %nPart.0 = phi i32 [ %nGroups.3, %if.end34 ], [ %dec96, %for.end95 ]
  %gs.0 = phi i32 [ 0, %if.end34 ], [ %add97, %for.end95 ]
  %cmp36 = icmp sgt i32 %nPart.0, 0
  br i1 %cmp36, label %while.body, label %while.end99

while.body:                                       ; preds = %while.cond
  %div = sdiv i32 %remF.0, %nPart.0
  %sub = sub nsw i32 %gs.0, 1
  br label %while.cond37

while.cond37:                                     ; preds = %while.body41, %while.body
  %aFreq.0 = phi i32 [ 0, %while.body ], [ %add45, %while.body41 ]
  %ge.0 = phi i32 [ %sub, %while.body ], [ %inc42, %while.body41 ]
  %cmp38 = icmp slt i32 %aFreq.0, %div
  br i1 %cmp38, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond37
  %sub39 = sub nsw i32 %add, 1
  %cmp40 = icmp slt i32 %ge.0, %sub39
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond37
  %i13 = phi i1 [ false, %while.cond37 ], [ %cmp40, %land.rhs ]
  br i1 %i13, label %while.body41, label %while.end

while.body41:                                     ; preds = %land.end
  %inc42 = add nsw i32 %ge.0, 1
  %mtfFreq = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 32
  %idxprom43 = sext i32 %inc42 to i64
  %arrayidx44 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq, i64 0, i64 %idxprom43
  %i14 = load i32, i32* %arrayidx44, align 4
  %add45 = add nsw i32 %aFreq.0, %i14
  br label %while.cond37

while.end:                                        ; preds = %land.end
  %cmp46 = icmp sgt i32 %ge.0, %gs.0
  br i1 %cmp46, label %land.lhs.true, label %if.end58

land.lhs.true:                                    ; preds = %while.end
  %cmp47 = icmp ne i32 %nPart.0, %nGroups.3
  br i1 %cmp47, label %land.lhs.true48, label %if.end58

land.lhs.true48:                                  ; preds = %land.lhs.true
  %cmp49 = icmp ne i32 %nPart.0, 1
  br i1 %cmp49, label %land.lhs.true50, label %if.end58

land.lhs.true50:                                  ; preds = %land.lhs.true48
  %sub51 = sub nsw i32 %nGroups.3, %nPart.0
  %rem = srem i32 %sub51, 2
  %cmp52 = icmp eq i32 %rem, 1
  br i1 %cmp52, label %if.then53, label %if.end58

if.then53:                                        ; preds = %land.lhs.true50
  %mtfFreq54 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 32
  %idxprom55 = sext i32 %ge.0 to i64
  %arrayidx56 = getelementptr inbounds [258 x i32], [258 x i32]* %mtfFreq54, i64 0, i64 %idxprom55
  %i15 = load i32, i32* %arrayidx56, align 4
  %sub57 = sub nsw i32 %aFreq.0, %i15
  %dec = add nsw i32 %ge.0, -1
  br label %if.end58

if.end58:                                         ; preds = %if.then53, %land.lhs.true50, %land.lhs.true48, %land.lhs.true, %while.end
  %aFreq.1 = phi i32 [ %sub57, %if.then53 ], [ %aFreq.0, %land.lhs.true50 ], [ %aFreq.0, %land.lhs.true48 ], [ %aFreq.0, %land.lhs.true ], [ %aFreq.0, %while.end ]
  %ge.1 = phi i32 [ %dec, %if.then53 ], [ %ge.0, %land.lhs.true50 ], [ %ge.0, %land.lhs.true48 ], [ %ge.0, %land.lhs.true ], [ %ge.0, %while.end ]
  %verbosity59 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 28
  %i16 = load i32, i32* %verbosity59, align 8
  %cmp60 = icmp sge i32 %i16, 3
  br i1 %cmp60, label %if.then61, label %if.end68

if.then61:                                        ; preds = %if.end58
  %i17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %conv = sitofp i32 %aFreq.1 to float
  %conv62 = fpext float %conv to double
  %mul = fmul double 1.000000e+02, %conv62
  %nMTF63 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i18 = load i32, i32* %nMTF63, align 4
  %conv64 = sitofp i32 %i18 to float
  %conv65 = fpext float %conv64 to double
  %div66 = fdiv double %mul, %conv65
  %call67 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i17, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3.116, i64 0, i64 0), i32 %nPart.0, i32 %gs.0, i32 %ge.1, i32 %aFreq.1, double %div66)
  br label %if.end68

if.end68:                                         ; preds = %if.then61, %if.end58
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc93, %if.end68
  %v.1 = phi i32 [ 0, %if.end68 ], [ %inc94, %for.inc93 ]
  %cmp70 = icmp slt i32 %v.1, %add
  br i1 %cmp70, label %for.body72, label %for.end95

for.body72:                                       ; preds = %for.cond69
  %cmp73 = icmp sge i32 %v.1, %gs.0
  br i1 %cmp73, label %land.lhs.true75, label %if.else85

land.lhs.true75:                                  ; preds = %for.body72
  %cmp76 = icmp sle i32 %v.1, %ge.1
  br i1 %cmp76, label %if.then78, label %if.else85

if.then78:                                        ; preds = %land.lhs.true75
  %len79 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %sub80 = sub nsw i32 %nPart.0, 1
  %idxprom81 = sext i32 %sub80 to i64
  %arrayidx82 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len79, i64 0, i64 %idxprom81
  %idxprom83 = sext i32 %v.1 to i64
  %arrayidx84 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx82, i64 0, i64 %idxprom83
  store i8 0, i8* %arrayidx84, align 1
  br label %if.end92

if.else85:                                        ; preds = %land.lhs.true75, %for.body72
  %len86 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %sub87 = sub nsw i32 %nPart.0, 1
  %idxprom88 = sext i32 %sub87 to i64
  %arrayidx89 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len86, i64 0, i64 %idxprom88
  %idxprom90 = sext i32 %v.1 to i64
  %arrayidx91 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx89, i64 0, i64 %idxprom90
  store i8 15, i8* %arrayidx91, align 1
  br label %if.end92

if.end92:                                         ; preds = %if.else85, %if.then78
  br label %for.inc93

for.inc93:                                        ; preds = %if.end92
  %inc94 = add nsw i32 %v.1, 1
  br label %for.cond69

for.end95:                                        ; preds = %for.cond69
  %dec96 = add nsw i32 %nPart.0, -1
  %add97 = add nsw i32 %ge.1, 1
  %sub98 = sub nsw i32 %remF.0, %aFreq.1
  br label %while.cond

while.end99:                                      ; preds = %while.cond
  br label %for.cond100

for.cond100:                                      ; preds = %for.inc1702, %while.end99
  %nSelectors.0 = phi i32 [ undef, %while.end99 ], [ %nSelectors.1, %for.inc1702 ]
  %iter.0 = phi i32 [ 0, %while.end99 ], [ %inc1703, %for.inc1702 ]
  %cmp101 = icmp slt i32 %iter.0, 4
  br i1 %cmp101, label %for.body103, label %for.end1704

for.body103:                                      ; preds = %for.cond100
  br label %for.cond104

for.cond104:                                      ; preds = %for.inc110, %for.body103
  %t.1 = phi i32 [ 0, %for.body103 ], [ %inc111, %for.inc110 ]
  %cmp105 = icmp slt i32 %t.1, %nGroups.3
  br i1 %cmp105, label %for.body107, label %for.end112

for.body107:                                      ; preds = %for.cond104
  %idxprom108 = sext i32 %t.1 to i64
  %arrayidx109 = getelementptr inbounds [6 x i32], [6 x i32]* %fave, i64 0, i64 %idxprom108
  store i32 0, i32* %arrayidx109, align 4
  br label %for.inc110

for.inc110:                                       ; preds = %for.body107
  %inc111 = add nsw i32 %t.1, 1
  br label %for.cond104

for.end112:                                       ; preds = %for.cond104
  br label %for.cond113

for.cond113:                                      ; preds = %for.inc128, %for.end112
  %t.2 = phi i32 [ 0, %for.end112 ], [ %inc129, %for.inc128 ]
  %cmp114 = icmp slt i32 %t.2, %nGroups.3
  br i1 %cmp114, label %for.body116, label %for.end130

for.body116:                                      ; preds = %for.cond113
  br label %for.cond117

for.cond117:                                      ; preds = %for.inc125, %for.body116
  %v.2 = phi i32 [ 0, %for.body116 ], [ %inc126, %for.inc125 ]
  %cmp118 = icmp slt i32 %v.2, %add
  br i1 %cmp118, label %for.body120, label %for.end127

for.body120:                                      ; preds = %for.cond117
  %rfreq = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom121 = sext i32 %t.2 to i64
  %arrayidx122 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq, i64 0, i64 %idxprom121
  %idxprom123 = sext i32 %v.2 to i64
  %arrayidx124 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx122, i64 0, i64 %idxprom123
  store i32 0, i32* %arrayidx124, align 4
  br label %for.inc125

for.inc125:                                       ; preds = %for.body120
  %inc126 = add nsw i32 %v.2, 1
  br label %for.cond117

for.end127:                                       ; preds = %for.cond117
  br label %for.inc128

for.inc128:                                       ; preds = %for.end127
  %inc129 = add nsw i32 %t.2, 1
  br label %for.cond113

for.end130:                                       ; preds = %for.cond113
  %cmp131 = icmp eq i32 %nGroups.3, 6
  br i1 %cmp131, label %if.then133, label %if.end186

if.then133:                                       ; preds = %for.end130
  br label %for.cond134

for.cond134:                                      ; preds = %for.inc183, %if.then133
  %v.3 = phi i32 [ 0, %if.then133 ], [ %inc184, %for.inc183 ]
  %cmp135 = icmp slt i32 %v.3, %add
  br i1 %cmp135, label %for.body137, label %for.end185

for.body137:                                      ; preds = %for.cond134
  %len138 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %arrayidx139 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len138, i64 0, i64 1
  %idxprom140 = sext i32 %v.3 to i64
  %arrayidx141 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx139, i64 0, i64 %idxprom140
  %i19 = load i8, i8* %arrayidx141, align 1
  %conv142 = zext i8 %i19 to i32
  %shl = shl i32 %conv142, 16
  %len143 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %arrayidx144 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len143, i64 0, i64 0
  %idxprom145 = sext i32 %v.3 to i64
  %arrayidx146 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx144, i64 0, i64 %idxprom145
  %i20 = load i8, i8* %arrayidx146, align 1
  %conv147 = zext i8 %i20 to i32
  %or = or i32 %shl, %conv147
  %len_pack = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom148 = sext i32 %v.3 to i64
  %arrayidx149 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack, i64 0, i64 %idxprom148
  %arrayidx150 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx149, i64 0, i64 0
  store i32 %or, i32* %arrayidx150, align 8
  %len151 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %arrayidx152 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len151, i64 0, i64 3
  %idxprom153 = sext i32 %v.3 to i64
  %arrayidx154 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx152, i64 0, i64 %idxprom153
  %i21 = load i8, i8* %arrayidx154, align 1
  %conv155 = zext i8 %i21 to i32
  %shl156 = shl i32 %conv155, 16
  %len157 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %arrayidx158 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len157, i64 0, i64 2
  %idxprom159 = sext i32 %v.3 to i64
  %arrayidx160 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx158, i64 0, i64 %idxprom159
  %i22 = load i8, i8* %arrayidx160, align 1
  %conv161 = zext i8 %i22 to i32
  %or162 = or i32 %shl156, %conv161
  %len_pack163 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom164 = sext i32 %v.3 to i64
  %arrayidx165 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack163, i64 0, i64 %idxprom164
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx165, i64 0, i64 1
  store i32 %or162, i32* %arrayidx166, align 4
  %len167 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %arrayidx168 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len167, i64 0, i64 5
  %idxprom169 = sext i32 %v.3 to i64
  %arrayidx170 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx168, i64 0, i64 %idxprom169
  %i23 = load i8, i8* %arrayidx170, align 1
  %conv171 = zext i8 %i23 to i32
  %shl172 = shl i32 %conv171, 16
  %len173 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %arrayidx174 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len173, i64 0, i64 4
  %idxprom175 = sext i32 %v.3 to i64
  %arrayidx176 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx174, i64 0, i64 %idxprom175
  %i24 = load i8, i8* %arrayidx176, align 1
  %conv177 = zext i8 %i24 to i32
  %or178 = or i32 %shl172, %conv177
  %len_pack179 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom180 = sext i32 %v.3 to i64
  %arrayidx181 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack179, i64 0, i64 %idxprom180
  %arrayidx182 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx181, i64 0, i64 2
  store i32 %or178, i32* %arrayidx182, align 8
  br label %for.inc183

for.inc183:                                       ; preds = %for.body137
  %inc184 = add nsw i32 %v.3, 1
  br label %for.cond134

for.end185:                                       ; preds = %for.cond134
  br label %if.end186

if.end186:                                        ; preds = %for.end185, %for.end130
  br label %while.body188

while.body188:                                    ; preds = %if.end1665, %if.end186
  %nSelectors.1 = phi i32 [ 0, %if.end186 ], [ %inc1190, %if.end1665 ]
  %totc.0 = phi i32 [ 0, %if.end186 ], [ %add1183, %if.end1665 ]
  %gs.1 = phi i32 [ 0, %if.end186 ], [ %add1666, %if.end1665 ]
  %nMTF189 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i25 = load i32, i32* %nMTF189, align 4
  %cmp190 = icmp sge i32 %gs.1, %i25
  br i1 %cmp190, label %if.then192, label %if.end193

if.then192:                                       ; preds = %while.body188
  br label %while.end1667

if.end193:                                        ; preds = %while.body188
  %add194 = add nsw i32 %gs.1, 50
  %sub195 = sub nsw i32 %add194, 1
  %nMTF196 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i26 = load i32, i32* %nMTF196, align 4
  %cmp197 = icmp sge i32 %sub195, %i26
  br i1 %cmp197, label %if.then199, label %if.end202

if.then199:                                       ; preds = %if.end193
  %nMTF200 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i27 = load i32, i32* %nMTF200, align 4
  %sub201 = sub nsw i32 %i27, 1
  br label %if.end202

if.end202:                                        ; preds = %if.then199, %if.end193
  %ge.2 = phi i32 [ %sub201, %if.then199 ], [ %sub195, %if.end193 ]
  br label %for.cond203

for.cond203:                                      ; preds = %for.inc209, %if.end202
  %t.3 = phi i32 [ 0, %if.end202 ], [ %inc210, %for.inc209 ]
  %cmp204 = icmp slt i32 %t.3, %nGroups.3
  br i1 %cmp204, label %for.body206, label %for.end211

for.body206:                                      ; preds = %for.cond203
  %idxprom207 = sext i32 %t.3 to i64
  %arrayidx208 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 %idxprom207
  store i16 0, i16* %arrayidx208, align 2
  br label %for.inc209

for.inc209:                                       ; preds = %for.body206
  %inc210 = add nsw i32 %t.3, 1
  br label %for.cond203

for.end211:                                       ; preds = %for.cond203
  %cmp212 = icmp eq i32 %nGroups.3, 6
  br i1 %cmp212, label %land.lhs.true214, label %if.else1136

land.lhs.true214:                                 ; preds = %for.end211
  %sub215 = sub nsw i32 %ge.2, %gs.1
  %add216 = add nsw i32 %sub215, 1
  %cmp217 = icmp eq i32 50, %add216
  br i1 %cmp217, label %if.then219, label %if.else1136

if.then219:                                       ; preds = %land.lhs.true214
  %add220 = add nsw i32 %gs.1, 0
  %idxprom221 = sext i32 %add220 to i64
  %arrayidx222 = getelementptr inbounds i16, i16* %i, i64 %idxprom221
  %i28 = load i16, i16* %arrayidx222, align 2
  %len_pack223 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom224 = zext i16 %i28 to i64
  %arrayidx225 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack223, i64 0, i64 %idxprom224
  %arrayidx226 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx225, i64 0, i64 0
  %i29 = load i32, i32* %arrayidx226, align 8
  %add227 = add i32 0, %i29
  %len_pack228 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom229 = zext i16 %i28 to i64
  %arrayidx230 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack228, i64 0, i64 %idxprom229
  %arrayidx231 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 1
  %i30 = load i32, i32* %arrayidx231, align 4
  %add232 = add i32 0, %i30
  %len_pack233 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom234 = zext i16 %i28 to i64
  %arrayidx235 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack233, i64 0, i64 %idxprom234
  %arrayidx236 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx235, i64 0, i64 2
  %i31 = load i32, i32* %arrayidx236, align 8
  %add237 = add i32 0, %i31
  %add238 = add nsw i32 %gs.1, 1
  %idxprom239 = sext i32 %add238 to i64
  %arrayidx240 = getelementptr inbounds i16, i16* %i, i64 %idxprom239
  %i32 = load i16, i16* %arrayidx240, align 2
  %len_pack241 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom242 = zext i16 %i32 to i64
  %arrayidx243 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack241, i64 0, i64 %idxprom242
  %arrayidx244 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx243, i64 0, i64 0
  %i33 = load i32, i32* %arrayidx244, align 8
  %add245 = add i32 %add227, %i33
  %len_pack246 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom247 = zext i16 %i32 to i64
  %arrayidx248 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack246, i64 0, i64 %idxprom247
  %arrayidx249 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx248, i64 0, i64 1
  %i34 = load i32, i32* %arrayidx249, align 4
  %add250 = add i32 %add232, %i34
  %len_pack251 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom252 = zext i16 %i32 to i64
  %arrayidx253 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack251, i64 0, i64 %idxprom252
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx253, i64 0, i64 2
  %i35 = load i32, i32* %arrayidx254, align 8
  %add255 = add i32 %add237, %i35
  %add256 = add nsw i32 %gs.1, 2
  %idxprom257 = sext i32 %add256 to i64
  %arrayidx258 = getelementptr inbounds i16, i16* %i, i64 %idxprom257
  %i36 = load i16, i16* %arrayidx258, align 2
  %len_pack259 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom260 = zext i16 %i36 to i64
  %arrayidx261 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack259, i64 0, i64 %idxprom260
  %arrayidx262 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx261, i64 0, i64 0
  %i37 = load i32, i32* %arrayidx262, align 8
  %add263 = add i32 %add245, %i37
  %len_pack264 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom265 = zext i16 %i36 to i64
  %arrayidx266 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack264, i64 0, i64 %idxprom265
  %arrayidx267 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx266, i64 0, i64 1
  %i38 = load i32, i32* %arrayidx267, align 4
  %add268 = add i32 %add250, %i38
  %len_pack269 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom270 = zext i16 %i36 to i64
  %arrayidx271 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack269, i64 0, i64 %idxprom270
  %arrayidx272 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx271, i64 0, i64 2
  %i39 = load i32, i32* %arrayidx272, align 8
  %add273 = add i32 %add255, %i39
  %add274 = add nsw i32 %gs.1, 3
  %idxprom275 = sext i32 %add274 to i64
  %arrayidx276 = getelementptr inbounds i16, i16* %i, i64 %idxprom275
  %i40 = load i16, i16* %arrayidx276, align 2
  %len_pack277 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom278 = zext i16 %i40 to i64
  %arrayidx279 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack277, i64 0, i64 %idxprom278
  %arrayidx280 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 0
  %i41 = load i32, i32* %arrayidx280, align 8
  %add281 = add i32 %add263, %i41
  %len_pack282 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom283 = zext i16 %i40 to i64
  %arrayidx284 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack282, i64 0, i64 %idxprom283
  %arrayidx285 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx284, i64 0, i64 1
  %i42 = load i32, i32* %arrayidx285, align 4
  %add286 = add i32 %add268, %i42
  %len_pack287 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom288 = zext i16 %i40 to i64
  %arrayidx289 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack287, i64 0, i64 %idxprom288
  %arrayidx290 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 2
  %i43 = load i32, i32* %arrayidx290, align 8
  %add291 = add i32 %add273, %i43
  %add292 = add nsw i32 %gs.1, 4
  %idxprom293 = sext i32 %add292 to i64
  %arrayidx294 = getelementptr inbounds i16, i16* %i, i64 %idxprom293
  %i44 = load i16, i16* %arrayidx294, align 2
  %len_pack295 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom296 = zext i16 %i44 to i64
  %arrayidx297 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack295, i64 0, i64 %idxprom296
  %arrayidx298 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx297, i64 0, i64 0
  %i45 = load i32, i32* %arrayidx298, align 8
  %add299 = add i32 %add281, %i45
  %len_pack300 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom301 = zext i16 %i44 to i64
  %arrayidx302 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack300, i64 0, i64 %idxprom301
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx302, i64 0, i64 1
  %i46 = load i32, i32* %arrayidx303, align 4
  %add304 = add i32 %add286, %i46
  %len_pack305 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom306 = zext i16 %i44 to i64
  %arrayidx307 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack305, i64 0, i64 %idxprom306
  %arrayidx308 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 2
  %i47 = load i32, i32* %arrayidx308, align 8
  %add309 = add i32 %add291, %i47
  %add310 = add nsw i32 %gs.1, 5
  %idxprom311 = sext i32 %add310 to i64
  %arrayidx312 = getelementptr inbounds i16, i16* %i, i64 %idxprom311
  %i48 = load i16, i16* %arrayidx312, align 2
  %len_pack313 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom314 = zext i16 %i48 to i64
  %arrayidx315 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack313, i64 0, i64 %idxprom314
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx315, i64 0, i64 0
  %i49 = load i32, i32* %arrayidx316, align 8
  %add317 = add i32 %add299, %i49
  %len_pack318 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom319 = zext i16 %i48 to i64
  %arrayidx320 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack318, i64 0, i64 %idxprom319
  %arrayidx321 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx320, i64 0, i64 1
  %i50 = load i32, i32* %arrayidx321, align 4
  %add322 = add i32 %add304, %i50
  %len_pack323 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom324 = zext i16 %i48 to i64
  %arrayidx325 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack323, i64 0, i64 %idxprom324
  %arrayidx326 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx325, i64 0, i64 2
  %i51 = load i32, i32* %arrayidx326, align 8
  %add327 = add i32 %add309, %i51
  %add328 = add nsw i32 %gs.1, 6
  %idxprom329 = sext i32 %add328 to i64
  %arrayidx330 = getelementptr inbounds i16, i16* %i, i64 %idxprom329
  %i52 = load i16, i16* %arrayidx330, align 2
  %len_pack331 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom332 = zext i16 %i52 to i64
  %arrayidx333 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack331, i64 0, i64 %idxprom332
  %arrayidx334 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx333, i64 0, i64 0
  %i53 = load i32, i32* %arrayidx334, align 8
  %add335 = add i32 %add317, %i53
  %len_pack336 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom337 = zext i16 %i52 to i64
  %arrayidx338 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack336, i64 0, i64 %idxprom337
  %arrayidx339 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx338, i64 0, i64 1
  %i54 = load i32, i32* %arrayidx339, align 4
  %add340 = add i32 %add322, %i54
  %len_pack341 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom342 = zext i16 %i52 to i64
  %arrayidx343 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack341, i64 0, i64 %idxprom342
  %arrayidx344 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx343, i64 0, i64 2
  %i55 = load i32, i32* %arrayidx344, align 8
  %add345 = add i32 %add327, %i55
  %add346 = add nsw i32 %gs.1, 7
  %idxprom347 = sext i32 %add346 to i64
  %arrayidx348 = getelementptr inbounds i16, i16* %i, i64 %idxprom347
  %i56 = load i16, i16* %arrayidx348, align 2
  %len_pack349 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom350 = zext i16 %i56 to i64
  %arrayidx351 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack349, i64 0, i64 %idxprom350
  %arrayidx352 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx351, i64 0, i64 0
  %i57 = load i32, i32* %arrayidx352, align 8
  %add353 = add i32 %add335, %i57
  %len_pack354 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom355 = zext i16 %i56 to i64
  %arrayidx356 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack354, i64 0, i64 %idxprom355
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx356, i64 0, i64 1
  %i58 = load i32, i32* %arrayidx357, align 4
  %add358 = add i32 %add340, %i58
  %len_pack359 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom360 = zext i16 %i56 to i64
  %arrayidx361 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack359, i64 0, i64 %idxprom360
  %arrayidx362 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx361, i64 0, i64 2
  %i59 = load i32, i32* %arrayidx362, align 8
  %add363 = add i32 %add345, %i59
  %add364 = add nsw i32 %gs.1, 8
  %idxprom365 = sext i32 %add364 to i64
  %arrayidx366 = getelementptr inbounds i16, i16* %i, i64 %idxprom365
  %i60 = load i16, i16* %arrayidx366, align 2
  %len_pack367 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom368 = zext i16 %i60 to i64
  %arrayidx369 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack367, i64 0, i64 %idxprom368
  %arrayidx370 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx369, i64 0, i64 0
  %i61 = load i32, i32* %arrayidx370, align 8
  %add371 = add i32 %add353, %i61
  %len_pack372 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom373 = zext i16 %i60 to i64
  %arrayidx374 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack372, i64 0, i64 %idxprom373
  %arrayidx375 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx374, i64 0, i64 1
  %i62 = load i32, i32* %arrayidx375, align 4
  %add376 = add i32 %add358, %i62
  %len_pack377 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom378 = zext i16 %i60 to i64
  %arrayidx379 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack377, i64 0, i64 %idxprom378
  %arrayidx380 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx379, i64 0, i64 2
  %i63 = load i32, i32* %arrayidx380, align 8
  %add381 = add i32 %add363, %i63
  %add382 = add nsw i32 %gs.1, 9
  %idxprom383 = sext i32 %add382 to i64
  %arrayidx384 = getelementptr inbounds i16, i16* %i, i64 %idxprom383
  %i64 = load i16, i16* %arrayidx384, align 2
  %len_pack385 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom386 = zext i16 %i64 to i64
  %arrayidx387 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack385, i64 0, i64 %idxprom386
  %arrayidx388 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx387, i64 0, i64 0
  %i65 = load i32, i32* %arrayidx388, align 8
  %add389 = add i32 %add371, %i65
  %len_pack390 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom391 = zext i16 %i64 to i64
  %arrayidx392 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack390, i64 0, i64 %idxprom391
  %arrayidx393 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx392, i64 0, i64 1
  %i66 = load i32, i32* %arrayidx393, align 4
  %add394 = add i32 %add376, %i66
  %len_pack395 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom396 = zext i16 %i64 to i64
  %arrayidx397 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack395, i64 0, i64 %idxprom396
  %arrayidx398 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx397, i64 0, i64 2
  %i67 = load i32, i32* %arrayidx398, align 8
  %add399 = add i32 %add381, %i67
  %add400 = add nsw i32 %gs.1, 10
  %idxprom401 = sext i32 %add400 to i64
  %arrayidx402 = getelementptr inbounds i16, i16* %i, i64 %idxprom401
  %i68 = load i16, i16* %arrayidx402, align 2
  %len_pack403 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom404 = zext i16 %i68 to i64
  %arrayidx405 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack403, i64 0, i64 %idxprom404
  %arrayidx406 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx405, i64 0, i64 0
  %i69 = load i32, i32* %arrayidx406, align 8
  %add407 = add i32 %add389, %i69
  %len_pack408 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom409 = zext i16 %i68 to i64
  %arrayidx410 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack408, i64 0, i64 %idxprom409
  %arrayidx411 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 1
  %i70 = load i32, i32* %arrayidx411, align 4
  %add412 = add i32 %add394, %i70
  %len_pack413 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom414 = zext i16 %i68 to i64
  %arrayidx415 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack413, i64 0, i64 %idxprom414
  %arrayidx416 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx415, i64 0, i64 2
  %i71 = load i32, i32* %arrayidx416, align 8
  %add417 = add i32 %add399, %i71
  %add418 = add nsw i32 %gs.1, 11
  %idxprom419 = sext i32 %add418 to i64
  %arrayidx420 = getelementptr inbounds i16, i16* %i, i64 %idxprom419
  %i72 = load i16, i16* %arrayidx420, align 2
  %len_pack421 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom422 = zext i16 %i72 to i64
  %arrayidx423 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack421, i64 0, i64 %idxprom422
  %arrayidx424 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx423, i64 0, i64 0
  %i73 = load i32, i32* %arrayidx424, align 8
  %add425 = add i32 %add407, %i73
  %len_pack426 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom427 = zext i16 %i72 to i64
  %arrayidx428 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack426, i64 0, i64 %idxprom427
  %arrayidx429 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx428, i64 0, i64 1
  %i74 = load i32, i32* %arrayidx429, align 4
  %add430 = add i32 %add412, %i74
  %len_pack431 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom432 = zext i16 %i72 to i64
  %arrayidx433 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack431, i64 0, i64 %idxprom432
  %arrayidx434 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx433, i64 0, i64 2
  %i75 = load i32, i32* %arrayidx434, align 8
  %add435 = add i32 %add417, %i75
  %add436 = add nsw i32 %gs.1, 12
  %idxprom437 = sext i32 %add436 to i64
  %arrayidx438 = getelementptr inbounds i16, i16* %i, i64 %idxprom437
  %i76 = load i16, i16* %arrayidx438, align 2
  %len_pack439 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom440 = zext i16 %i76 to i64
  %arrayidx441 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack439, i64 0, i64 %idxprom440
  %arrayidx442 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx441, i64 0, i64 0
  %i77 = load i32, i32* %arrayidx442, align 8
  %add443 = add i32 %add425, %i77
  %len_pack444 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom445 = zext i16 %i76 to i64
  %arrayidx446 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack444, i64 0, i64 %idxprom445
  %arrayidx447 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx446, i64 0, i64 1
  %i78 = load i32, i32* %arrayidx447, align 4
  %add448 = add i32 %add430, %i78
  %len_pack449 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom450 = zext i16 %i76 to i64
  %arrayidx451 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack449, i64 0, i64 %idxprom450
  %arrayidx452 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx451, i64 0, i64 2
  %i79 = load i32, i32* %arrayidx452, align 8
  %add453 = add i32 %add435, %i79
  %add454 = add nsw i32 %gs.1, 13
  %idxprom455 = sext i32 %add454 to i64
  %arrayidx456 = getelementptr inbounds i16, i16* %i, i64 %idxprom455
  %i80 = load i16, i16* %arrayidx456, align 2
  %len_pack457 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom458 = zext i16 %i80 to i64
  %arrayidx459 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack457, i64 0, i64 %idxprom458
  %arrayidx460 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 0
  %i81 = load i32, i32* %arrayidx460, align 8
  %add461 = add i32 %add443, %i81
  %len_pack462 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom463 = zext i16 %i80 to i64
  %arrayidx464 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack462, i64 0, i64 %idxprom463
  %arrayidx465 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx464, i64 0, i64 1
  %i82 = load i32, i32* %arrayidx465, align 4
  %add466 = add i32 %add448, %i82
  %len_pack467 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom468 = zext i16 %i80 to i64
  %arrayidx469 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack467, i64 0, i64 %idxprom468
  %arrayidx470 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx469, i64 0, i64 2
  %i83 = load i32, i32* %arrayidx470, align 8
  %add471 = add i32 %add453, %i83
  %add472 = add nsw i32 %gs.1, 14
  %idxprom473 = sext i32 %add472 to i64
  %arrayidx474 = getelementptr inbounds i16, i16* %i, i64 %idxprom473
  %i84 = load i16, i16* %arrayidx474, align 2
  %len_pack475 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom476 = zext i16 %i84 to i64
  %arrayidx477 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack475, i64 0, i64 %idxprom476
  %arrayidx478 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx477, i64 0, i64 0
  %i85 = load i32, i32* %arrayidx478, align 8
  %add479 = add i32 %add461, %i85
  %len_pack480 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom481 = zext i16 %i84 to i64
  %arrayidx482 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack480, i64 0, i64 %idxprom481
  %arrayidx483 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 1
  %i86 = load i32, i32* %arrayidx483, align 4
  %add484 = add i32 %add466, %i86
  %len_pack485 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom486 = zext i16 %i84 to i64
  %arrayidx487 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack485, i64 0, i64 %idxprom486
  %arrayidx488 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx487, i64 0, i64 2
  %i87 = load i32, i32* %arrayidx488, align 8
  %add489 = add i32 %add471, %i87
  %add490 = add nsw i32 %gs.1, 15
  %idxprom491 = sext i32 %add490 to i64
  %arrayidx492 = getelementptr inbounds i16, i16* %i, i64 %idxprom491
  %i88 = load i16, i16* %arrayidx492, align 2
  %len_pack493 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom494 = zext i16 %i88 to i64
  %arrayidx495 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack493, i64 0, i64 %idxprom494
  %arrayidx496 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx495, i64 0, i64 0
  %i89 = load i32, i32* %arrayidx496, align 8
  %add497 = add i32 %add479, %i89
  %len_pack498 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom499 = zext i16 %i88 to i64
  %arrayidx500 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack498, i64 0, i64 %idxprom499
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx500, i64 0, i64 1
  %i90 = load i32, i32* %arrayidx501, align 4
  %add502 = add i32 %add484, %i90
  %len_pack503 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom504 = zext i16 %i88 to i64
  %arrayidx505 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack503, i64 0, i64 %idxprom504
  %arrayidx506 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx505, i64 0, i64 2
  %i91 = load i32, i32* %arrayidx506, align 8
  %add507 = add i32 %add489, %i91
  %add508 = add nsw i32 %gs.1, 16
  %idxprom509 = sext i32 %add508 to i64
  %arrayidx510 = getelementptr inbounds i16, i16* %i, i64 %idxprom509
  %i92 = load i16, i16* %arrayidx510, align 2
  %len_pack511 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom512 = zext i16 %i92 to i64
  %arrayidx513 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack511, i64 0, i64 %idxprom512
  %arrayidx514 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx513, i64 0, i64 0
  %i93 = load i32, i32* %arrayidx514, align 8
  %add515 = add i32 %add497, %i93
  %len_pack516 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom517 = zext i16 %i92 to i64
  %arrayidx518 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack516, i64 0, i64 %idxprom517
  %arrayidx519 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx518, i64 0, i64 1
  %i94 = load i32, i32* %arrayidx519, align 4
  %add520 = add i32 %add502, %i94
  %len_pack521 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom522 = zext i16 %i92 to i64
  %arrayidx523 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack521, i64 0, i64 %idxprom522
  %arrayidx524 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx523, i64 0, i64 2
  %i95 = load i32, i32* %arrayidx524, align 8
  %add525 = add i32 %add507, %i95
  %add526 = add nsw i32 %gs.1, 17
  %idxprom527 = sext i32 %add526 to i64
  %arrayidx528 = getelementptr inbounds i16, i16* %i, i64 %idxprom527
  %i96 = load i16, i16* %arrayidx528, align 2
  %len_pack529 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom530 = zext i16 %i96 to i64
  %arrayidx531 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack529, i64 0, i64 %idxprom530
  %arrayidx532 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 0
  %i97 = load i32, i32* %arrayidx532, align 8
  %add533 = add i32 %add515, %i97
  %len_pack534 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom535 = zext i16 %i96 to i64
  %arrayidx536 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack534, i64 0, i64 %idxprom535
  %arrayidx537 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx536, i64 0, i64 1
  %i98 = load i32, i32* %arrayidx537, align 4
  %add538 = add i32 %add520, %i98
  %len_pack539 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom540 = zext i16 %i96 to i64
  %arrayidx541 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack539, i64 0, i64 %idxprom540
  %arrayidx542 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx541, i64 0, i64 2
  %i99 = load i32, i32* %arrayidx542, align 8
  %add543 = add i32 %add525, %i99
  %add544 = add nsw i32 %gs.1, 18
  %idxprom545 = sext i32 %add544 to i64
  %arrayidx546 = getelementptr inbounds i16, i16* %i, i64 %idxprom545
  %i100 = load i16, i16* %arrayidx546, align 2
  %len_pack547 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom548 = zext i16 %i100 to i64
  %arrayidx549 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack547, i64 0, i64 %idxprom548
  %arrayidx550 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx549, i64 0, i64 0
  %i101 = load i32, i32* %arrayidx550, align 8
  %add551 = add i32 %add533, %i101
  %len_pack552 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom553 = zext i16 %i100 to i64
  %arrayidx554 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack552, i64 0, i64 %idxprom553
  %arrayidx555 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx554, i64 0, i64 1
  %i102 = load i32, i32* %arrayidx555, align 4
  %add556 = add i32 %add538, %i102
  %len_pack557 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom558 = zext i16 %i100 to i64
  %arrayidx559 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack557, i64 0, i64 %idxprom558
  %arrayidx560 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx559, i64 0, i64 2
  %i103 = load i32, i32* %arrayidx560, align 8
  %add561 = add i32 %add543, %i103
  %add562 = add nsw i32 %gs.1, 19
  %idxprom563 = sext i32 %add562 to i64
  %arrayidx564 = getelementptr inbounds i16, i16* %i, i64 %idxprom563
  %i104 = load i16, i16* %arrayidx564, align 2
  %len_pack565 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom566 = zext i16 %i104 to i64
  %arrayidx567 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack565, i64 0, i64 %idxprom566
  %arrayidx568 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx567, i64 0, i64 0
  %i105 = load i32, i32* %arrayidx568, align 8
  %add569 = add i32 %add551, %i105
  %len_pack570 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom571 = zext i16 %i104 to i64
  %arrayidx572 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack570, i64 0, i64 %idxprom571
  %arrayidx573 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx572, i64 0, i64 1
  %i106 = load i32, i32* %arrayidx573, align 4
  %add574 = add i32 %add556, %i106
  %len_pack575 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom576 = zext i16 %i104 to i64
  %arrayidx577 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack575, i64 0, i64 %idxprom576
  %arrayidx578 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx577, i64 0, i64 2
  %i107 = load i32, i32* %arrayidx578, align 8
  %add579 = add i32 %add561, %i107
  %add580 = add nsw i32 %gs.1, 20
  %idxprom581 = sext i32 %add580 to i64
  %arrayidx582 = getelementptr inbounds i16, i16* %i, i64 %idxprom581
  %i108 = load i16, i16* %arrayidx582, align 2
  %len_pack583 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom584 = zext i16 %i108 to i64
  %arrayidx585 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack583, i64 0, i64 %idxprom584
  %arrayidx586 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx585, i64 0, i64 0
  %i109 = load i32, i32* %arrayidx586, align 8
  %add587 = add i32 %add569, %i109
  %len_pack588 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom589 = zext i16 %i108 to i64
  %arrayidx590 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack588, i64 0, i64 %idxprom589
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx590, i64 0, i64 1
  %i110 = load i32, i32* %arrayidx591, align 4
  %add592 = add i32 %add574, %i110
  %len_pack593 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom594 = zext i16 %i108 to i64
  %arrayidx595 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack593, i64 0, i64 %idxprom594
  %arrayidx596 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx595, i64 0, i64 2
  %i111 = load i32, i32* %arrayidx596, align 8
  %add597 = add i32 %add579, %i111
  %add598 = add nsw i32 %gs.1, 21
  %idxprom599 = sext i32 %add598 to i64
  %arrayidx600 = getelementptr inbounds i16, i16* %i, i64 %idxprom599
  %i112 = load i16, i16* %arrayidx600, align 2
  %len_pack601 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom602 = zext i16 %i112 to i64
  %arrayidx603 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack601, i64 0, i64 %idxprom602
  %arrayidx604 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx603, i64 0, i64 0
  %i113 = load i32, i32* %arrayidx604, align 8
  %add605 = add i32 %add587, %i113
  %len_pack606 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom607 = zext i16 %i112 to i64
  %arrayidx608 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack606, i64 0, i64 %idxprom607
  %arrayidx609 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx608, i64 0, i64 1
  %i114 = load i32, i32* %arrayidx609, align 4
  %add610 = add i32 %add592, %i114
  %len_pack611 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom612 = zext i16 %i112 to i64
  %arrayidx613 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack611, i64 0, i64 %idxprom612
  %arrayidx614 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx613, i64 0, i64 2
  %i115 = load i32, i32* %arrayidx614, align 8
  %add615 = add i32 %add597, %i115
  %add616 = add nsw i32 %gs.1, 22
  %idxprom617 = sext i32 %add616 to i64
  %arrayidx618 = getelementptr inbounds i16, i16* %i, i64 %idxprom617
  %i116 = load i16, i16* %arrayidx618, align 2
  %len_pack619 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom620 = zext i16 %i116 to i64
  %arrayidx621 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack619, i64 0, i64 %idxprom620
  %arrayidx622 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx621, i64 0, i64 0
  %i117 = load i32, i32* %arrayidx622, align 8
  %add623 = add i32 %add605, %i117
  %len_pack624 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom625 = zext i16 %i116 to i64
  %arrayidx626 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack624, i64 0, i64 %idxprom625
  %arrayidx627 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx626, i64 0, i64 1
  %i118 = load i32, i32* %arrayidx627, align 4
  %add628 = add i32 %add610, %i118
  %len_pack629 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom630 = zext i16 %i116 to i64
  %arrayidx631 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack629, i64 0, i64 %idxprom630
  %arrayidx632 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx631, i64 0, i64 2
  %i119 = load i32, i32* %arrayidx632, align 8
  %add633 = add i32 %add615, %i119
  %add634 = add nsw i32 %gs.1, 23
  %idxprom635 = sext i32 %add634 to i64
  %arrayidx636 = getelementptr inbounds i16, i16* %i, i64 %idxprom635
  %i120 = load i16, i16* %arrayidx636, align 2
  %len_pack637 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom638 = zext i16 %i120 to i64
  %arrayidx639 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack637, i64 0, i64 %idxprom638
  %arrayidx640 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx639, i64 0, i64 0
  %i121 = load i32, i32* %arrayidx640, align 8
  %add641 = add i32 %add623, %i121
  %len_pack642 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom643 = zext i16 %i120 to i64
  %arrayidx644 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack642, i64 0, i64 %idxprom643
  %arrayidx645 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 1
  %i122 = load i32, i32* %arrayidx645, align 4
  %add646 = add i32 %add628, %i122
  %len_pack647 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom648 = zext i16 %i120 to i64
  %arrayidx649 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack647, i64 0, i64 %idxprom648
  %arrayidx650 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx649, i64 0, i64 2
  %i123 = load i32, i32* %arrayidx650, align 8
  %add651 = add i32 %add633, %i123
  %add652 = add nsw i32 %gs.1, 24
  %idxprom653 = sext i32 %add652 to i64
  %arrayidx654 = getelementptr inbounds i16, i16* %i, i64 %idxprom653
  %i124 = load i16, i16* %arrayidx654, align 2
  %len_pack655 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom656 = zext i16 %i124 to i64
  %arrayidx657 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack655, i64 0, i64 %idxprom656
  %arrayidx658 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx657, i64 0, i64 0
  %i125 = load i32, i32* %arrayidx658, align 8
  %add659 = add i32 %add641, %i125
  %len_pack660 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom661 = zext i16 %i124 to i64
  %arrayidx662 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack660, i64 0, i64 %idxprom661
  %arrayidx663 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx662, i64 0, i64 1
  %i126 = load i32, i32* %arrayidx663, align 4
  %add664 = add i32 %add646, %i126
  %len_pack665 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom666 = zext i16 %i124 to i64
  %arrayidx667 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack665, i64 0, i64 %idxprom666
  %arrayidx668 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx667, i64 0, i64 2
  %i127 = load i32, i32* %arrayidx668, align 8
  %add669 = add i32 %add651, %i127
  %add670 = add nsw i32 %gs.1, 25
  %idxprom671 = sext i32 %add670 to i64
  %arrayidx672 = getelementptr inbounds i16, i16* %i, i64 %idxprom671
  %i128 = load i16, i16* %arrayidx672, align 2
  %len_pack673 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom674 = zext i16 %i128 to i64
  %arrayidx675 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack673, i64 0, i64 %idxprom674
  %arrayidx676 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx675, i64 0, i64 0
  %i129 = load i32, i32* %arrayidx676, align 8
  %add677 = add i32 %add659, %i129
  %len_pack678 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom679 = zext i16 %i128 to i64
  %arrayidx680 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack678, i64 0, i64 %idxprom679
  %arrayidx681 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx680, i64 0, i64 1
  %i130 = load i32, i32* %arrayidx681, align 4
  %add682 = add i32 %add664, %i130
  %len_pack683 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom684 = zext i16 %i128 to i64
  %arrayidx685 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack683, i64 0, i64 %idxprom684
  %arrayidx686 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx685, i64 0, i64 2
  %i131 = load i32, i32* %arrayidx686, align 8
  %add687 = add i32 %add669, %i131
  %add688 = add nsw i32 %gs.1, 26
  %idxprom689 = sext i32 %add688 to i64
  %arrayidx690 = getelementptr inbounds i16, i16* %i, i64 %idxprom689
  %i132 = load i16, i16* %arrayidx690, align 2
  %len_pack691 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom692 = zext i16 %i132 to i64
  %arrayidx693 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack691, i64 0, i64 %idxprom692
  %arrayidx694 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx693, i64 0, i64 0
  %i133 = load i32, i32* %arrayidx694, align 8
  %add695 = add i32 %add677, %i133
  %len_pack696 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom697 = zext i16 %i132 to i64
  %arrayidx698 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack696, i64 0, i64 %idxprom697
  %arrayidx699 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx698, i64 0, i64 1
  %i134 = load i32, i32* %arrayidx699, align 4
  %add700 = add i32 %add682, %i134
  %len_pack701 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom702 = zext i16 %i132 to i64
  %arrayidx703 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack701, i64 0, i64 %idxprom702
  %arrayidx704 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx703, i64 0, i64 2
  %i135 = load i32, i32* %arrayidx704, align 8
  %add705 = add i32 %add687, %i135
  %add706 = add nsw i32 %gs.1, 27
  %idxprom707 = sext i32 %add706 to i64
  %arrayidx708 = getelementptr inbounds i16, i16* %i, i64 %idxprom707
  %i136 = load i16, i16* %arrayidx708, align 2
  %len_pack709 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom710 = zext i16 %i136 to i64
  %arrayidx711 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack709, i64 0, i64 %idxprom710
  %arrayidx712 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx711, i64 0, i64 0
  %i137 = load i32, i32* %arrayidx712, align 8
  %add713 = add i32 %add695, %i137
  %len_pack714 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom715 = zext i16 %i136 to i64
  %arrayidx716 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack714, i64 0, i64 %idxprom715
  %arrayidx717 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx716, i64 0, i64 1
  %i138 = load i32, i32* %arrayidx717, align 4
  %add718 = add i32 %add700, %i138
  %len_pack719 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom720 = zext i16 %i136 to i64
  %arrayidx721 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack719, i64 0, i64 %idxprom720
  %arrayidx722 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx721, i64 0, i64 2
  %i139 = load i32, i32* %arrayidx722, align 8
  %add723 = add i32 %add705, %i139
  %add724 = add nsw i32 %gs.1, 28
  %idxprom725 = sext i32 %add724 to i64
  %arrayidx726 = getelementptr inbounds i16, i16* %i, i64 %idxprom725
  %i140 = load i16, i16* %arrayidx726, align 2
  %len_pack727 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom728 = zext i16 %i140 to i64
  %arrayidx729 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack727, i64 0, i64 %idxprom728
  %arrayidx730 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx729, i64 0, i64 0
  %i141 = load i32, i32* %arrayidx730, align 8
  %add731 = add i32 %add713, %i141
  %len_pack732 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom733 = zext i16 %i140 to i64
  %arrayidx734 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack732, i64 0, i64 %idxprom733
  %arrayidx735 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx734, i64 0, i64 1
  %i142 = load i32, i32* %arrayidx735, align 4
  %add736 = add i32 %add718, %i142
  %len_pack737 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom738 = zext i16 %i140 to i64
  %arrayidx739 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack737, i64 0, i64 %idxprom738
  %arrayidx740 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx739, i64 0, i64 2
  %i143 = load i32, i32* %arrayidx740, align 8
  %add741 = add i32 %add723, %i143
  %add742 = add nsw i32 %gs.1, 29
  %idxprom743 = sext i32 %add742 to i64
  %arrayidx744 = getelementptr inbounds i16, i16* %i, i64 %idxprom743
  %i144 = load i16, i16* %arrayidx744, align 2
  %len_pack745 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom746 = zext i16 %i144 to i64
  %arrayidx747 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack745, i64 0, i64 %idxprom746
  %arrayidx748 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx747, i64 0, i64 0
  %i145 = load i32, i32* %arrayidx748, align 8
  %add749 = add i32 %add731, %i145
  %len_pack750 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom751 = zext i16 %i144 to i64
  %arrayidx752 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack750, i64 0, i64 %idxprom751
  %arrayidx753 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx752, i64 0, i64 1
  %i146 = load i32, i32* %arrayidx753, align 4
  %add754 = add i32 %add736, %i146
  %len_pack755 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom756 = zext i16 %i144 to i64
  %arrayidx757 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack755, i64 0, i64 %idxprom756
  %arrayidx758 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx757, i64 0, i64 2
  %i147 = load i32, i32* %arrayidx758, align 8
  %add759 = add i32 %add741, %i147
  %add760 = add nsw i32 %gs.1, 30
  %idxprom761 = sext i32 %add760 to i64
  %arrayidx762 = getelementptr inbounds i16, i16* %i, i64 %idxprom761
  %i148 = load i16, i16* %arrayidx762, align 2
  %len_pack763 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom764 = zext i16 %i148 to i64
  %arrayidx765 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack763, i64 0, i64 %idxprom764
  %arrayidx766 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx765, i64 0, i64 0
  %i149 = load i32, i32* %arrayidx766, align 8
  %add767 = add i32 %add749, %i149
  %len_pack768 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom769 = zext i16 %i148 to i64
  %arrayidx770 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack768, i64 0, i64 %idxprom769
  %arrayidx771 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx770, i64 0, i64 1
  %i150 = load i32, i32* %arrayidx771, align 4
  %add772 = add i32 %add754, %i150
  %len_pack773 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom774 = zext i16 %i148 to i64
  %arrayidx775 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack773, i64 0, i64 %idxprom774
  %arrayidx776 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx775, i64 0, i64 2
  %i151 = load i32, i32* %arrayidx776, align 8
  %add777 = add i32 %add759, %i151
  %add778 = add nsw i32 %gs.1, 31
  %idxprom779 = sext i32 %add778 to i64
  %arrayidx780 = getelementptr inbounds i16, i16* %i, i64 %idxprom779
  %i152 = load i16, i16* %arrayidx780, align 2
  %len_pack781 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom782 = zext i16 %i152 to i64
  %arrayidx783 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack781, i64 0, i64 %idxprom782
  %arrayidx784 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx783, i64 0, i64 0
  %i153 = load i32, i32* %arrayidx784, align 8
  %add785 = add i32 %add767, %i153
  %len_pack786 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom787 = zext i16 %i152 to i64
  %arrayidx788 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack786, i64 0, i64 %idxprom787
  %arrayidx789 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx788, i64 0, i64 1
  %i154 = load i32, i32* %arrayidx789, align 4
  %add790 = add i32 %add772, %i154
  %len_pack791 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom792 = zext i16 %i152 to i64
  %arrayidx793 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack791, i64 0, i64 %idxprom792
  %arrayidx794 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx793, i64 0, i64 2
  %i155 = load i32, i32* %arrayidx794, align 8
  %add795 = add i32 %add777, %i155
  %add796 = add nsw i32 %gs.1, 32
  %idxprom797 = sext i32 %add796 to i64
  %arrayidx798 = getelementptr inbounds i16, i16* %i, i64 %idxprom797
  %i156 = load i16, i16* %arrayidx798, align 2
  %len_pack799 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom800 = zext i16 %i156 to i64
  %arrayidx801 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack799, i64 0, i64 %idxprom800
  %arrayidx802 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx801, i64 0, i64 0
  %i157 = load i32, i32* %arrayidx802, align 8
  %add803 = add i32 %add785, %i157
  %len_pack804 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom805 = zext i16 %i156 to i64
  %arrayidx806 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack804, i64 0, i64 %idxprom805
  %arrayidx807 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx806, i64 0, i64 1
  %i158 = load i32, i32* %arrayidx807, align 4
  %add808 = add i32 %add790, %i158
  %len_pack809 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom810 = zext i16 %i156 to i64
  %arrayidx811 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack809, i64 0, i64 %idxprom810
  %arrayidx812 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx811, i64 0, i64 2
  %i159 = load i32, i32* %arrayidx812, align 8
  %add813 = add i32 %add795, %i159
  %add814 = add nsw i32 %gs.1, 33
  %idxprom815 = sext i32 %add814 to i64
  %arrayidx816 = getelementptr inbounds i16, i16* %i, i64 %idxprom815
  %i160 = load i16, i16* %arrayidx816, align 2
  %len_pack817 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom818 = zext i16 %i160 to i64
  %arrayidx819 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack817, i64 0, i64 %idxprom818
  %arrayidx820 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx819, i64 0, i64 0
  %i161 = load i32, i32* %arrayidx820, align 8
  %add821 = add i32 %add803, %i161
  %len_pack822 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom823 = zext i16 %i160 to i64
  %arrayidx824 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack822, i64 0, i64 %idxprom823
  %arrayidx825 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx824, i64 0, i64 1
  %i162 = load i32, i32* %arrayidx825, align 4
  %add826 = add i32 %add808, %i162
  %len_pack827 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom828 = zext i16 %i160 to i64
  %arrayidx829 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack827, i64 0, i64 %idxprom828
  %arrayidx830 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx829, i64 0, i64 2
  %i163 = load i32, i32* %arrayidx830, align 8
  %add831 = add i32 %add813, %i163
  %add832 = add nsw i32 %gs.1, 34
  %idxprom833 = sext i32 %add832 to i64
  %arrayidx834 = getelementptr inbounds i16, i16* %i, i64 %idxprom833
  %i164 = load i16, i16* %arrayidx834, align 2
  %len_pack835 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom836 = zext i16 %i164 to i64
  %arrayidx837 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack835, i64 0, i64 %idxprom836
  %arrayidx838 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx837, i64 0, i64 0
  %i165 = load i32, i32* %arrayidx838, align 8
  %add839 = add i32 %add821, %i165
  %len_pack840 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom841 = zext i16 %i164 to i64
  %arrayidx842 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack840, i64 0, i64 %idxprom841
  %arrayidx843 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx842, i64 0, i64 1
  %i166 = load i32, i32* %arrayidx843, align 4
  %add844 = add i32 %add826, %i166
  %len_pack845 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom846 = zext i16 %i164 to i64
  %arrayidx847 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack845, i64 0, i64 %idxprom846
  %arrayidx848 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx847, i64 0, i64 2
  %i167 = load i32, i32* %arrayidx848, align 8
  %add849 = add i32 %add831, %i167
  %add850 = add nsw i32 %gs.1, 35
  %idxprom851 = sext i32 %add850 to i64
  %arrayidx852 = getelementptr inbounds i16, i16* %i, i64 %idxprom851
  %i168 = load i16, i16* %arrayidx852, align 2
  %len_pack853 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom854 = zext i16 %i168 to i64
  %arrayidx855 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack853, i64 0, i64 %idxprom854
  %arrayidx856 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx855, i64 0, i64 0
  %i169 = load i32, i32* %arrayidx856, align 8
  %add857 = add i32 %add839, %i169
  %len_pack858 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom859 = zext i16 %i168 to i64
  %arrayidx860 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack858, i64 0, i64 %idxprom859
  %arrayidx861 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx860, i64 0, i64 1
  %i170 = load i32, i32* %arrayidx861, align 4
  %add862 = add i32 %add844, %i170
  %len_pack863 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom864 = zext i16 %i168 to i64
  %arrayidx865 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack863, i64 0, i64 %idxprom864
  %arrayidx866 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx865, i64 0, i64 2
  %i171 = load i32, i32* %arrayidx866, align 8
  %add867 = add i32 %add849, %i171
  %add868 = add nsw i32 %gs.1, 36
  %idxprom869 = sext i32 %add868 to i64
  %arrayidx870 = getelementptr inbounds i16, i16* %i, i64 %idxprom869
  %i172 = load i16, i16* %arrayidx870, align 2
  %len_pack871 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom872 = zext i16 %i172 to i64
  %arrayidx873 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack871, i64 0, i64 %idxprom872
  %arrayidx874 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx873, i64 0, i64 0
  %i173 = load i32, i32* %arrayidx874, align 8
  %add875 = add i32 %add857, %i173
  %len_pack876 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom877 = zext i16 %i172 to i64
  %arrayidx878 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack876, i64 0, i64 %idxprom877
  %arrayidx879 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx878, i64 0, i64 1
  %i174 = load i32, i32* %arrayidx879, align 4
  %add880 = add i32 %add862, %i174
  %len_pack881 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom882 = zext i16 %i172 to i64
  %arrayidx883 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack881, i64 0, i64 %idxprom882
  %arrayidx884 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx883, i64 0, i64 2
  %i175 = load i32, i32* %arrayidx884, align 8
  %add885 = add i32 %add867, %i175
  %add886 = add nsw i32 %gs.1, 37
  %idxprom887 = sext i32 %add886 to i64
  %arrayidx888 = getelementptr inbounds i16, i16* %i, i64 %idxprom887
  %i176 = load i16, i16* %arrayidx888, align 2
  %len_pack889 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom890 = zext i16 %i176 to i64
  %arrayidx891 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack889, i64 0, i64 %idxprom890
  %arrayidx892 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx891, i64 0, i64 0
  %i177 = load i32, i32* %arrayidx892, align 8
  %add893 = add i32 %add875, %i177
  %len_pack894 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom895 = zext i16 %i176 to i64
  %arrayidx896 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack894, i64 0, i64 %idxprom895
  %arrayidx897 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx896, i64 0, i64 1
  %i178 = load i32, i32* %arrayidx897, align 4
  %add898 = add i32 %add880, %i178
  %len_pack899 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom900 = zext i16 %i176 to i64
  %arrayidx901 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack899, i64 0, i64 %idxprom900
  %arrayidx902 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx901, i64 0, i64 2
  %i179 = load i32, i32* %arrayidx902, align 8
  %add903 = add i32 %add885, %i179
  %add904 = add nsw i32 %gs.1, 38
  %idxprom905 = sext i32 %add904 to i64
  %arrayidx906 = getelementptr inbounds i16, i16* %i, i64 %idxprom905
  %i180 = load i16, i16* %arrayidx906, align 2
  %len_pack907 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom908 = zext i16 %i180 to i64
  %arrayidx909 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack907, i64 0, i64 %idxprom908
  %arrayidx910 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx909, i64 0, i64 0
  %i181 = load i32, i32* %arrayidx910, align 8
  %add911 = add i32 %add893, %i181
  %len_pack912 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom913 = zext i16 %i180 to i64
  %arrayidx914 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack912, i64 0, i64 %idxprom913
  %arrayidx915 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx914, i64 0, i64 1
  %i182 = load i32, i32* %arrayidx915, align 4
  %add916 = add i32 %add898, %i182
  %len_pack917 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom918 = zext i16 %i180 to i64
  %arrayidx919 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack917, i64 0, i64 %idxprom918
  %arrayidx920 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx919, i64 0, i64 2
  %i183 = load i32, i32* %arrayidx920, align 8
  %add921 = add i32 %add903, %i183
  %add922 = add nsw i32 %gs.1, 39
  %idxprom923 = sext i32 %add922 to i64
  %arrayidx924 = getelementptr inbounds i16, i16* %i, i64 %idxprom923
  %i184 = load i16, i16* %arrayidx924, align 2
  %len_pack925 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom926 = zext i16 %i184 to i64
  %arrayidx927 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack925, i64 0, i64 %idxprom926
  %arrayidx928 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx927, i64 0, i64 0
  %i185 = load i32, i32* %arrayidx928, align 8
  %add929 = add i32 %add911, %i185
  %len_pack930 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom931 = zext i16 %i184 to i64
  %arrayidx932 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack930, i64 0, i64 %idxprom931
  %arrayidx933 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx932, i64 0, i64 1
  %i186 = load i32, i32* %arrayidx933, align 4
  %add934 = add i32 %add916, %i186
  %len_pack935 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom936 = zext i16 %i184 to i64
  %arrayidx937 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack935, i64 0, i64 %idxprom936
  %arrayidx938 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx937, i64 0, i64 2
  %i187 = load i32, i32* %arrayidx938, align 8
  %add939 = add i32 %add921, %i187
  %add940 = add nsw i32 %gs.1, 40
  %idxprom941 = sext i32 %add940 to i64
  %arrayidx942 = getelementptr inbounds i16, i16* %i, i64 %idxprom941
  %i188 = load i16, i16* %arrayidx942, align 2
  %len_pack943 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom944 = zext i16 %i188 to i64
  %arrayidx945 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack943, i64 0, i64 %idxprom944
  %arrayidx946 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx945, i64 0, i64 0
  %i189 = load i32, i32* %arrayidx946, align 8
  %add947 = add i32 %add929, %i189
  %len_pack948 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom949 = zext i16 %i188 to i64
  %arrayidx950 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack948, i64 0, i64 %idxprom949
  %arrayidx951 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx950, i64 0, i64 1
  %i190 = load i32, i32* %arrayidx951, align 4
  %add952 = add i32 %add934, %i190
  %len_pack953 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom954 = zext i16 %i188 to i64
  %arrayidx955 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack953, i64 0, i64 %idxprom954
  %arrayidx956 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx955, i64 0, i64 2
  %i191 = load i32, i32* %arrayidx956, align 8
  %add957 = add i32 %add939, %i191
  %add958 = add nsw i32 %gs.1, 41
  %idxprom959 = sext i32 %add958 to i64
  %arrayidx960 = getelementptr inbounds i16, i16* %i, i64 %idxprom959
  %i192 = load i16, i16* %arrayidx960, align 2
  %len_pack961 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom962 = zext i16 %i192 to i64
  %arrayidx963 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack961, i64 0, i64 %idxprom962
  %arrayidx964 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx963, i64 0, i64 0
  %i193 = load i32, i32* %arrayidx964, align 8
  %add965 = add i32 %add947, %i193
  %len_pack966 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom967 = zext i16 %i192 to i64
  %arrayidx968 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack966, i64 0, i64 %idxprom967
  %arrayidx969 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx968, i64 0, i64 1
  %i194 = load i32, i32* %arrayidx969, align 4
  %add970 = add i32 %add952, %i194
  %len_pack971 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom972 = zext i16 %i192 to i64
  %arrayidx973 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack971, i64 0, i64 %idxprom972
  %arrayidx974 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx973, i64 0, i64 2
  %i195 = load i32, i32* %arrayidx974, align 8
  %add975 = add i32 %add957, %i195
  %add976 = add nsw i32 %gs.1, 42
  %idxprom977 = sext i32 %add976 to i64
  %arrayidx978 = getelementptr inbounds i16, i16* %i, i64 %idxprom977
  %i196 = load i16, i16* %arrayidx978, align 2
  %len_pack979 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom980 = zext i16 %i196 to i64
  %arrayidx981 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack979, i64 0, i64 %idxprom980
  %arrayidx982 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx981, i64 0, i64 0
  %i197 = load i32, i32* %arrayidx982, align 8
  %add983 = add i32 %add965, %i197
  %len_pack984 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom985 = zext i16 %i196 to i64
  %arrayidx986 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack984, i64 0, i64 %idxprom985
  %arrayidx987 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx986, i64 0, i64 1
  %i198 = load i32, i32* %arrayidx987, align 4
  %add988 = add i32 %add970, %i198
  %len_pack989 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom990 = zext i16 %i196 to i64
  %arrayidx991 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack989, i64 0, i64 %idxprom990
  %arrayidx992 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx991, i64 0, i64 2
  %i199 = load i32, i32* %arrayidx992, align 8
  %add993 = add i32 %add975, %i199
  %add994 = add nsw i32 %gs.1, 43
  %idxprom995 = sext i32 %add994 to i64
  %arrayidx996 = getelementptr inbounds i16, i16* %i, i64 %idxprom995
  %i200 = load i16, i16* %arrayidx996, align 2
  %len_pack997 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom998 = zext i16 %i200 to i64
  %arrayidx999 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack997, i64 0, i64 %idxprom998
  %arrayidx1000 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx999, i64 0, i64 0
  %i201 = load i32, i32* %arrayidx1000, align 8
  %add1001 = add i32 %add983, %i201
  %len_pack1002 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1003 = zext i16 %i200 to i64
  %arrayidx1004 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1002, i64 0, i64 %idxprom1003
  %arrayidx1005 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1004, i64 0, i64 1
  %i202 = load i32, i32* %arrayidx1005, align 4
  %add1006 = add i32 %add988, %i202
  %len_pack1007 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1008 = zext i16 %i200 to i64
  %arrayidx1009 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1007, i64 0, i64 %idxprom1008
  %arrayidx1010 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1009, i64 0, i64 2
  %i203 = load i32, i32* %arrayidx1010, align 8
  %add1011 = add i32 %add993, %i203
  %add1012 = add nsw i32 %gs.1, 44
  %idxprom1013 = sext i32 %add1012 to i64
  %arrayidx1014 = getelementptr inbounds i16, i16* %i, i64 %idxprom1013
  %i204 = load i16, i16* %arrayidx1014, align 2
  %len_pack1015 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1016 = zext i16 %i204 to i64
  %arrayidx1017 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1015, i64 0, i64 %idxprom1016
  %arrayidx1018 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1017, i64 0, i64 0
  %i205 = load i32, i32* %arrayidx1018, align 8
  %add1019 = add i32 %add1001, %i205
  %len_pack1020 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1021 = zext i16 %i204 to i64
  %arrayidx1022 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1020, i64 0, i64 %idxprom1021
  %arrayidx1023 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1022, i64 0, i64 1
  %i206 = load i32, i32* %arrayidx1023, align 4
  %add1024 = add i32 %add1006, %i206
  %len_pack1025 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1026 = zext i16 %i204 to i64
  %arrayidx1027 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1025, i64 0, i64 %idxprom1026
  %arrayidx1028 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1027, i64 0, i64 2
  %i207 = load i32, i32* %arrayidx1028, align 8
  %add1029 = add i32 %add1011, %i207
  %add1030 = add nsw i32 %gs.1, 45
  %idxprom1031 = sext i32 %add1030 to i64
  %arrayidx1032 = getelementptr inbounds i16, i16* %i, i64 %idxprom1031
  %i208 = load i16, i16* %arrayidx1032, align 2
  %len_pack1033 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1034 = zext i16 %i208 to i64
  %arrayidx1035 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1033, i64 0, i64 %idxprom1034
  %arrayidx1036 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1035, i64 0, i64 0
  %i209 = load i32, i32* %arrayidx1036, align 8
  %add1037 = add i32 %add1019, %i209
  %len_pack1038 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1039 = zext i16 %i208 to i64
  %arrayidx1040 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1038, i64 0, i64 %idxprom1039
  %arrayidx1041 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1040, i64 0, i64 1
  %i210 = load i32, i32* %arrayidx1041, align 4
  %add1042 = add i32 %add1024, %i210
  %len_pack1043 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1044 = zext i16 %i208 to i64
  %arrayidx1045 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1043, i64 0, i64 %idxprom1044
  %arrayidx1046 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1045, i64 0, i64 2
  %i211 = load i32, i32* %arrayidx1046, align 8
  %add1047 = add i32 %add1029, %i211
  %add1048 = add nsw i32 %gs.1, 46
  %idxprom1049 = sext i32 %add1048 to i64
  %arrayidx1050 = getelementptr inbounds i16, i16* %i, i64 %idxprom1049
  %i212 = load i16, i16* %arrayidx1050, align 2
  %len_pack1051 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1052 = zext i16 %i212 to i64
  %arrayidx1053 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1051, i64 0, i64 %idxprom1052
  %arrayidx1054 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1053, i64 0, i64 0
  %i213 = load i32, i32* %arrayidx1054, align 8
  %add1055 = add i32 %add1037, %i213
  %len_pack1056 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1057 = zext i16 %i212 to i64
  %arrayidx1058 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1056, i64 0, i64 %idxprom1057
  %arrayidx1059 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1058, i64 0, i64 1
  %i214 = load i32, i32* %arrayidx1059, align 4
  %add1060 = add i32 %add1042, %i214
  %len_pack1061 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1062 = zext i16 %i212 to i64
  %arrayidx1063 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1061, i64 0, i64 %idxprom1062
  %arrayidx1064 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1063, i64 0, i64 2
  %i215 = load i32, i32* %arrayidx1064, align 8
  %add1065 = add i32 %add1047, %i215
  %add1066 = add nsw i32 %gs.1, 47
  %idxprom1067 = sext i32 %add1066 to i64
  %arrayidx1068 = getelementptr inbounds i16, i16* %i, i64 %idxprom1067
  %i216 = load i16, i16* %arrayidx1068, align 2
  %len_pack1069 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1070 = zext i16 %i216 to i64
  %arrayidx1071 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1069, i64 0, i64 %idxprom1070
  %arrayidx1072 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1071, i64 0, i64 0
  %i217 = load i32, i32* %arrayidx1072, align 8
  %add1073 = add i32 %add1055, %i217
  %len_pack1074 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1075 = zext i16 %i216 to i64
  %arrayidx1076 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1074, i64 0, i64 %idxprom1075
  %arrayidx1077 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1076, i64 0, i64 1
  %i218 = load i32, i32* %arrayidx1077, align 4
  %add1078 = add i32 %add1060, %i218
  %len_pack1079 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1080 = zext i16 %i216 to i64
  %arrayidx1081 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1079, i64 0, i64 %idxprom1080
  %arrayidx1082 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1081, i64 0, i64 2
  %i219 = load i32, i32* %arrayidx1082, align 8
  %add1083 = add i32 %add1065, %i219
  %add1084 = add nsw i32 %gs.1, 48
  %idxprom1085 = sext i32 %add1084 to i64
  %arrayidx1086 = getelementptr inbounds i16, i16* %i, i64 %idxprom1085
  %i220 = load i16, i16* %arrayidx1086, align 2
  %len_pack1087 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1088 = zext i16 %i220 to i64
  %arrayidx1089 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1087, i64 0, i64 %idxprom1088
  %arrayidx1090 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1089, i64 0, i64 0
  %i221 = load i32, i32* %arrayidx1090, align 8
  %add1091 = add i32 %add1073, %i221
  %len_pack1092 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1093 = zext i16 %i220 to i64
  %arrayidx1094 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1092, i64 0, i64 %idxprom1093
  %arrayidx1095 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1094, i64 0, i64 1
  %i222 = load i32, i32* %arrayidx1095, align 4
  %add1096 = add i32 %add1078, %i222
  %len_pack1097 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1098 = zext i16 %i220 to i64
  %arrayidx1099 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1097, i64 0, i64 %idxprom1098
  %arrayidx1100 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1099, i64 0, i64 2
  %i223 = load i32, i32* %arrayidx1100, align 8
  %add1101 = add i32 %add1083, %i223
  %add1102 = add nsw i32 %gs.1, 49
  %idxprom1103 = sext i32 %add1102 to i64
  %arrayidx1104 = getelementptr inbounds i16, i16* %i, i64 %idxprom1103
  %i224 = load i16, i16* %arrayidx1104, align 2
  %len_pack1105 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1106 = zext i16 %i224 to i64
  %arrayidx1107 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1105, i64 0, i64 %idxprom1106
  %arrayidx1108 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1107, i64 0, i64 0
  %i225 = load i32, i32* %arrayidx1108, align 8
  %add1109 = add i32 %add1091, %i225
  %len_pack1110 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1111 = zext i16 %i224 to i64
  %arrayidx1112 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1110, i64 0, i64 %idxprom1111
  %arrayidx1113 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1112, i64 0, i64 1
  %i226 = load i32, i32* %arrayidx1113, align 4
  %add1114 = add i32 %add1096, %i226
  %len_pack1115 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 38
  %idxprom1116 = zext i16 %i224 to i64
  %arrayidx1117 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %len_pack1115, i64 0, i64 %idxprom1116
  %arrayidx1118 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx1117, i64 0, i64 2
  %i227 = load i32, i32* %arrayidx1118, align 8
  %add1119 = add i32 %add1101, %i227
  %and = and i32 %add1109, 65535
  %conv1120 = trunc i32 %and to i16
  %arrayidx1121 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 0
  store i16 %conv1120, i16* %arrayidx1121, align 2
  %shr = lshr i32 %add1109, 16
  %conv1122 = trunc i32 %shr to i16
  %arrayidx1123 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 1
  store i16 %conv1122, i16* %arrayidx1123, align 2
  %and1124 = and i32 %add1114, 65535
  %conv1125 = trunc i32 %and1124 to i16
  %arrayidx1126 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 2
  store i16 %conv1125, i16* %arrayidx1126, align 2
  %shr1127 = lshr i32 %add1114, 16
  %conv1128 = trunc i32 %shr1127 to i16
  %arrayidx1129 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 3
  store i16 %conv1128, i16* %arrayidx1129, align 2
  %and1130 = and i32 %add1119, 65535
  %conv1131 = trunc i32 %and1130 to i16
  %arrayidx1132 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 4
  store i16 %conv1131, i16* %arrayidx1132, align 2
  %shr1133 = lshr i32 %add1119, 16
  %conv1134 = trunc i32 %shr1133 to i16
  %arrayidx1135 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 5
  store i16 %conv1134, i16* %arrayidx1135, align 2
  br label %if.end1165

if.else1136:                                      ; preds = %land.lhs.true214, %for.end211
  br label %for.cond1137

for.cond1137:                                     ; preds = %for.inc1162, %if.else1136
  %i.0 = phi i32 [ %gs.1, %if.else1136 ], [ %inc1163, %for.inc1162 ]
  %cmp1138 = icmp sle i32 %i.0, %ge.2
  br i1 %cmp1138, label %for.body1140, label %for.end1164

for.body1140:                                     ; preds = %for.cond1137
  %idxprom1142 = sext i32 %i.0 to i64
  %arrayidx1143 = getelementptr inbounds i16, i16* %i, i64 %idxprom1142
  %i228 = load i16, i16* %arrayidx1143, align 2
  br label %for.cond1144

for.cond1144:                                     ; preds = %for.inc1159, %for.body1140
  %t.4 = phi i32 [ 0, %for.body1140 ], [ %inc1160, %for.inc1159 ]
  %cmp1145 = icmp slt i32 %t.4, %nGroups.3
  br i1 %cmp1145, label %for.body1147, label %for.end1161

for.body1147:                                     ; preds = %for.cond1144
  %len1148 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %idxprom1149 = sext i32 %t.4 to i64
  %arrayidx1150 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1148, i64 0, i64 %idxprom1149
  %idxprom1151 = zext i16 %i228 to i64
  %arrayidx1152 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1150, i64 0, i64 %idxprom1151
  %i229 = load i8, i8* %arrayidx1152, align 1
  %conv1153 = zext i8 %i229 to i32
  %idxprom1154 = sext i32 %t.4 to i64
  %arrayidx1155 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 %idxprom1154
  %i230 = load i16, i16* %arrayidx1155, align 2
  %conv1156 = zext i16 %i230 to i32
  %add1157 = add nsw i32 %conv1156, %conv1153
  %conv1158 = trunc i32 %add1157 to i16
  store i16 %conv1158, i16* %arrayidx1155, align 2
  br label %for.inc1159

for.inc1159:                                      ; preds = %for.body1147
  %inc1160 = add nsw i32 %t.4, 1
  br label %for.cond1144

for.end1161:                                      ; preds = %for.cond1144
  br label %for.inc1162

for.inc1162:                                      ; preds = %for.end1161
  %inc1163 = add nsw i32 %i.0, 1
  br label %for.cond1137

for.end1164:                                      ; preds = %for.cond1137
  br label %if.end1165

if.end1165:                                       ; preds = %for.end1164, %if.then219
  br label %for.cond1166

for.cond1166:                                     ; preds = %for.inc1180, %if.end1165
  %bc.0 = phi i32 [ 999999999, %if.end1165 ], [ %bc.1, %for.inc1180 ]
  %bt.0 = phi i32 [ -1, %if.end1165 ], [ %bt.1, %for.inc1180 ]
  %t.5 = phi i32 [ 0, %if.end1165 ], [ %inc1181, %for.inc1180 ]
  %cmp1167 = icmp slt i32 %t.5, %nGroups.3
  br i1 %cmp1167, label %for.body1169, label %for.end1182

for.body1169:                                     ; preds = %for.cond1166
  %idxprom1170 = sext i32 %t.5 to i64
  %arrayidx1171 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 %idxprom1170
  %i231 = load i16, i16* %arrayidx1171, align 2
  %conv1172 = zext i16 %i231 to i32
  %cmp1173 = icmp slt i32 %conv1172, %bc.0
  br i1 %cmp1173, label %if.then1175, label %if.end1179

if.then1175:                                      ; preds = %for.body1169
  %idxprom1176 = sext i32 %t.5 to i64
  %arrayidx1177 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 %idxprom1176
  %i232 = load i16, i16* %arrayidx1177, align 2
  %conv1178 = zext i16 %i232 to i32
  br label %if.end1179

if.end1179:                                       ; preds = %if.then1175, %for.body1169
  %bc.1 = phi i32 [ %conv1178, %if.then1175 ], [ %bc.0, %for.body1169 ]
  %bt.1 = phi i32 [ %t.5, %if.then1175 ], [ %bt.0, %for.body1169 ]
  br label %for.inc1180

for.inc1180:                                      ; preds = %if.end1179
  %inc1181 = add nsw i32 %t.5, 1
  br label %for.cond1166

for.end1182:                                      ; preds = %for.cond1166
  %add1183 = add nsw i32 %totc.0, %bc.0
  %idxprom1184 = sext i32 %bt.0 to i64
  %arrayidx1185 = getelementptr inbounds [6 x i32], [6 x i32]* %fave, i64 0, i64 %idxprom1184
  %i233 = load i32, i32* %arrayidx1185, align 4
  %inc1186 = add nsw i32 %i233, 1
  store i32 %inc1186, i32* %arrayidx1185, align 4
  %conv1187 = trunc i32 %bt.0 to i8
  %selector = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 33
  %idxprom1188 = sext i32 %nSelectors.1 to i64
  %arrayidx1189 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector, i64 0, i64 %idxprom1188
  store i8 %conv1187, i8* %arrayidx1189, align 1
  %inc1190 = add nsw i32 %nSelectors.1, 1
  %cmp1191 = icmp eq i32 %nGroups.3, 6
  br i1 %cmp1191, label %land.lhs.true1193, label %if.else1649

land.lhs.true1193:                                ; preds = %for.end1182
  %sub1194 = sub nsw i32 %ge.2, %gs.1
  %add1195 = add nsw i32 %sub1194, 1
  %cmp1196 = icmp eq i32 50, %add1195
  br i1 %cmp1196, label %if.then1198, label %if.else1649

if.then1198:                                      ; preds = %land.lhs.true1193
  %rfreq1199 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1200 = sext i32 %bt.0 to i64
  %arrayidx1201 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1199, i64 0, i64 %idxprom1200
  %add1202 = add nsw i32 %gs.1, 0
  %idxprom1203 = sext i32 %add1202 to i64
  %arrayidx1204 = getelementptr inbounds i16, i16* %i, i64 %idxprom1203
  %i234 = load i16, i16* %arrayidx1204, align 2
  %idxprom1205 = zext i16 %i234 to i64
  %arrayidx1206 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1201, i64 0, i64 %idxprom1205
  %i235 = load i32, i32* %arrayidx1206, align 4
  %inc1207 = add nsw i32 %i235, 1
  store i32 %inc1207, i32* %arrayidx1206, align 4
  %rfreq1208 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1209 = sext i32 %bt.0 to i64
  %arrayidx1210 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1208, i64 0, i64 %idxprom1209
  %add1211 = add nsw i32 %gs.1, 1
  %idxprom1212 = sext i32 %add1211 to i64
  %arrayidx1213 = getelementptr inbounds i16, i16* %i, i64 %idxprom1212
  %i236 = load i16, i16* %arrayidx1213, align 2
  %idxprom1214 = zext i16 %i236 to i64
  %arrayidx1215 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1210, i64 0, i64 %idxprom1214
  %i237 = load i32, i32* %arrayidx1215, align 4
  %inc1216 = add nsw i32 %i237, 1
  store i32 %inc1216, i32* %arrayidx1215, align 4
  %rfreq1217 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1218 = sext i32 %bt.0 to i64
  %arrayidx1219 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1217, i64 0, i64 %idxprom1218
  %add1220 = add nsw i32 %gs.1, 2
  %idxprom1221 = sext i32 %add1220 to i64
  %arrayidx1222 = getelementptr inbounds i16, i16* %i, i64 %idxprom1221
  %i238 = load i16, i16* %arrayidx1222, align 2
  %idxprom1223 = zext i16 %i238 to i64
  %arrayidx1224 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1219, i64 0, i64 %idxprom1223
  %i239 = load i32, i32* %arrayidx1224, align 4
  %inc1225 = add nsw i32 %i239, 1
  store i32 %inc1225, i32* %arrayidx1224, align 4
  %rfreq1226 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1227 = sext i32 %bt.0 to i64
  %arrayidx1228 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1226, i64 0, i64 %idxprom1227
  %add1229 = add nsw i32 %gs.1, 3
  %idxprom1230 = sext i32 %add1229 to i64
  %arrayidx1231 = getelementptr inbounds i16, i16* %i, i64 %idxprom1230
  %i240 = load i16, i16* %arrayidx1231, align 2
  %idxprom1232 = zext i16 %i240 to i64
  %arrayidx1233 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1228, i64 0, i64 %idxprom1232
  %i241 = load i32, i32* %arrayidx1233, align 4
  %inc1234 = add nsw i32 %i241, 1
  store i32 %inc1234, i32* %arrayidx1233, align 4
  %rfreq1235 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1236 = sext i32 %bt.0 to i64
  %arrayidx1237 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1235, i64 0, i64 %idxprom1236
  %add1238 = add nsw i32 %gs.1, 4
  %idxprom1239 = sext i32 %add1238 to i64
  %arrayidx1240 = getelementptr inbounds i16, i16* %i, i64 %idxprom1239
  %i242 = load i16, i16* %arrayidx1240, align 2
  %idxprom1241 = zext i16 %i242 to i64
  %arrayidx1242 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1237, i64 0, i64 %idxprom1241
  %i243 = load i32, i32* %arrayidx1242, align 4
  %inc1243 = add nsw i32 %i243, 1
  store i32 %inc1243, i32* %arrayidx1242, align 4
  %rfreq1244 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1245 = sext i32 %bt.0 to i64
  %arrayidx1246 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1244, i64 0, i64 %idxprom1245
  %add1247 = add nsw i32 %gs.1, 5
  %idxprom1248 = sext i32 %add1247 to i64
  %arrayidx1249 = getelementptr inbounds i16, i16* %i, i64 %idxprom1248
  %i244 = load i16, i16* %arrayidx1249, align 2
  %idxprom1250 = zext i16 %i244 to i64
  %arrayidx1251 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1246, i64 0, i64 %idxprom1250
  %i245 = load i32, i32* %arrayidx1251, align 4
  %inc1252 = add nsw i32 %i245, 1
  store i32 %inc1252, i32* %arrayidx1251, align 4
  %rfreq1253 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1254 = sext i32 %bt.0 to i64
  %arrayidx1255 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1253, i64 0, i64 %idxprom1254
  %add1256 = add nsw i32 %gs.1, 6
  %idxprom1257 = sext i32 %add1256 to i64
  %arrayidx1258 = getelementptr inbounds i16, i16* %i, i64 %idxprom1257
  %i246 = load i16, i16* %arrayidx1258, align 2
  %idxprom1259 = zext i16 %i246 to i64
  %arrayidx1260 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1255, i64 0, i64 %idxprom1259
  %i247 = load i32, i32* %arrayidx1260, align 4
  %inc1261 = add nsw i32 %i247, 1
  store i32 %inc1261, i32* %arrayidx1260, align 4
  %rfreq1262 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1263 = sext i32 %bt.0 to i64
  %arrayidx1264 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1262, i64 0, i64 %idxprom1263
  %add1265 = add nsw i32 %gs.1, 7
  %idxprom1266 = sext i32 %add1265 to i64
  %arrayidx1267 = getelementptr inbounds i16, i16* %i, i64 %idxprom1266
  %i248 = load i16, i16* %arrayidx1267, align 2
  %idxprom1268 = zext i16 %i248 to i64
  %arrayidx1269 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1264, i64 0, i64 %idxprom1268
  %i249 = load i32, i32* %arrayidx1269, align 4
  %inc1270 = add nsw i32 %i249, 1
  store i32 %inc1270, i32* %arrayidx1269, align 4
  %rfreq1271 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1272 = sext i32 %bt.0 to i64
  %arrayidx1273 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1271, i64 0, i64 %idxprom1272
  %add1274 = add nsw i32 %gs.1, 8
  %idxprom1275 = sext i32 %add1274 to i64
  %arrayidx1276 = getelementptr inbounds i16, i16* %i, i64 %idxprom1275
  %i250 = load i16, i16* %arrayidx1276, align 2
  %idxprom1277 = zext i16 %i250 to i64
  %arrayidx1278 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1273, i64 0, i64 %idxprom1277
  %i251 = load i32, i32* %arrayidx1278, align 4
  %inc1279 = add nsw i32 %i251, 1
  store i32 %inc1279, i32* %arrayidx1278, align 4
  %rfreq1280 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1281 = sext i32 %bt.0 to i64
  %arrayidx1282 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1280, i64 0, i64 %idxprom1281
  %add1283 = add nsw i32 %gs.1, 9
  %idxprom1284 = sext i32 %add1283 to i64
  %arrayidx1285 = getelementptr inbounds i16, i16* %i, i64 %idxprom1284
  %i252 = load i16, i16* %arrayidx1285, align 2
  %idxprom1286 = zext i16 %i252 to i64
  %arrayidx1287 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1282, i64 0, i64 %idxprom1286
  %i253 = load i32, i32* %arrayidx1287, align 4
  %inc1288 = add nsw i32 %i253, 1
  store i32 %inc1288, i32* %arrayidx1287, align 4
  %rfreq1289 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1290 = sext i32 %bt.0 to i64
  %arrayidx1291 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1289, i64 0, i64 %idxprom1290
  %add1292 = add nsw i32 %gs.1, 10
  %idxprom1293 = sext i32 %add1292 to i64
  %arrayidx1294 = getelementptr inbounds i16, i16* %i, i64 %idxprom1293
  %i254 = load i16, i16* %arrayidx1294, align 2
  %idxprom1295 = zext i16 %i254 to i64
  %arrayidx1296 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1291, i64 0, i64 %idxprom1295
  %i255 = load i32, i32* %arrayidx1296, align 4
  %inc1297 = add nsw i32 %i255, 1
  store i32 %inc1297, i32* %arrayidx1296, align 4
  %rfreq1298 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1299 = sext i32 %bt.0 to i64
  %arrayidx1300 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1298, i64 0, i64 %idxprom1299
  %add1301 = add nsw i32 %gs.1, 11
  %idxprom1302 = sext i32 %add1301 to i64
  %arrayidx1303 = getelementptr inbounds i16, i16* %i, i64 %idxprom1302
  %i256 = load i16, i16* %arrayidx1303, align 2
  %idxprom1304 = zext i16 %i256 to i64
  %arrayidx1305 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1300, i64 0, i64 %idxprom1304
  %i257 = load i32, i32* %arrayidx1305, align 4
  %inc1306 = add nsw i32 %i257, 1
  store i32 %inc1306, i32* %arrayidx1305, align 4
  %rfreq1307 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1308 = sext i32 %bt.0 to i64
  %arrayidx1309 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1307, i64 0, i64 %idxprom1308
  %add1310 = add nsw i32 %gs.1, 12
  %idxprom1311 = sext i32 %add1310 to i64
  %arrayidx1312 = getelementptr inbounds i16, i16* %i, i64 %idxprom1311
  %i258 = load i16, i16* %arrayidx1312, align 2
  %idxprom1313 = zext i16 %i258 to i64
  %arrayidx1314 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1309, i64 0, i64 %idxprom1313
  %i259 = load i32, i32* %arrayidx1314, align 4
  %inc1315 = add nsw i32 %i259, 1
  store i32 %inc1315, i32* %arrayidx1314, align 4
  %rfreq1316 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1317 = sext i32 %bt.0 to i64
  %arrayidx1318 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1316, i64 0, i64 %idxprom1317
  %add1319 = add nsw i32 %gs.1, 13
  %idxprom1320 = sext i32 %add1319 to i64
  %arrayidx1321 = getelementptr inbounds i16, i16* %i, i64 %idxprom1320
  %i260 = load i16, i16* %arrayidx1321, align 2
  %idxprom1322 = zext i16 %i260 to i64
  %arrayidx1323 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1318, i64 0, i64 %idxprom1322
  %i261 = load i32, i32* %arrayidx1323, align 4
  %inc1324 = add nsw i32 %i261, 1
  store i32 %inc1324, i32* %arrayidx1323, align 4
  %rfreq1325 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1326 = sext i32 %bt.0 to i64
  %arrayidx1327 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1325, i64 0, i64 %idxprom1326
  %add1328 = add nsw i32 %gs.1, 14
  %idxprom1329 = sext i32 %add1328 to i64
  %arrayidx1330 = getelementptr inbounds i16, i16* %i, i64 %idxprom1329
  %i262 = load i16, i16* %arrayidx1330, align 2
  %idxprom1331 = zext i16 %i262 to i64
  %arrayidx1332 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1327, i64 0, i64 %idxprom1331
  %i263 = load i32, i32* %arrayidx1332, align 4
  %inc1333 = add nsw i32 %i263, 1
  store i32 %inc1333, i32* %arrayidx1332, align 4
  %rfreq1334 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1335 = sext i32 %bt.0 to i64
  %arrayidx1336 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1334, i64 0, i64 %idxprom1335
  %add1337 = add nsw i32 %gs.1, 15
  %idxprom1338 = sext i32 %add1337 to i64
  %arrayidx1339 = getelementptr inbounds i16, i16* %i, i64 %idxprom1338
  %i264 = load i16, i16* %arrayidx1339, align 2
  %idxprom1340 = zext i16 %i264 to i64
  %arrayidx1341 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1336, i64 0, i64 %idxprom1340
  %i265 = load i32, i32* %arrayidx1341, align 4
  %inc1342 = add nsw i32 %i265, 1
  store i32 %inc1342, i32* %arrayidx1341, align 4
  %rfreq1343 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1344 = sext i32 %bt.0 to i64
  %arrayidx1345 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1343, i64 0, i64 %idxprom1344
  %add1346 = add nsw i32 %gs.1, 16
  %idxprom1347 = sext i32 %add1346 to i64
  %arrayidx1348 = getelementptr inbounds i16, i16* %i, i64 %idxprom1347
  %i266 = load i16, i16* %arrayidx1348, align 2
  %idxprom1349 = zext i16 %i266 to i64
  %arrayidx1350 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1345, i64 0, i64 %idxprom1349
  %i267 = load i32, i32* %arrayidx1350, align 4
  %inc1351 = add nsw i32 %i267, 1
  store i32 %inc1351, i32* %arrayidx1350, align 4
  %rfreq1352 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1353 = sext i32 %bt.0 to i64
  %arrayidx1354 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1352, i64 0, i64 %idxprom1353
  %add1355 = add nsw i32 %gs.1, 17
  %idxprom1356 = sext i32 %add1355 to i64
  %arrayidx1357 = getelementptr inbounds i16, i16* %i, i64 %idxprom1356
  %i268 = load i16, i16* %arrayidx1357, align 2
  %idxprom1358 = zext i16 %i268 to i64
  %arrayidx1359 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1354, i64 0, i64 %idxprom1358
  %i269 = load i32, i32* %arrayidx1359, align 4
  %inc1360 = add nsw i32 %i269, 1
  store i32 %inc1360, i32* %arrayidx1359, align 4
  %rfreq1361 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1362 = sext i32 %bt.0 to i64
  %arrayidx1363 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1361, i64 0, i64 %idxprom1362
  %add1364 = add nsw i32 %gs.1, 18
  %idxprom1365 = sext i32 %add1364 to i64
  %arrayidx1366 = getelementptr inbounds i16, i16* %i, i64 %idxprom1365
  %i270 = load i16, i16* %arrayidx1366, align 2
  %idxprom1367 = zext i16 %i270 to i64
  %arrayidx1368 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1363, i64 0, i64 %idxprom1367
  %i271 = load i32, i32* %arrayidx1368, align 4
  %inc1369 = add nsw i32 %i271, 1
  store i32 %inc1369, i32* %arrayidx1368, align 4
  %rfreq1370 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1371 = sext i32 %bt.0 to i64
  %arrayidx1372 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1370, i64 0, i64 %idxprom1371
  %add1373 = add nsw i32 %gs.1, 19
  %idxprom1374 = sext i32 %add1373 to i64
  %arrayidx1375 = getelementptr inbounds i16, i16* %i, i64 %idxprom1374
  %i272 = load i16, i16* %arrayidx1375, align 2
  %idxprom1376 = zext i16 %i272 to i64
  %arrayidx1377 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1372, i64 0, i64 %idxprom1376
  %i273 = load i32, i32* %arrayidx1377, align 4
  %inc1378 = add nsw i32 %i273, 1
  store i32 %inc1378, i32* %arrayidx1377, align 4
  %rfreq1379 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1380 = sext i32 %bt.0 to i64
  %arrayidx1381 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1379, i64 0, i64 %idxprom1380
  %add1382 = add nsw i32 %gs.1, 20
  %idxprom1383 = sext i32 %add1382 to i64
  %arrayidx1384 = getelementptr inbounds i16, i16* %i, i64 %idxprom1383
  %i274 = load i16, i16* %arrayidx1384, align 2
  %idxprom1385 = zext i16 %i274 to i64
  %arrayidx1386 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1381, i64 0, i64 %idxprom1385
  %i275 = load i32, i32* %arrayidx1386, align 4
  %inc1387 = add nsw i32 %i275, 1
  store i32 %inc1387, i32* %arrayidx1386, align 4
  %rfreq1388 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1389 = sext i32 %bt.0 to i64
  %arrayidx1390 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1388, i64 0, i64 %idxprom1389
  %add1391 = add nsw i32 %gs.1, 21
  %idxprom1392 = sext i32 %add1391 to i64
  %arrayidx1393 = getelementptr inbounds i16, i16* %i, i64 %idxprom1392
  %i276 = load i16, i16* %arrayidx1393, align 2
  %idxprom1394 = zext i16 %i276 to i64
  %arrayidx1395 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1390, i64 0, i64 %idxprom1394
  %i277 = load i32, i32* %arrayidx1395, align 4
  %inc1396 = add nsw i32 %i277, 1
  store i32 %inc1396, i32* %arrayidx1395, align 4
  %rfreq1397 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1398 = sext i32 %bt.0 to i64
  %arrayidx1399 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1397, i64 0, i64 %idxprom1398
  %add1400 = add nsw i32 %gs.1, 22
  %idxprom1401 = sext i32 %add1400 to i64
  %arrayidx1402 = getelementptr inbounds i16, i16* %i, i64 %idxprom1401
  %i278 = load i16, i16* %arrayidx1402, align 2
  %idxprom1403 = zext i16 %i278 to i64
  %arrayidx1404 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1399, i64 0, i64 %idxprom1403
  %i279 = load i32, i32* %arrayidx1404, align 4
  %inc1405 = add nsw i32 %i279, 1
  store i32 %inc1405, i32* %arrayidx1404, align 4
  %rfreq1406 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1407 = sext i32 %bt.0 to i64
  %arrayidx1408 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1406, i64 0, i64 %idxprom1407
  %add1409 = add nsw i32 %gs.1, 23
  %idxprom1410 = sext i32 %add1409 to i64
  %arrayidx1411 = getelementptr inbounds i16, i16* %i, i64 %idxprom1410
  %i280 = load i16, i16* %arrayidx1411, align 2
  %idxprom1412 = zext i16 %i280 to i64
  %arrayidx1413 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1408, i64 0, i64 %idxprom1412
  %i281 = load i32, i32* %arrayidx1413, align 4
  %inc1414 = add nsw i32 %i281, 1
  store i32 %inc1414, i32* %arrayidx1413, align 4
  %rfreq1415 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1416 = sext i32 %bt.0 to i64
  %arrayidx1417 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1415, i64 0, i64 %idxprom1416
  %add1418 = add nsw i32 %gs.1, 24
  %idxprom1419 = sext i32 %add1418 to i64
  %arrayidx1420 = getelementptr inbounds i16, i16* %i, i64 %idxprom1419
  %i282 = load i16, i16* %arrayidx1420, align 2
  %idxprom1421 = zext i16 %i282 to i64
  %arrayidx1422 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1417, i64 0, i64 %idxprom1421
  %i283 = load i32, i32* %arrayidx1422, align 4
  %inc1423 = add nsw i32 %i283, 1
  store i32 %inc1423, i32* %arrayidx1422, align 4
  %rfreq1424 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1425 = sext i32 %bt.0 to i64
  %arrayidx1426 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1424, i64 0, i64 %idxprom1425
  %add1427 = add nsw i32 %gs.1, 25
  %idxprom1428 = sext i32 %add1427 to i64
  %arrayidx1429 = getelementptr inbounds i16, i16* %i, i64 %idxprom1428
  %i284 = load i16, i16* %arrayidx1429, align 2
  %idxprom1430 = zext i16 %i284 to i64
  %arrayidx1431 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1426, i64 0, i64 %idxprom1430
  %i285 = load i32, i32* %arrayidx1431, align 4
  %inc1432 = add nsw i32 %i285, 1
  store i32 %inc1432, i32* %arrayidx1431, align 4
  %rfreq1433 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1434 = sext i32 %bt.0 to i64
  %arrayidx1435 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1433, i64 0, i64 %idxprom1434
  %add1436 = add nsw i32 %gs.1, 26
  %idxprom1437 = sext i32 %add1436 to i64
  %arrayidx1438 = getelementptr inbounds i16, i16* %i, i64 %idxprom1437
  %i286 = load i16, i16* %arrayidx1438, align 2
  %idxprom1439 = zext i16 %i286 to i64
  %arrayidx1440 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1435, i64 0, i64 %idxprom1439
  %i287 = load i32, i32* %arrayidx1440, align 4
  %inc1441 = add nsw i32 %i287, 1
  store i32 %inc1441, i32* %arrayidx1440, align 4
  %rfreq1442 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1443 = sext i32 %bt.0 to i64
  %arrayidx1444 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1442, i64 0, i64 %idxprom1443
  %add1445 = add nsw i32 %gs.1, 27
  %idxprom1446 = sext i32 %add1445 to i64
  %arrayidx1447 = getelementptr inbounds i16, i16* %i, i64 %idxprom1446
  %i288 = load i16, i16* %arrayidx1447, align 2
  %idxprom1448 = zext i16 %i288 to i64
  %arrayidx1449 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1444, i64 0, i64 %idxprom1448
  %i289 = load i32, i32* %arrayidx1449, align 4
  %inc1450 = add nsw i32 %i289, 1
  store i32 %inc1450, i32* %arrayidx1449, align 4
  %rfreq1451 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1452 = sext i32 %bt.0 to i64
  %arrayidx1453 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1451, i64 0, i64 %idxprom1452
  %add1454 = add nsw i32 %gs.1, 28
  %idxprom1455 = sext i32 %add1454 to i64
  %arrayidx1456 = getelementptr inbounds i16, i16* %i, i64 %idxprom1455
  %i290 = load i16, i16* %arrayidx1456, align 2
  %idxprom1457 = zext i16 %i290 to i64
  %arrayidx1458 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1453, i64 0, i64 %idxprom1457
  %i291 = load i32, i32* %arrayidx1458, align 4
  %inc1459 = add nsw i32 %i291, 1
  store i32 %inc1459, i32* %arrayidx1458, align 4
  %rfreq1460 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1461 = sext i32 %bt.0 to i64
  %arrayidx1462 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1460, i64 0, i64 %idxprom1461
  %add1463 = add nsw i32 %gs.1, 29
  %idxprom1464 = sext i32 %add1463 to i64
  %arrayidx1465 = getelementptr inbounds i16, i16* %i, i64 %idxprom1464
  %i292 = load i16, i16* %arrayidx1465, align 2
  %idxprom1466 = zext i16 %i292 to i64
  %arrayidx1467 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1462, i64 0, i64 %idxprom1466
  %i293 = load i32, i32* %arrayidx1467, align 4
  %inc1468 = add nsw i32 %i293, 1
  store i32 %inc1468, i32* %arrayidx1467, align 4
  %rfreq1469 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1470 = sext i32 %bt.0 to i64
  %arrayidx1471 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1469, i64 0, i64 %idxprom1470
  %add1472 = add nsw i32 %gs.1, 30
  %idxprom1473 = sext i32 %add1472 to i64
  %arrayidx1474 = getelementptr inbounds i16, i16* %i, i64 %idxprom1473
  %i294 = load i16, i16* %arrayidx1474, align 2
  %idxprom1475 = zext i16 %i294 to i64
  %arrayidx1476 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1471, i64 0, i64 %idxprom1475
  %i295 = load i32, i32* %arrayidx1476, align 4
  %inc1477 = add nsw i32 %i295, 1
  store i32 %inc1477, i32* %arrayidx1476, align 4
  %rfreq1478 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1479 = sext i32 %bt.0 to i64
  %arrayidx1480 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1478, i64 0, i64 %idxprom1479
  %add1481 = add nsw i32 %gs.1, 31
  %idxprom1482 = sext i32 %add1481 to i64
  %arrayidx1483 = getelementptr inbounds i16, i16* %i, i64 %idxprom1482
  %i296 = load i16, i16* %arrayidx1483, align 2
  %idxprom1484 = zext i16 %i296 to i64
  %arrayidx1485 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1480, i64 0, i64 %idxprom1484
  %i297 = load i32, i32* %arrayidx1485, align 4
  %inc1486 = add nsw i32 %i297, 1
  store i32 %inc1486, i32* %arrayidx1485, align 4
  %rfreq1487 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1488 = sext i32 %bt.0 to i64
  %arrayidx1489 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1487, i64 0, i64 %idxprom1488
  %add1490 = add nsw i32 %gs.1, 32
  %idxprom1491 = sext i32 %add1490 to i64
  %arrayidx1492 = getelementptr inbounds i16, i16* %i, i64 %idxprom1491
  %i298 = load i16, i16* %arrayidx1492, align 2
  %idxprom1493 = zext i16 %i298 to i64
  %arrayidx1494 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1489, i64 0, i64 %idxprom1493
  %i299 = load i32, i32* %arrayidx1494, align 4
  %inc1495 = add nsw i32 %i299, 1
  store i32 %inc1495, i32* %arrayidx1494, align 4
  %rfreq1496 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1497 = sext i32 %bt.0 to i64
  %arrayidx1498 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1496, i64 0, i64 %idxprom1497
  %add1499 = add nsw i32 %gs.1, 33
  %idxprom1500 = sext i32 %add1499 to i64
  %arrayidx1501 = getelementptr inbounds i16, i16* %i, i64 %idxprom1500
  %i300 = load i16, i16* %arrayidx1501, align 2
  %idxprom1502 = zext i16 %i300 to i64
  %arrayidx1503 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1498, i64 0, i64 %idxprom1502
  %i301 = load i32, i32* %arrayidx1503, align 4
  %inc1504 = add nsw i32 %i301, 1
  store i32 %inc1504, i32* %arrayidx1503, align 4
  %rfreq1505 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1506 = sext i32 %bt.0 to i64
  %arrayidx1507 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1505, i64 0, i64 %idxprom1506
  %add1508 = add nsw i32 %gs.1, 34
  %idxprom1509 = sext i32 %add1508 to i64
  %arrayidx1510 = getelementptr inbounds i16, i16* %i, i64 %idxprom1509
  %i302 = load i16, i16* %arrayidx1510, align 2
  %idxprom1511 = zext i16 %i302 to i64
  %arrayidx1512 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1507, i64 0, i64 %idxprom1511
  %i303 = load i32, i32* %arrayidx1512, align 4
  %inc1513 = add nsw i32 %i303, 1
  store i32 %inc1513, i32* %arrayidx1512, align 4
  %rfreq1514 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1515 = sext i32 %bt.0 to i64
  %arrayidx1516 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1514, i64 0, i64 %idxprom1515
  %add1517 = add nsw i32 %gs.1, 35
  %idxprom1518 = sext i32 %add1517 to i64
  %arrayidx1519 = getelementptr inbounds i16, i16* %i, i64 %idxprom1518
  %i304 = load i16, i16* %arrayidx1519, align 2
  %idxprom1520 = zext i16 %i304 to i64
  %arrayidx1521 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1516, i64 0, i64 %idxprom1520
  %i305 = load i32, i32* %arrayidx1521, align 4
  %inc1522 = add nsw i32 %i305, 1
  store i32 %inc1522, i32* %arrayidx1521, align 4
  %rfreq1523 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1524 = sext i32 %bt.0 to i64
  %arrayidx1525 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1523, i64 0, i64 %idxprom1524
  %add1526 = add nsw i32 %gs.1, 36
  %idxprom1527 = sext i32 %add1526 to i64
  %arrayidx1528 = getelementptr inbounds i16, i16* %i, i64 %idxprom1527
  %i306 = load i16, i16* %arrayidx1528, align 2
  %idxprom1529 = zext i16 %i306 to i64
  %arrayidx1530 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1525, i64 0, i64 %idxprom1529
  %i307 = load i32, i32* %arrayidx1530, align 4
  %inc1531 = add nsw i32 %i307, 1
  store i32 %inc1531, i32* %arrayidx1530, align 4
  %rfreq1532 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1533 = sext i32 %bt.0 to i64
  %arrayidx1534 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1532, i64 0, i64 %idxprom1533
  %add1535 = add nsw i32 %gs.1, 37
  %idxprom1536 = sext i32 %add1535 to i64
  %arrayidx1537 = getelementptr inbounds i16, i16* %i, i64 %idxprom1536
  %i308 = load i16, i16* %arrayidx1537, align 2
  %idxprom1538 = zext i16 %i308 to i64
  %arrayidx1539 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1534, i64 0, i64 %idxprom1538
  %i309 = load i32, i32* %arrayidx1539, align 4
  %inc1540 = add nsw i32 %i309, 1
  store i32 %inc1540, i32* %arrayidx1539, align 4
  %rfreq1541 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1542 = sext i32 %bt.0 to i64
  %arrayidx1543 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1541, i64 0, i64 %idxprom1542
  %add1544 = add nsw i32 %gs.1, 38
  %idxprom1545 = sext i32 %add1544 to i64
  %arrayidx1546 = getelementptr inbounds i16, i16* %i, i64 %idxprom1545
  %i310 = load i16, i16* %arrayidx1546, align 2
  %idxprom1547 = zext i16 %i310 to i64
  %arrayidx1548 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1543, i64 0, i64 %idxprom1547
  %i311 = load i32, i32* %arrayidx1548, align 4
  %inc1549 = add nsw i32 %i311, 1
  store i32 %inc1549, i32* %arrayidx1548, align 4
  %rfreq1550 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1551 = sext i32 %bt.0 to i64
  %arrayidx1552 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1550, i64 0, i64 %idxprom1551
  %add1553 = add nsw i32 %gs.1, 39
  %idxprom1554 = sext i32 %add1553 to i64
  %arrayidx1555 = getelementptr inbounds i16, i16* %i, i64 %idxprom1554
  %i312 = load i16, i16* %arrayidx1555, align 2
  %idxprom1556 = zext i16 %i312 to i64
  %arrayidx1557 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1552, i64 0, i64 %idxprom1556
  %i313 = load i32, i32* %arrayidx1557, align 4
  %inc1558 = add nsw i32 %i313, 1
  store i32 %inc1558, i32* %arrayidx1557, align 4
  %rfreq1559 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1560 = sext i32 %bt.0 to i64
  %arrayidx1561 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1559, i64 0, i64 %idxprom1560
  %add1562 = add nsw i32 %gs.1, 40
  %idxprom1563 = sext i32 %add1562 to i64
  %arrayidx1564 = getelementptr inbounds i16, i16* %i, i64 %idxprom1563
  %i314 = load i16, i16* %arrayidx1564, align 2
  %idxprom1565 = zext i16 %i314 to i64
  %arrayidx1566 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1561, i64 0, i64 %idxprom1565
  %i315 = load i32, i32* %arrayidx1566, align 4
  %inc1567 = add nsw i32 %i315, 1
  store i32 %inc1567, i32* %arrayidx1566, align 4
  %rfreq1568 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1569 = sext i32 %bt.0 to i64
  %arrayidx1570 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1568, i64 0, i64 %idxprom1569
  %add1571 = add nsw i32 %gs.1, 41
  %idxprom1572 = sext i32 %add1571 to i64
  %arrayidx1573 = getelementptr inbounds i16, i16* %i, i64 %idxprom1572
  %i316 = load i16, i16* %arrayidx1573, align 2
  %idxprom1574 = zext i16 %i316 to i64
  %arrayidx1575 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1570, i64 0, i64 %idxprom1574
  %i317 = load i32, i32* %arrayidx1575, align 4
  %inc1576 = add nsw i32 %i317, 1
  store i32 %inc1576, i32* %arrayidx1575, align 4
  %rfreq1577 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1578 = sext i32 %bt.0 to i64
  %arrayidx1579 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1577, i64 0, i64 %idxprom1578
  %add1580 = add nsw i32 %gs.1, 42
  %idxprom1581 = sext i32 %add1580 to i64
  %arrayidx1582 = getelementptr inbounds i16, i16* %i, i64 %idxprom1581
  %i318 = load i16, i16* %arrayidx1582, align 2
  %idxprom1583 = zext i16 %i318 to i64
  %arrayidx1584 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1579, i64 0, i64 %idxprom1583
  %i319 = load i32, i32* %arrayidx1584, align 4
  %inc1585 = add nsw i32 %i319, 1
  store i32 %inc1585, i32* %arrayidx1584, align 4
  %rfreq1586 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1587 = sext i32 %bt.0 to i64
  %arrayidx1588 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1586, i64 0, i64 %idxprom1587
  %add1589 = add nsw i32 %gs.1, 43
  %idxprom1590 = sext i32 %add1589 to i64
  %arrayidx1591 = getelementptr inbounds i16, i16* %i, i64 %idxprom1590
  %i320 = load i16, i16* %arrayidx1591, align 2
  %idxprom1592 = zext i16 %i320 to i64
  %arrayidx1593 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1588, i64 0, i64 %idxprom1592
  %i321 = load i32, i32* %arrayidx1593, align 4
  %inc1594 = add nsw i32 %i321, 1
  store i32 %inc1594, i32* %arrayidx1593, align 4
  %rfreq1595 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1596 = sext i32 %bt.0 to i64
  %arrayidx1597 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1595, i64 0, i64 %idxprom1596
  %add1598 = add nsw i32 %gs.1, 44
  %idxprom1599 = sext i32 %add1598 to i64
  %arrayidx1600 = getelementptr inbounds i16, i16* %i, i64 %idxprom1599
  %i322 = load i16, i16* %arrayidx1600, align 2
  %idxprom1601 = zext i16 %i322 to i64
  %arrayidx1602 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1597, i64 0, i64 %idxprom1601
  %i323 = load i32, i32* %arrayidx1602, align 4
  %inc1603 = add nsw i32 %i323, 1
  store i32 %inc1603, i32* %arrayidx1602, align 4
  %rfreq1604 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1605 = sext i32 %bt.0 to i64
  %arrayidx1606 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1604, i64 0, i64 %idxprom1605
  %add1607 = add nsw i32 %gs.1, 45
  %idxprom1608 = sext i32 %add1607 to i64
  %arrayidx1609 = getelementptr inbounds i16, i16* %i, i64 %idxprom1608
  %i324 = load i16, i16* %arrayidx1609, align 2
  %idxprom1610 = zext i16 %i324 to i64
  %arrayidx1611 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1606, i64 0, i64 %idxprom1610
  %i325 = load i32, i32* %arrayidx1611, align 4
  %inc1612 = add nsw i32 %i325, 1
  store i32 %inc1612, i32* %arrayidx1611, align 4
  %rfreq1613 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1614 = sext i32 %bt.0 to i64
  %arrayidx1615 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1613, i64 0, i64 %idxprom1614
  %add1616 = add nsw i32 %gs.1, 46
  %idxprom1617 = sext i32 %add1616 to i64
  %arrayidx1618 = getelementptr inbounds i16, i16* %i, i64 %idxprom1617
  %i326 = load i16, i16* %arrayidx1618, align 2
  %idxprom1619 = zext i16 %i326 to i64
  %arrayidx1620 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1615, i64 0, i64 %idxprom1619
  %i327 = load i32, i32* %arrayidx1620, align 4
  %inc1621 = add nsw i32 %i327, 1
  store i32 %inc1621, i32* %arrayidx1620, align 4
  %rfreq1622 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1623 = sext i32 %bt.0 to i64
  %arrayidx1624 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1622, i64 0, i64 %idxprom1623
  %add1625 = add nsw i32 %gs.1, 47
  %idxprom1626 = sext i32 %add1625 to i64
  %arrayidx1627 = getelementptr inbounds i16, i16* %i, i64 %idxprom1626
  %i328 = load i16, i16* %arrayidx1627, align 2
  %idxprom1628 = zext i16 %i328 to i64
  %arrayidx1629 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1624, i64 0, i64 %idxprom1628
  %i329 = load i32, i32* %arrayidx1629, align 4
  %inc1630 = add nsw i32 %i329, 1
  store i32 %inc1630, i32* %arrayidx1629, align 4
  %rfreq1631 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1632 = sext i32 %bt.0 to i64
  %arrayidx1633 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1631, i64 0, i64 %idxprom1632
  %add1634 = add nsw i32 %gs.1, 48
  %idxprom1635 = sext i32 %add1634 to i64
  %arrayidx1636 = getelementptr inbounds i16, i16* %i, i64 %idxprom1635
  %i330 = load i16, i16* %arrayidx1636, align 2
  %idxprom1637 = zext i16 %i330 to i64
  %arrayidx1638 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1633, i64 0, i64 %idxprom1637
  %i331 = load i32, i32* %arrayidx1638, align 4
  %inc1639 = add nsw i32 %i331, 1
  store i32 %inc1639, i32* %arrayidx1638, align 4
  %rfreq1640 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1641 = sext i32 %bt.0 to i64
  %arrayidx1642 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1640, i64 0, i64 %idxprom1641
  %add1643 = add nsw i32 %gs.1, 49
  %idxprom1644 = sext i32 %add1643 to i64
  %arrayidx1645 = getelementptr inbounds i16, i16* %i, i64 %idxprom1644
  %i332 = load i16, i16* %arrayidx1645, align 2
  %idxprom1646 = zext i16 %i332 to i64
  %arrayidx1647 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1642, i64 0, i64 %idxprom1646
  %i333 = load i32, i32* %arrayidx1647, align 4
  %inc1648 = add nsw i32 %i333, 1
  store i32 %inc1648, i32* %arrayidx1647, align 4
  br label %if.end1665

if.else1649:                                      ; preds = %land.lhs.true1193, %for.end1182
  br label %for.cond1650

for.cond1650:                                     ; preds = %for.inc1662, %if.else1649
  %i.1 = phi i32 [ %gs.1, %if.else1649 ], [ %inc1663, %for.inc1662 ]
  %cmp1651 = icmp sle i32 %i.1, %ge.2
  br i1 %cmp1651, label %for.body1653, label %for.end1664

for.body1653:                                     ; preds = %for.cond1650
  %rfreq1654 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1655 = sext i32 %bt.0 to i64
  %arrayidx1656 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1654, i64 0, i64 %idxprom1655
  %idxprom1657 = sext i32 %i.1 to i64
  %arrayidx1658 = getelementptr inbounds i16, i16* %i, i64 %idxprom1657
  %i334 = load i16, i16* %arrayidx1658, align 2
  %idxprom1659 = zext i16 %i334 to i64
  %arrayidx1660 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1656, i64 0, i64 %idxprom1659
  %i335 = load i32, i32* %arrayidx1660, align 4
  %inc1661 = add nsw i32 %i335, 1
  store i32 %inc1661, i32* %arrayidx1660, align 4
  br label %for.inc1662

for.inc1662:                                      ; preds = %for.body1653
  %inc1663 = add nsw i32 %i.1, 1
  br label %for.cond1650

for.end1664:                                      ; preds = %for.cond1650
  br label %if.end1665

if.end1665:                                       ; preds = %for.end1664, %if.then1198
  %add1666 = add nsw i32 %ge.2, 1
  br label %while.body188

while.end1667:                                    ; preds = %if.then192
  %verbosity1668 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 28
  %i336 = load i32, i32* %verbosity1668, align 8
  %cmp1669 = icmp sge i32 %i336, 3
  br i1 %cmp1669, label %if.then1671, label %if.end1686

if.then1671:                                      ; preds = %while.end1667
  %i337 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %add1672 = add nsw i32 %iter.0, 1
  %div1673 = sdiv i32 %totc.0, 8
  %call1674 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i337, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4.117, i64 0, i64 0), i32 %add1672, i32 %div1673)
  br label %for.cond1675

for.cond1675:                                     ; preds = %for.inc1682, %if.then1671
  %t.6 = phi i32 [ 0, %if.then1671 ], [ %inc1683, %for.inc1682 ]
  %cmp1676 = icmp slt i32 %t.6, %nGroups.3
  br i1 %cmp1676, label %for.body1678, label %for.end1684

for.body1678:                                     ; preds = %for.cond1675
  %i338 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %idxprom1679 = sext i32 %t.6 to i64
  %arrayidx1680 = getelementptr inbounds [6 x i32], [6 x i32]* %fave, i64 0, i64 %idxprom1679
  %i339 = load i32, i32* %arrayidx1680, align 4
  %call1681 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i338, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.118, i64 0, i64 0), i32 %i339)
  br label %for.inc1682

for.inc1682:                                      ; preds = %for.body1678
  %inc1683 = add nsw i32 %t.6, 1
  br label %for.cond1675

for.end1684:                                      ; preds = %for.cond1675
  %i340 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call1685 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i340, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.119, i64 0, i64 0))
  br label %if.end1686

if.end1686:                                       ; preds = %for.end1684, %while.end1667
  br label %for.cond1687

for.cond1687:                                     ; preds = %for.inc1699, %if.end1686
  %t.7 = phi i32 [ 0, %if.end1686 ], [ %inc1700, %for.inc1699 ]
  %cmp1688 = icmp slt i32 %t.7, %nGroups.3
  br i1 %cmp1688, label %for.body1690, label %for.end1701

for.body1690:                                     ; preds = %for.cond1687
  %len1691 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %idxprom1692 = sext i32 %t.7 to i64
  %arrayidx1693 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1691, i64 0, i64 %idxprom1692
  %arrayidx1694 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1693, i64 0, i64 0
  %rfreq1695 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 37
  %idxprom1696 = sext i32 %t.7 to i64
  %arrayidx1697 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %rfreq1695, i64 0, i64 %idxprom1696
  %arrayidx1698 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1697, i64 0, i64 0
  call void @BZ2_hbMakeCodeLengths(i8* %arrayidx1694, i32* %arrayidx1698, i32 %add, i32 17)
  br label %for.inc1699

for.inc1699:                                      ; preds = %for.body1690
  %inc1700 = add nsw i32 %t.7, 1
  br label %for.cond1687

for.end1701:                                      ; preds = %for.cond1687
  br label %for.inc1702

for.inc1702:                                      ; preds = %for.end1701
  %inc1703 = add nsw i32 %iter.0, 1
  br label %for.cond100

for.end1704:                                      ; preds = %for.cond100
  %cmp1705 = icmp slt i32 %nGroups.3, 8
  br i1 %cmp1705, label %if.end1708, label %if.then1707

if.then1707:                                      ; preds = %for.end1704
  call void @BZ2_bz__AssertH__fail(i32 3002)
  br label %if.end1708

if.end1708:                                       ; preds = %if.then1707, %for.end1704
  %cmp1709 = icmp slt i32 %nSelectors.0, 32768
  br i1 %cmp1709, label %land.lhs.true1711, label %if.then1714

land.lhs.true1711:                                ; preds = %if.end1708
  %cmp1712 = icmp sle i32 %nSelectors.0, 18002
  br i1 %cmp1712, label %if.end1715, label %if.then1714

if.then1714:                                      ; preds = %land.lhs.true1711, %if.end1708
  call void @BZ2_bz__AssertH__fail(i32 3003)
  br label %if.end1715

if.end1715:                                       ; preds = %if.then1714, %land.lhs.true1711
  br label %for.cond1716

for.cond1716:                                     ; preds = %for.inc1723, %if.end1715
  %i.2 = phi i32 [ 0, %if.end1715 ], [ %inc1724, %for.inc1723 ]
  %cmp1717 = icmp slt i32 %i.2, %nGroups.3
  br i1 %cmp1717, label %for.body1719, label %for.end1725

for.body1719:                                     ; preds = %for.cond1716
  %conv1720 = trunc i32 %i.2 to i8
  %idxprom1721 = sext i32 %i.2 to i64
  %arrayidx1722 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1721
  store i8 %conv1720, i8* %arrayidx1722, align 1
  br label %for.inc1723

for.inc1723:                                      ; preds = %for.body1719
  %inc1724 = add nsw i32 %i.2, 1
  br label %for.cond1716

for.end1725:                                      ; preds = %for.cond1716
  br label %for.cond1726

for.cond1726:                                     ; preds = %for.inc1751, %for.end1725
  %i.3 = phi i32 [ 0, %for.end1725 ], [ %inc1752, %for.inc1751 ]
  %cmp1727 = icmp slt i32 %i.3, %nSelectors.0
  br i1 %cmp1727, label %for.body1729, label %for.end1753

for.body1729:                                     ; preds = %for.cond1726
  %selector1730 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 33
  %idxprom1731 = sext i32 %i.3 to i64
  %arrayidx1732 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector1730, i64 0, i64 %idxprom1731
  %i341 = load i8, i8* %arrayidx1732, align 1
  %idxprom1733 = sext i32 0 to i64
  %arrayidx1734 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1733
  %i342 = load i8, i8* %arrayidx1734, align 1
  br label %while.cond1735

while.cond1735:                                   ; preds = %while.body1740, %for.body1729
  %tmp.0 = phi i8 [ %i342, %for.body1729 ], [ %i343, %while.body1740 ]
  %j.0 = phi i32 [ 0, %for.body1729 ], [ %inc1741, %while.body1740 ]
  %conv1736 = zext i8 %i341 to i32
  %conv1737 = zext i8 %tmp.0 to i32
  %cmp1738 = icmp ne i32 %conv1736, %conv1737
  br i1 %cmp1738, label %while.body1740, label %while.end1746

while.body1740:                                   ; preds = %while.cond1735
  %inc1741 = add nsw i32 %j.0, 1
  %idxprom1742 = sext i32 %inc1741 to i64
  %arrayidx1743 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1742
  %i343 = load i8, i8* %arrayidx1743, align 1
  %idxprom1744 = sext i32 %inc1741 to i64
  %arrayidx1745 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1744
  store i8 %tmp.0, i8* %arrayidx1745, align 1
  br label %while.cond1735

while.end1746:                                    ; preds = %while.cond1735
  %arrayidx1747 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 0
  store i8 %tmp.0, i8* %arrayidx1747, align 1
  %conv1748 = trunc i32 %j.0 to i8
  %selectorMtf = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 34
  %idxprom1749 = sext i32 %i.3 to i64
  %arrayidx1750 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selectorMtf, i64 0, i64 %idxprom1749
  store i8 %conv1748, i8* %arrayidx1750, align 1
  br label %for.inc1751

for.inc1751:                                      ; preds = %while.end1746
  %inc1752 = add nsw i32 %i.3, 1
  br label %for.cond1726

for.end1753:                                      ; preds = %for.cond1726
  br label %for.cond1754

for.cond1754:                                     ; preds = %for.inc1812, %for.end1753
  %t.8 = phi i32 [ 0, %for.end1753 ], [ %inc1813, %for.inc1812 ]
  %cmp1755 = icmp slt i32 %t.8, %nGroups.3
  br i1 %cmp1755, label %for.body1757, label %for.end1814

for.body1757:                                     ; preds = %for.cond1754
  br label %for.cond1758

for.cond1758:                                     ; preds = %for.inc1794, %for.body1757
  %maxLen.0 = phi i32 [ 0, %for.body1757 ], [ %maxLen.1, %for.inc1794 ]
  %minLen.0 = phi i32 [ 32, %for.body1757 ], [ %minLen.1, %for.inc1794 ]
  %i.4 = phi i32 [ 0, %for.body1757 ], [ %inc1795, %for.inc1794 ]
  %cmp1759 = icmp slt i32 %i.4, %add
  br i1 %cmp1759, label %for.body1761, label %for.end1796

for.body1761:                                     ; preds = %for.cond1758
  %len1762 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %idxprom1763 = sext i32 %t.8 to i64
  %arrayidx1764 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1762, i64 0, i64 %idxprom1763
  %idxprom1765 = sext i32 %i.4 to i64
  %arrayidx1766 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1764, i64 0, i64 %idxprom1765
  %i344 = load i8, i8* %arrayidx1766, align 1
  %conv1767 = zext i8 %i344 to i32
  %cmp1768 = icmp sgt i32 %conv1767, %maxLen.0
  br i1 %cmp1768, label %if.then1770, label %if.end1777

if.then1770:                                      ; preds = %for.body1761
  %len1771 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %idxprom1772 = sext i32 %t.8 to i64
  %arrayidx1773 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1771, i64 0, i64 %idxprom1772
  %idxprom1774 = sext i32 %i.4 to i64
  %arrayidx1775 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1773, i64 0, i64 %idxprom1774
  %i345 = load i8, i8* %arrayidx1775, align 1
  %conv1776 = zext i8 %i345 to i32
  br label %if.end1777

if.end1777:                                       ; preds = %if.then1770, %for.body1761
  %maxLen.1 = phi i32 [ %conv1776, %if.then1770 ], [ %maxLen.0, %for.body1761 ]
  %len1778 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %idxprom1779 = sext i32 %t.8 to i64
  %arrayidx1780 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1778, i64 0, i64 %idxprom1779
  %idxprom1781 = sext i32 %i.4 to i64
  %arrayidx1782 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1780, i64 0, i64 %idxprom1781
  %i346 = load i8, i8* %arrayidx1782, align 1
  %conv1783 = zext i8 %i346 to i32
  %cmp1784 = icmp slt i32 %conv1783, %minLen.0
  br i1 %cmp1784, label %if.then1786, label %if.end1793

if.then1786:                                      ; preds = %if.end1777
  %len1787 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %idxprom1788 = sext i32 %t.8 to i64
  %arrayidx1789 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1787, i64 0, i64 %idxprom1788
  %idxprom1790 = sext i32 %i.4 to i64
  %arrayidx1791 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1789, i64 0, i64 %idxprom1790
  %i347 = load i8, i8* %arrayidx1791, align 1
  %conv1792 = zext i8 %i347 to i32
  br label %if.end1793

if.end1793:                                       ; preds = %if.then1786, %if.end1777
  %minLen.1 = phi i32 [ %conv1792, %if.then1786 ], [ %minLen.0, %if.end1777 ]
  br label %for.inc1794

for.inc1794:                                      ; preds = %if.end1793
  %inc1795 = add nsw i32 %i.4, 1
  br label %for.cond1758

for.end1796:                                      ; preds = %for.cond1758
  %cmp1797 = icmp sgt i32 %maxLen.0, 17
  br i1 %cmp1797, label %if.then1799, label %if.end1800

if.then1799:                                      ; preds = %for.end1796
  call void @BZ2_bz__AssertH__fail(i32 3004)
  br label %if.end1800

if.end1800:                                       ; preds = %if.then1799, %for.end1796
  %cmp1801 = icmp slt i32 %minLen.0, 1
  br i1 %cmp1801, label %if.then1803, label %if.end1804

if.then1803:                                      ; preds = %if.end1800
  call void @BZ2_bz__AssertH__fail(i32 3005)
  br label %if.end1804

if.end1804:                                       ; preds = %if.then1803, %if.end1800
  %code = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 36
  %idxprom1805 = sext i32 %t.8 to i64
  %arrayidx1806 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %code, i64 0, i64 %idxprom1805
  %arrayidx1807 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1806, i64 0, i64 0
  %len1808 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %idxprom1809 = sext i32 %t.8 to i64
  %arrayidx1810 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1808, i64 0, i64 %idxprom1809
  %arrayidx1811 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1810, i64 0, i64 0
  call void @BZ2_hbAssignCodes(i32* %arrayidx1807, i8* %arrayidx1811, i32 %minLen.0, i32 %maxLen.0, i32 %add)
  br label %for.inc1812

for.inc1812:                                      ; preds = %if.end1804
  %inc1813 = add nsw i32 %t.8, 1
  br label %for.cond1754

for.end1814:                                      ; preds = %for.cond1754
  br label %for.cond1815

for.cond1815:                                     ; preds = %for.inc1836, %for.end1814
  %i.5 = phi i32 [ 0, %for.end1814 ], [ %inc1837, %for.inc1836 ]
  %cmp1816 = icmp slt i32 %i.5, 16
  br i1 %cmp1816, label %for.body1818, label %for.end1838

for.body1818:                                     ; preds = %for.cond1815
  %idxprom1819 = sext i32 %i.5 to i64
  %arrayidx1820 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %idxprom1819
  store i8 0, i8* %arrayidx1820, align 1
  br label %for.cond1821

for.cond1821:                                     ; preds = %for.inc1833, %for.body1818
  %j.1 = phi i32 [ 0, %for.body1818 ], [ %inc1834, %for.inc1833 ]
  %cmp1822 = icmp slt i32 %j.1, 16
  br i1 %cmp1822, label %for.body1824, label %for.end1835

for.body1824:                                     ; preds = %for.cond1821
  %inUse = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 22
  %mul1825 = mul nsw i32 %i.5, 16
  %add1826 = add nsw i32 %mul1825, %j.1
  %idxprom1827 = sext i32 %add1826 to i64
  %arrayidx1828 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom1827
  %i348 = load i8, i8* %arrayidx1828, align 1
  %tobool = icmp ne i8 %i348, 0
  br i1 %tobool, label %if.then1829, label %if.end1832

if.then1829:                                      ; preds = %for.body1824
  %idxprom1830 = sext i32 %i.5 to i64
  %arrayidx1831 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %idxprom1830
  store i8 1, i8* %arrayidx1831, align 1
  br label %if.end1832

if.end1832:                                       ; preds = %if.then1829, %for.body1824
  br label %for.inc1833

for.inc1833:                                      ; preds = %if.end1832
  %inc1834 = add nsw i32 %j.1, 1
  br label %for.cond1821

for.end1835:                                      ; preds = %for.cond1821
  br label %for.inc1836

for.inc1836:                                      ; preds = %for.end1835
  %inc1837 = add nsw i32 %i.5, 1
  br label %for.cond1815

for.end1838:                                      ; preds = %for.cond1815
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i349 = load i32, i32* %numZ, align 4
  br label %for.cond1839

for.cond1839:                                     ; preds = %for.inc1849, %for.end1838
  %i.6 = phi i32 [ 0, %for.end1838 ], [ %inc1850, %for.inc1849 ]
  %cmp1840 = icmp slt i32 %i.6, 16
  br i1 %cmp1840, label %for.body1842, label %for.end1851

for.body1842:                                     ; preds = %for.cond1839
  %idxprom1843 = sext i32 %i.6 to i64
  %arrayidx1844 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %idxprom1843
  %i350 = load i8, i8* %arrayidx1844, align 1
  %tobool1845 = icmp ne i8 %i350, 0
  br i1 %tobool1845, label %if.then1846, label %if.else1847

if.then1846:                                      ; preds = %for.body1842
  call void @bsW(%struct.EState* %s, i32 1, i32 1)
  br label %if.end1848

if.else1847:                                      ; preds = %for.body1842
  call void @bsW(%struct.EState* %s, i32 1, i32 0)
  br label %if.end1848

if.end1848:                                       ; preds = %if.else1847, %if.then1846
  br label %for.inc1849

for.inc1849:                                      ; preds = %if.end1848
  %inc1850 = add nsw i32 %i.6, 1
  br label %for.cond1839

for.end1851:                                      ; preds = %for.cond1839
  br label %for.cond1852

for.cond1852:                                     ; preds = %for.inc1877, %for.end1851
  %i.7 = phi i32 [ 0, %for.end1851 ], [ %inc1878, %for.inc1877 ]
  %cmp1853 = icmp slt i32 %i.7, 16
  br i1 %cmp1853, label %for.body1855, label %for.end1879

for.body1855:                                     ; preds = %for.cond1852
  %idxprom1856 = sext i32 %i.7 to i64
  %arrayidx1857 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %idxprom1856
  %i351 = load i8, i8* %arrayidx1857, align 1
  %tobool1858 = icmp ne i8 %i351, 0
  br i1 %tobool1858, label %if.then1859, label %if.end1876

if.then1859:                                      ; preds = %for.body1855
  br label %for.cond1860

for.cond1860:                                     ; preds = %for.inc1873, %if.then1859
  %j.2 = phi i32 [ 0, %if.then1859 ], [ %inc1874, %for.inc1873 ]
  %cmp1861 = icmp slt i32 %j.2, 16
  br i1 %cmp1861, label %for.body1863, label %for.end1875

for.body1863:                                     ; preds = %for.cond1860
  %inUse1864 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 22
  %mul1865 = mul nsw i32 %i.7, 16
  %add1866 = add nsw i32 %mul1865, %j.2
  %idxprom1867 = sext i32 %add1866 to i64
  %arrayidx1868 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse1864, i64 0, i64 %idxprom1867
  %i352 = load i8, i8* %arrayidx1868, align 1
  %tobool1869 = icmp ne i8 %i352, 0
  br i1 %tobool1869, label %if.then1870, label %if.else1871

if.then1870:                                      ; preds = %for.body1863
  call void @bsW(%struct.EState* %s, i32 1, i32 1)
  br label %if.end1872

if.else1871:                                      ; preds = %for.body1863
  call void @bsW(%struct.EState* %s, i32 1, i32 0)
  br label %if.end1872

if.end1872:                                       ; preds = %if.else1871, %if.then1870
  br label %for.inc1873

for.inc1873:                                      ; preds = %if.end1872
  %inc1874 = add nsw i32 %j.2, 1
  br label %for.cond1860

for.end1875:                                      ; preds = %for.cond1860
  br label %if.end1876

if.end1876:                                       ; preds = %for.end1875, %for.body1855
  br label %for.inc1877

for.inc1877:                                      ; preds = %if.end1876
  %inc1878 = add nsw i32 %i.7, 1
  br label %for.cond1852

for.end1879:                                      ; preds = %for.cond1852
  %verbosity1880 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 28
  %i353 = load i32, i32* %verbosity1880, align 8
  %cmp1881 = icmp sge i32 %i353, 3
  br i1 %cmp1881, label %if.then1883, label %if.end1887

if.then1883:                                      ; preds = %for.end1879
  %i354 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %numZ1884 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i355 = load i32, i32* %numZ1884, align 4
  %sub1885 = sub nsw i32 %i355, %i349
  %call1886 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i354, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7.120, i64 0, i64 0), i32 %sub1885)
  br label %if.end1887

if.end1887:                                       ; preds = %if.then1883, %for.end1879
  %numZ1888 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i356 = load i32, i32* %numZ1888, align 4
  call void @bsW(%struct.EState* %s, i32 3, i32 %nGroups.3)
  call void @bsW(%struct.EState* %s, i32 15, i32 %nSelectors.0)
  br label %for.cond1889

for.cond1889:                                     ; preds = %for.inc1904, %if.end1887
  %i.8 = phi i32 [ 0, %if.end1887 ], [ %inc1905, %for.inc1904 ]
  %cmp1890 = icmp slt i32 %i.8, %nSelectors.0
  br i1 %cmp1890, label %for.body1892, label %for.end1906

for.body1892:                                     ; preds = %for.cond1889
  br label %for.cond1893

for.cond1893:                                     ; preds = %for.inc1901, %for.body1892
  %j.3 = phi i32 [ 0, %for.body1892 ], [ %inc1902, %for.inc1901 ]
  %selectorMtf1894 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 34
  %idxprom1895 = sext i32 %i.8 to i64
  %arrayidx1896 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selectorMtf1894, i64 0, i64 %idxprom1895
  %i357 = load i8, i8* %arrayidx1896, align 1
  %conv1897 = zext i8 %i357 to i32
  %cmp1898 = icmp slt i32 %j.3, %conv1897
  br i1 %cmp1898, label %for.body1900, label %for.end1903

for.body1900:                                     ; preds = %for.cond1893
  call void @bsW(%struct.EState* %s, i32 1, i32 1)
  br label %for.inc1901

for.inc1901:                                      ; preds = %for.body1900
  %inc1902 = add nsw i32 %j.3, 1
  br label %for.cond1893

for.end1903:                                      ; preds = %for.cond1893
  call void @bsW(%struct.EState* %s, i32 1, i32 0)
  br label %for.inc1904

for.inc1904:                                      ; preds = %for.end1903
  %inc1905 = add nsw i32 %i.8, 1
  br label %for.cond1889

for.end1906:                                      ; preds = %for.cond1889
  %verbosity1907 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 28
  %i358 = load i32, i32* %verbosity1907, align 8
  %cmp1908 = icmp sge i32 %i358, 3
  br i1 %cmp1908, label %if.then1910, label %if.end1914

if.then1910:                                      ; preds = %for.end1906
  %i359 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %numZ1911 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i360 = load i32, i32* %numZ1911, align 4
  %sub1912 = sub nsw i32 %i360, %i356
  %call1913 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i359, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8.121, i64 0, i64 0), i32 %sub1912)
  br label %if.end1914

if.end1914:                                       ; preds = %if.then1910, %for.end1906
  %numZ1915 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i361 = load i32, i32* %numZ1915, align 4
  br label %for.cond1916

for.cond1916:                                     ; preds = %for.inc1956, %if.end1914
  %t.9 = phi i32 [ 0, %if.end1914 ], [ %inc1957, %for.inc1956 ]
  %cmp1917 = icmp slt i32 %t.9, %nGroups.3
  br i1 %cmp1917, label %for.body1919, label %for.end1958

for.body1919:                                     ; preds = %for.cond1916
  %len1920 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %idxprom1921 = sext i32 %t.9 to i64
  %arrayidx1922 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1920, i64 0, i64 %idxprom1921
  %arrayidx1923 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1922, i64 0, i64 0
  %i362 = load i8, i8* %arrayidx1923, align 2
  %conv1924 = zext i8 %i362 to i32
  call void @bsW(%struct.EState* %s, i32 5, i32 %conv1924)
  br label %for.cond1925

for.cond1925:                                     ; preds = %for.inc1953, %for.body1919
  %i.9 = phi i32 [ 0, %for.body1919 ], [ %inc1954, %for.inc1953 ]
  %curr.0 = phi i32 [ %conv1924, %for.body1919 ], [ %curr.2, %for.inc1953 ]
  %cmp1926 = icmp slt i32 %i.9, %add
  br i1 %cmp1926, label %for.body1928, label %for.end1955

for.body1928:                                     ; preds = %for.cond1925
  br label %while.cond1929

while.cond1929:                                   ; preds = %while.body1938, %for.body1928
  %curr.1 = phi i32 [ %curr.0, %for.body1928 ], [ %inc1939, %while.body1938 ]
  %len1930 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %idxprom1931 = sext i32 %t.9 to i64
  %arrayidx1932 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1930, i64 0, i64 %idxprom1931
  %idxprom1933 = sext i32 %i.9 to i64
  %arrayidx1934 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1932, i64 0, i64 %idxprom1933
  %i363 = load i8, i8* %arrayidx1934, align 1
  %conv1935 = zext i8 %i363 to i32
  %cmp1936 = icmp slt i32 %curr.1, %conv1935
  br i1 %cmp1936, label %while.body1938, label %while.end1940

while.body1938:                                   ; preds = %while.cond1929
  call void @bsW(%struct.EState* %s, i32 2, i32 2)
  %inc1939 = add nsw i32 %curr.1, 1
  br label %while.cond1929

while.end1940:                                    ; preds = %while.cond1929
  br label %while.cond1941

while.cond1941:                                   ; preds = %while.body1950, %while.end1940
  %curr.2 = phi i32 [ %curr.1, %while.end1940 ], [ %dec1951, %while.body1950 ]
  %len1942 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %idxprom1943 = sext i32 %t.9 to i64
  %arrayidx1944 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1942, i64 0, i64 %idxprom1943
  %idxprom1945 = sext i32 %i.9 to i64
  %arrayidx1946 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1944, i64 0, i64 %idxprom1945
  %i364 = load i8, i8* %arrayidx1946, align 1
  %conv1947 = zext i8 %i364 to i32
  %cmp1948 = icmp sgt i32 %curr.2, %conv1947
  br i1 %cmp1948, label %while.body1950, label %while.end1952

while.body1950:                                   ; preds = %while.cond1941
  call void @bsW(%struct.EState* %s, i32 2, i32 3)
  %dec1951 = add nsw i32 %curr.2, -1
  br label %while.cond1941

while.end1952:                                    ; preds = %while.cond1941
  call void @bsW(%struct.EState* %s, i32 1, i32 0)
  br label %for.inc1953

for.inc1953:                                      ; preds = %while.end1952
  %inc1954 = add nsw i32 %i.9, 1
  br label %for.cond1925

for.end1955:                                      ; preds = %for.cond1925
  br label %for.inc1956

for.inc1956:                                      ; preds = %for.end1955
  %inc1957 = add nsw i32 %t.9, 1
  br label %for.cond1916

for.end1958:                                      ; preds = %for.cond1916
  %verbosity1959 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 28
  %i365 = load i32, i32* %verbosity1959, align 8
  %cmp1960 = icmp sge i32 %i365, 3
  br i1 %cmp1960, label %if.then1962, label %if.end1966

if.then1962:                                      ; preds = %for.end1958
  %i366 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %numZ1963 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i367 = load i32, i32* %numZ1963, align 4
  %sub1964 = sub nsw i32 %i367, %i361
  %call1965 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i366, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.122, i64 0, i64 0), i32 %sub1964)
  br label %if.end1966

if.end1966:                                       ; preds = %if.then1962, %for.end1958
  %numZ1967 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i368 = load i32, i32* %numZ1967, align 4
  br label %while.body1969

while.body1969:                                   ; preds = %if.end2443, %if.end1966
  %selCtr.0 = phi i32 [ 0, %if.end1966 ], [ %inc2445, %if.end2443 ]
  %gs.2 = phi i32 [ 0, %if.end1966 ], [ %add2444, %if.end2443 ]
  %nMTF1970 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i369 = load i32, i32* %nMTF1970, align 4
  %cmp1971 = icmp sge i32 %gs.2, %i369
  br i1 %cmp1971, label %if.then1973, label %if.end1974

if.then1973:                                      ; preds = %while.body1969
  br label %while.end2446

if.end1974:                                       ; preds = %while.body1969
  %add1975 = add nsw i32 %gs.2, 50
  %sub1976 = sub nsw i32 %add1975, 1
  %nMTF1977 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i370 = load i32, i32* %nMTF1977, align 4
  %cmp1978 = icmp sge i32 %sub1976, %i370
  br i1 %cmp1978, label %if.then1980, label %if.end1983

if.then1980:                                      ; preds = %if.end1974
  %nMTF1981 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 31
  %i371 = load i32, i32* %nMTF1981, align 4
  %sub1982 = sub nsw i32 %i371, 1
  br label %if.end1983

if.end1983:                                       ; preds = %if.then1980, %if.end1974
  %ge.3 = phi i32 [ %sub1982, %if.then1980 ], [ %sub1976, %if.end1974 ]
  %selector1984 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 33
  %idxprom1985 = sext i32 %selCtr.0 to i64
  %arrayidx1986 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector1984, i64 0, i64 %idxprom1985
  %i372 = load i8, i8* %arrayidx1986, align 1
  %conv1987 = zext i8 %i372 to i32
  %cmp1988 = icmp slt i32 %conv1987, %nGroups.3
  br i1 %cmp1988, label %if.end1991, label %if.then1990

if.then1990:                                      ; preds = %if.end1983
  call void @BZ2_bz__AssertH__fail(i32 3006)
  br label %if.end1991

if.end1991:                                       ; preds = %if.then1990, %if.end1983
  %cmp1992 = icmp eq i32 %nGroups.3, 6
  br i1 %cmp1992, label %land.lhs.true1994, label %if.else2414

land.lhs.true1994:                                ; preds = %if.end1991
  %sub1995 = sub nsw i32 %ge.3, %gs.2
  %add1996 = add nsw i32 %sub1995, 1
  %cmp1997 = icmp eq i32 50, %add1996
  br i1 %cmp1997, label %if.then1999, label %if.else2414

if.then1999:                                      ; preds = %land.lhs.true1994
  %len2000 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %selector2001 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 33
  %idxprom2002 = sext i32 %selCtr.0 to i64
  %arrayidx2003 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector2001, i64 0, i64 %idxprom2002
  %i373 = load i8, i8* %arrayidx2003, align 1
  %idxprom2004 = zext i8 %i373 to i64
  %arrayidx2005 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len2000, i64 0, i64 %idxprom2004
  %arrayidx2006 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx2005, i64 0, i64 0
  %code2007 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 36
  %selector2008 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 33
  %idxprom2009 = sext i32 %selCtr.0 to i64
  %arrayidx2010 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector2008, i64 0, i64 %idxprom2009
  %i374 = load i8, i8* %arrayidx2010, align 1
  %idxprom2011 = zext i8 %i374 to i64
  %arrayidx2012 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %code2007, i64 0, i64 %idxprom2011
  %arrayidx2013 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx2012, i64 0, i64 0
  %add2014 = add nsw i32 %gs.2, 0
  %idxprom2015 = sext i32 %add2014 to i64
  %arrayidx2016 = getelementptr inbounds i16, i16* %i, i64 %idxprom2015
  %i375 = load i16, i16* %arrayidx2016, align 2
  %idxprom2017 = zext i16 %i375 to i64
  %arrayidx2018 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2017
  %i376 = load i8, i8* %arrayidx2018, align 1
  %conv2019 = zext i8 %i376 to i32
  %idxprom2020 = zext i16 %i375 to i64
  %arrayidx2021 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2020
  %i377 = load i32, i32* %arrayidx2021, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2019, i32 %i377)
  %add2022 = add nsw i32 %gs.2, 1
  %idxprom2023 = sext i32 %add2022 to i64
  %arrayidx2024 = getelementptr inbounds i16, i16* %i, i64 %idxprom2023
  %i378 = load i16, i16* %arrayidx2024, align 2
  %idxprom2025 = zext i16 %i378 to i64
  %arrayidx2026 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2025
  %i379 = load i8, i8* %arrayidx2026, align 1
  %conv2027 = zext i8 %i379 to i32
  %idxprom2028 = zext i16 %i378 to i64
  %arrayidx2029 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2028
  %i380 = load i32, i32* %arrayidx2029, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2027, i32 %i380)
  %add2030 = add nsw i32 %gs.2, 2
  %idxprom2031 = sext i32 %add2030 to i64
  %arrayidx2032 = getelementptr inbounds i16, i16* %i, i64 %idxprom2031
  %i381 = load i16, i16* %arrayidx2032, align 2
  %idxprom2033 = zext i16 %i381 to i64
  %arrayidx2034 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2033
  %i382 = load i8, i8* %arrayidx2034, align 1
  %conv2035 = zext i8 %i382 to i32
  %idxprom2036 = zext i16 %i381 to i64
  %arrayidx2037 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2036
  %i383 = load i32, i32* %arrayidx2037, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2035, i32 %i383)
  %add2038 = add nsw i32 %gs.2, 3
  %idxprom2039 = sext i32 %add2038 to i64
  %arrayidx2040 = getelementptr inbounds i16, i16* %i, i64 %idxprom2039
  %i384 = load i16, i16* %arrayidx2040, align 2
  %idxprom2041 = zext i16 %i384 to i64
  %arrayidx2042 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2041
  %i385 = load i8, i8* %arrayidx2042, align 1
  %conv2043 = zext i8 %i385 to i32
  %idxprom2044 = zext i16 %i384 to i64
  %arrayidx2045 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2044
  %i386 = load i32, i32* %arrayidx2045, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2043, i32 %i386)
  %add2046 = add nsw i32 %gs.2, 4
  %idxprom2047 = sext i32 %add2046 to i64
  %arrayidx2048 = getelementptr inbounds i16, i16* %i, i64 %idxprom2047
  %i387 = load i16, i16* %arrayidx2048, align 2
  %idxprom2049 = zext i16 %i387 to i64
  %arrayidx2050 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2049
  %i388 = load i8, i8* %arrayidx2050, align 1
  %conv2051 = zext i8 %i388 to i32
  %idxprom2052 = zext i16 %i387 to i64
  %arrayidx2053 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2052
  %i389 = load i32, i32* %arrayidx2053, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2051, i32 %i389)
  %add2054 = add nsw i32 %gs.2, 5
  %idxprom2055 = sext i32 %add2054 to i64
  %arrayidx2056 = getelementptr inbounds i16, i16* %i, i64 %idxprom2055
  %i390 = load i16, i16* %arrayidx2056, align 2
  %idxprom2057 = zext i16 %i390 to i64
  %arrayidx2058 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2057
  %i391 = load i8, i8* %arrayidx2058, align 1
  %conv2059 = zext i8 %i391 to i32
  %idxprom2060 = zext i16 %i390 to i64
  %arrayidx2061 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2060
  %i392 = load i32, i32* %arrayidx2061, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2059, i32 %i392)
  %add2062 = add nsw i32 %gs.2, 6
  %idxprom2063 = sext i32 %add2062 to i64
  %arrayidx2064 = getelementptr inbounds i16, i16* %i, i64 %idxprom2063
  %i393 = load i16, i16* %arrayidx2064, align 2
  %idxprom2065 = zext i16 %i393 to i64
  %arrayidx2066 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2065
  %i394 = load i8, i8* %arrayidx2066, align 1
  %conv2067 = zext i8 %i394 to i32
  %idxprom2068 = zext i16 %i393 to i64
  %arrayidx2069 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2068
  %i395 = load i32, i32* %arrayidx2069, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2067, i32 %i395)
  %add2070 = add nsw i32 %gs.2, 7
  %idxprom2071 = sext i32 %add2070 to i64
  %arrayidx2072 = getelementptr inbounds i16, i16* %i, i64 %idxprom2071
  %i396 = load i16, i16* %arrayidx2072, align 2
  %idxprom2073 = zext i16 %i396 to i64
  %arrayidx2074 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2073
  %i397 = load i8, i8* %arrayidx2074, align 1
  %conv2075 = zext i8 %i397 to i32
  %idxprom2076 = zext i16 %i396 to i64
  %arrayidx2077 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2076
  %i398 = load i32, i32* %arrayidx2077, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2075, i32 %i398)
  %add2078 = add nsw i32 %gs.2, 8
  %idxprom2079 = sext i32 %add2078 to i64
  %arrayidx2080 = getelementptr inbounds i16, i16* %i, i64 %idxprom2079
  %i399 = load i16, i16* %arrayidx2080, align 2
  %idxprom2081 = zext i16 %i399 to i64
  %arrayidx2082 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2081
  %i400 = load i8, i8* %arrayidx2082, align 1
  %conv2083 = zext i8 %i400 to i32
  %idxprom2084 = zext i16 %i399 to i64
  %arrayidx2085 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2084
  %i401 = load i32, i32* %arrayidx2085, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2083, i32 %i401)
  %add2086 = add nsw i32 %gs.2, 9
  %idxprom2087 = sext i32 %add2086 to i64
  %arrayidx2088 = getelementptr inbounds i16, i16* %i, i64 %idxprom2087
  %i402 = load i16, i16* %arrayidx2088, align 2
  %idxprom2089 = zext i16 %i402 to i64
  %arrayidx2090 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2089
  %i403 = load i8, i8* %arrayidx2090, align 1
  %conv2091 = zext i8 %i403 to i32
  %idxprom2092 = zext i16 %i402 to i64
  %arrayidx2093 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2092
  %i404 = load i32, i32* %arrayidx2093, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2091, i32 %i404)
  %add2094 = add nsw i32 %gs.2, 10
  %idxprom2095 = sext i32 %add2094 to i64
  %arrayidx2096 = getelementptr inbounds i16, i16* %i, i64 %idxprom2095
  %i405 = load i16, i16* %arrayidx2096, align 2
  %idxprom2097 = zext i16 %i405 to i64
  %arrayidx2098 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2097
  %i406 = load i8, i8* %arrayidx2098, align 1
  %conv2099 = zext i8 %i406 to i32
  %idxprom2100 = zext i16 %i405 to i64
  %arrayidx2101 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2100
  %i407 = load i32, i32* %arrayidx2101, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2099, i32 %i407)
  %add2102 = add nsw i32 %gs.2, 11
  %idxprom2103 = sext i32 %add2102 to i64
  %arrayidx2104 = getelementptr inbounds i16, i16* %i, i64 %idxprom2103
  %i408 = load i16, i16* %arrayidx2104, align 2
  %idxprom2105 = zext i16 %i408 to i64
  %arrayidx2106 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2105
  %i409 = load i8, i8* %arrayidx2106, align 1
  %conv2107 = zext i8 %i409 to i32
  %idxprom2108 = zext i16 %i408 to i64
  %arrayidx2109 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2108
  %i410 = load i32, i32* %arrayidx2109, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2107, i32 %i410)
  %add2110 = add nsw i32 %gs.2, 12
  %idxprom2111 = sext i32 %add2110 to i64
  %arrayidx2112 = getelementptr inbounds i16, i16* %i, i64 %idxprom2111
  %i411 = load i16, i16* %arrayidx2112, align 2
  %idxprom2113 = zext i16 %i411 to i64
  %arrayidx2114 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2113
  %i412 = load i8, i8* %arrayidx2114, align 1
  %conv2115 = zext i8 %i412 to i32
  %idxprom2116 = zext i16 %i411 to i64
  %arrayidx2117 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2116
  %i413 = load i32, i32* %arrayidx2117, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2115, i32 %i413)
  %add2118 = add nsw i32 %gs.2, 13
  %idxprom2119 = sext i32 %add2118 to i64
  %arrayidx2120 = getelementptr inbounds i16, i16* %i, i64 %idxprom2119
  %i414 = load i16, i16* %arrayidx2120, align 2
  %idxprom2121 = zext i16 %i414 to i64
  %arrayidx2122 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2121
  %i415 = load i8, i8* %arrayidx2122, align 1
  %conv2123 = zext i8 %i415 to i32
  %idxprom2124 = zext i16 %i414 to i64
  %arrayidx2125 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2124
  %i416 = load i32, i32* %arrayidx2125, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2123, i32 %i416)
  %add2126 = add nsw i32 %gs.2, 14
  %idxprom2127 = sext i32 %add2126 to i64
  %arrayidx2128 = getelementptr inbounds i16, i16* %i, i64 %idxprom2127
  %i417 = load i16, i16* %arrayidx2128, align 2
  %idxprom2129 = zext i16 %i417 to i64
  %arrayidx2130 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2129
  %i418 = load i8, i8* %arrayidx2130, align 1
  %conv2131 = zext i8 %i418 to i32
  %idxprom2132 = zext i16 %i417 to i64
  %arrayidx2133 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2132
  %i419 = load i32, i32* %arrayidx2133, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2131, i32 %i419)
  %add2134 = add nsw i32 %gs.2, 15
  %idxprom2135 = sext i32 %add2134 to i64
  %arrayidx2136 = getelementptr inbounds i16, i16* %i, i64 %idxprom2135
  %i420 = load i16, i16* %arrayidx2136, align 2
  %idxprom2137 = zext i16 %i420 to i64
  %arrayidx2138 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2137
  %i421 = load i8, i8* %arrayidx2138, align 1
  %conv2139 = zext i8 %i421 to i32
  %idxprom2140 = zext i16 %i420 to i64
  %arrayidx2141 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2140
  %i422 = load i32, i32* %arrayidx2141, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2139, i32 %i422)
  %add2142 = add nsw i32 %gs.2, 16
  %idxprom2143 = sext i32 %add2142 to i64
  %arrayidx2144 = getelementptr inbounds i16, i16* %i, i64 %idxprom2143
  %i423 = load i16, i16* %arrayidx2144, align 2
  %idxprom2145 = zext i16 %i423 to i64
  %arrayidx2146 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2145
  %i424 = load i8, i8* %arrayidx2146, align 1
  %conv2147 = zext i8 %i424 to i32
  %idxprom2148 = zext i16 %i423 to i64
  %arrayidx2149 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2148
  %i425 = load i32, i32* %arrayidx2149, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2147, i32 %i425)
  %add2150 = add nsw i32 %gs.2, 17
  %idxprom2151 = sext i32 %add2150 to i64
  %arrayidx2152 = getelementptr inbounds i16, i16* %i, i64 %idxprom2151
  %i426 = load i16, i16* %arrayidx2152, align 2
  %idxprom2153 = zext i16 %i426 to i64
  %arrayidx2154 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2153
  %i427 = load i8, i8* %arrayidx2154, align 1
  %conv2155 = zext i8 %i427 to i32
  %idxprom2156 = zext i16 %i426 to i64
  %arrayidx2157 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2156
  %i428 = load i32, i32* %arrayidx2157, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2155, i32 %i428)
  %add2158 = add nsw i32 %gs.2, 18
  %idxprom2159 = sext i32 %add2158 to i64
  %arrayidx2160 = getelementptr inbounds i16, i16* %i, i64 %idxprom2159
  %i429 = load i16, i16* %arrayidx2160, align 2
  %idxprom2161 = zext i16 %i429 to i64
  %arrayidx2162 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2161
  %i430 = load i8, i8* %arrayidx2162, align 1
  %conv2163 = zext i8 %i430 to i32
  %idxprom2164 = zext i16 %i429 to i64
  %arrayidx2165 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2164
  %i431 = load i32, i32* %arrayidx2165, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2163, i32 %i431)
  %add2166 = add nsw i32 %gs.2, 19
  %idxprom2167 = sext i32 %add2166 to i64
  %arrayidx2168 = getelementptr inbounds i16, i16* %i, i64 %idxprom2167
  %i432 = load i16, i16* %arrayidx2168, align 2
  %idxprom2169 = zext i16 %i432 to i64
  %arrayidx2170 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2169
  %i433 = load i8, i8* %arrayidx2170, align 1
  %conv2171 = zext i8 %i433 to i32
  %idxprom2172 = zext i16 %i432 to i64
  %arrayidx2173 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2172
  %i434 = load i32, i32* %arrayidx2173, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2171, i32 %i434)
  %add2174 = add nsw i32 %gs.2, 20
  %idxprom2175 = sext i32 %add2174 to i64
  %arrayidx2176 = getelementptr inbounds i16, i16* %i, i64 %idxprom2175
  %i435 = load i16, i16* %arrayidx2176, align 2
  %idxprom2177 = zext i16 %i435 to i64
  %arrayidx2178 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2177
  %i436 = load i8, i8* %arrayidx2178, align 1
  %conv2179 = zext i8 %i436 to i32
  %idxprom2180 = zext i16 %i435 to i64
  %arrayidx2181 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2180
  %i437 = load i32, i32* %arrayidx2181, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2179, i32 %i437)
  %add2182 = add nsw i32 %gs.2, 21
  %idxprom2183 = sext i32 %add2182 to i64
  %arrayidx2184 = getelementptr inbounds i16, i16* %i, i64 %idxprom2183
  %i438 = load i16, i16* %arrayidx2184, align 2
  %idxprom2185 = zext i16 %i438 to i64
  %arrayidx2186 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2185
  %i439 = load i8, i8* %arrayidx2186, align 1
  %conv2187 = zext i8 %i439 to i32
  %idxprom2188 = zext i16 %i438 to i64
  %arrayidx2189 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2188
  %i440 = load i32, i32* %arrayidx2189, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2187, i32 %i440)
  %add2190 = add nsw i32 %gs.2, 22
  %idxprom2191 = sext i32 %add2190 to i64
  %arrayidx2192 = getelementptr inbounds i16, i16* %i, i64 %idxprom2191
  %i441 = load i16, i16* %arrayidx2192, align 2
  %idxprom2193 = zext i16 %i441 to i64
  %arrayidx2194 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2193
  %i442 = load i8, i8* %arrayidx2194, align 1
  %conv2195 = zext i8 %i442 to i32
  %idxprom2196 = zext i16 %i441 to i64
  %arrayidx2197 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2196
  %i443 = load i32, i32* %arrayidx2197, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2195, i32 %i443)
  %add2198 = add nsw i32 %gs.2, 23
  %idxprom2199 = sext i32 %add2198 to i64
  %arrayidx2200 = getelementptr inbounds i16, i16* %i, i64 %idxprom2199
  %i444 = load i16, i16* %arrayidx2200, align 2
  %idxprom2201 = zext i16 %i444 to i64
  %arrayidx2202 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2201
  %i445 = load i8, i8* %arrayidx2202, align 1
  %conv2203 = zext i8 %i445 to i32
  %idxprom2204 = zext i16 %i444 to i64
  %arrayidx2205 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2204
  %i446 = load i32, i32* %arrayidx2205, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2203, i32 %i446)
  %add2206 = add nsw i32 %gs.2, 24
  %idxprom2207 = sext i32 %add2206 to i64
  %arrayidx2208 = getelementptr inbounds i16, i16* %i, i64 %idxprom2207
  %i447 = load i16, i16* %arrayidx2208, align 2
  %idxprom2209 = zext i16 %i447 to i64
  %arrayidx2210 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2209
  %i448 = load i8, i8* %arrayidx2210, align 1
  %conv2211 = zext i8 %i448 to i32
  %idxprom2212 = zext i16 %i447 to i64
  %arrayidx2213 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2212
  %i449 = load i32, i32* %arrayidx2213, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2211, i32 %i449)
  %add2214 = add nsw i32 %gs.2, 25
  %idxprom2215 = sext i32 %add2214 to i64
  %arrayidx2216 = getelementptr inbounds i16, i16* %i, i64 %idxprom2215
  %i450 = load i16, i16* %arrayidx2216, align 2
  %idxprom2217 = zext i16 %i450 to i64
  %arrayidx2218 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2217
  %i451 = load i8, i8* %arrayidx2218, align 1
  %conv2219 = zext i8 %i451 to i32
  %idxprom2220 = zext i16 %i450 to i64
  %arrayidx2221 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2220
  %i452 = load i32, i32* %arrayidx2221, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2219, i32 %i452)
  %add2222 = add nsw i32 %gs.2, 26
  %idxprom2223 = sext i32 %add2222 to i64
  %arrayidx2224 = getelementptr inbounds i16, i16* %i, i64 %idxprom2223
  %i453 = load i16, i16* %arrayidx2224, align 2
  %idxprom2225 = zext i16 %i453 to i64
  %arrayidx2226 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2225
  %i454 = load i8, i8* %arrayidx2226, align 1
  %conv2227 = zext i8 %i454 to i32
  %idxprom2228 = zext i16 %i453 to i64
  %arrayidx2229 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2228
  %i455 = load i32, i32* %arrayidx2229, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2227, i32 %i455)
  %add2230 = add nsw i32 %gs.2, 27
  %idxprom2231 = sext i32 %add2230 to i64
  %arrayidx2232 = getelementptr inbounds i16, i16* %i, i64 %idxprom2231
  %i456 = load i16, i16* %arrayidx2232, align 2
  %idxprom2233 = zext i16 %i456 to i64
  %arrayidx2234 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2233
  %i457 = load i8, i8* %arrayidx2234, align 1
  %conv2235 = zext i8 %i457 to i32
  %idxprom2236 = zext i16 %i456 to i64
  %arrayidx2237 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2236
  %i458 = load i32, i32* %arrayidx2237, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2235, i32 %i458)
  %add2238 = add nsw i32 %gs.2, 28
  %idxprom2239 = sext i32 %add2238 to i64
  %arrayidx2240 = getelementptr inbounds i16, i16* %i, i64 %idxprom2239
  %i459 = load i16, i16* %arrayidx2240, align 2
  %idxprom2241 = zext i16 %i459 to i64
  %arrayidx2242 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2241
  %i460 = load i8, i8* %arrayidx2242, align 1
  %conv2243 = zext i8 %i460 to i32
  %idxprom2244 = zext i16 %i459 to i64
  %arrayidx2245 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2244
  %i461 = load i32, i32* %arrayidx2245, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2243, i32 %i461)
  %add2246 = add nsw i32 %gs.2, 29
  %idxprom2247 = sext i32 %add2246 to i64
  %arrayidx2248 = getelementptr inbounds i16, i16* %i, i64 %idxprom2247
  %i462 = load i16, i16* %arrayidx2248, align 2
  %idxprom2249 = zext i16 %i462 to i64
  %arrayidx2250 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2249
  %i463 = load i8, i8* %arrayidx2250, align 1
  %conv2251 = zext i8 %i463 to i32
  %idxprom2252 = zext i16 %i462 to i64
  %arrayidx2253 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2252
  %i464 = load i32, i32* %arrayidx2253, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2251, i32 %i464)
  %add2254 = add nsw i32 %gs.2, 30
  %idxprom2255 = sext i32 %add2254 to i64
  %arrayidx2256 = getelementptr inbounds i16, i16* %i, i64 %idxprom2255
  %i465 = load i16, i16* %arrayidx2256, align 2
  %idxprom2257 = zext i16 %i465 to i64
  %arrayidx2258 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2257
  %i466 = load i8, i8* %arrayidx2258, align 1
  %conv2259 = zext i8 %i466 to i32
  %idxprom2260 = zext i16 %i465 to i64
  %arrayidx2261 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2260
  %i467 = load i32, i32* %arrayidx2261, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2259, i32 %i467)
  %add2262 = add nsw i32 %gs.2, 31
  %idxprom2263 = sext i32 %add2262 to i64
  %arrayidx2264 = getelementptr inbounds i16, i16* %i, i64 %idxprom2263
  %i468 = load i16, i16* %arrayidx2264, align 2
  %idxprom2265 = zext i16 %i468 to i64
  %arrayidx2266 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2265
  %i469 = load i8, i8* %arrayidx2266, align 1
  %conv2267 = zext i8 %i469 to i32
  %idxprom2268 = zext i16 %i468 to i64
  %arrayidx2269 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2268
  %i470 = load i32, i32* %arrayidx2269, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2267, i32 %i470)
  %add2270 = add nsw i32 %gs.2, 32
  %idxprom2271 = sext i32 %add2270 to i64
  %arrayidx2272 = getelementptr inbounds i16, i16* %i, i64 %idxprom2271
  %i471 = load i16, i16* %arrayidx2272, align 2
  %idxprom2273 = zext i16 %i471 to i64
  %arrayidx2274 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2273
  %i472 = load i8, i8* %arrayidx2274, align 1
  %conv2275 = zext i8 %i472 to i32
  %idxprom2276 = zext i16 %i471 to i64
  %arrayidx2277 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2276
  %i473 = load i32, i32* %arrayidx2277, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2275, i32 %i473)
  %add2278 = add nsw i32 %gs.2, 33
  %idxprom2279 = sext i32 %add2278 to i64
  %arrayidx2280 = getelementptr inbounds i16, i16* %i, i64 %idxprom2279
  %i474 = load i16, i16* %arrayidx2280, align 2
  %idxprom2281 = zext i16 %i474 to i64
  %arrayidx2282 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2281
  %i475 = load i8, i8* %arrayidx2282, align 1
  %conv2283 = zext i8 %i475 to i32
  %idxprom2284 = zext i16 %i474 to i64
  %arrayidx2285 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2284
  %i476 = load i32, i32* %arrayidx2285, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2283, i32 %i476)
  %add2286 = add nsw i32 %gs.2, 34
  %idxprom2287 = sext i32 %add2286 to i64
  %arrayidx2288 = getelementptr inbounds i16, i16* %i, i64 %idxprom2287
  %i477 = load i16, i16* %arrayidx2288, align 2
  %idxprom2289 = zext i16 %i477 to i64
  %arrayidx2290 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2289
  %i478 = load i8, i8* %arrayidx2290, align 1
  %conv2291 = zext i8 %i478 to i32
  %idxprom2292 = zext i16 %i477 to i64
  %arrayidx2293 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2292
  %i479 = load i32, i32* %arrayidx2293, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2291, i32 %i479)
  %add2294 = add nsw i32 %gs.2, 35
  %idxprom2295 = sext i32 %add2294 to i64
  %arrayidx2296 = getelementptr inbounds i16, i16* %i, i64 %idxprom2295
  %i480 = load i16, i16* %arrayidx2296, align 2
  %idxprom2297 = zext i16 %i480 to i64
  %arrayidx2298 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2297
  %i481 = load i8, i8* %arrayidx2298, align 1
  %conv2299 = zext i8 %i481 to i32
  %idxprom2300 = zext i16 %i480 to i64
  %arrayidx2301 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2300
  %i482 = load i32, i32* %arrayidx2301, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2299, i32 %i482)
  %add2302 = add nsw i32 %gs.2, 36
  %idxprom2303 = sext i32 %add2302 to i64
  %arrayidx2304 = getelementptr inbounds i16, i16* %i, i64 %idxprom2303
  %i483 = load i16, i16* %arrayidx2304, align 2
  %idxprom2305 = zext i16 %i483 to i64
  %arrayidx2306 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2305
  %i484 = load i8, i8* %arrayidx2306, align 1
  %conv2307 = zext i8 %i484 to i32
  %idxprom2308 = zext i16 %i483 to i64
  %arrayidx2309 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2308
  %i485 = load i32, i32* %arrayidx2309, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2307, i32 %i485)
  %add2310 = add nsw i32 %gs.2, 37
  %idxprom2311 = sext i32 %add2310 to i64
  %arrayidx2312 = getelementptr inbounds i16, i16* %i, i64 %idxprom2311
  %i486 = load i16, i16* %arrayidx2312, align 2
  %idxprom2313 = zext i16 %i486 to i64
  %arrayidx2314 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2313
  %i487 = load i8, i8* %arrayidx2314, align 1
  %conv2315 = zext i8 %i487 to i32
  %idxprom2316 = zext i16 %i486 to i64
  %arrayidx2317 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2316
  %i488 = load i32, i32* %arrayidx2317, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2315, i32 %i488)
  %add2318 = add nsw i32 %gs.2, 38
  %idxprom2319 = sext i32 %add2318 to i64
  %arrayidx2320 = getelementptr inbounds i16, i16* %i, i64 %idxprom2319
  %i489 = load i16, i16* %arrayidx2320, align 2
  %idxprom2321 = zext i16 %i489 to i64
  %arrayidx2322 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2321
  %i490 = load i8, i8* %arrayidx2322, align 1
  %conv2323 = zext i8 %i490 to i32
  %idxprom2324 = zext i16 %i489 to i64
  %arrayidx2325 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2324
  %i491 = load i32, i32* %arrayidx2325, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2323, i32 %i491)
  %add2326 = add nsw i32 %gs.2, 39
  %idxprom2327 = sext i32 %add2326 to i64
  %arrayidx2328 = getelementptr inbounds i16, i16* %i, i64 %idxprom2327
  %i492 = load i16, i16* %arrayidx2328, align 2
  %idxprom2329 = zext i16 %i492 to i64
  %arrayidx2330 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2329
  %i493 = load i8, i8* %arrayidx2330, align 1
  %conv2331 = zext i8 %i493 to i32
  %idxprom2332 = zext i16 %i492 to i64
  %arrayidx2333 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2332
  %i494 = load i32, i32* %arrayidx2333, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2331, i32 %i494)
  %add2334 = add nsw i32 %gs.2, 40
  %idxprom2335 = sext i32 %add2334 to i64
  %arrayidx2336 = getelementptr inbounds i16, i16* %i, i64 %idxprom2335
  %i495 = load i16, i16* %arrayidx2336, align 2
  %idxprom2337 = zext i16 %i495 to i64
  %arrayidx2338 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2337
  %i496 = load i8, i8* %arrayidx2338, align 1
  %conv2339 = zext i8 %i496 to i32
  %idxprom2340 = zext i16 %i495 to i64
  %arrayidx2341 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2340
  %i497 = load i32, i32* %arrayidx2341, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2339, i32 %i497)
  %add2342 = add nsw i32 %gs.2, 41
  %idxprom2343 = sext i32 %add2342 to i64
  %arrayidx2344 = getelementptr inbounds i16, i16* %i, i64 %idxprom2343
  %i498 = load i16, i16* %arrayidx2344, align 2
  %idxprom2345 = zext i16 %i498 to i64
  %arrayidx2346 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2345
  %i499 = load i8, i8* %arrayidx2346, align 1
  %conv2347 = zext i8 %i499 to i32
  %idxprom2348 = zext i16 %i498 to i64
  %arrayidx2349 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2348
  %i500 = load i32, i32* %arrayidx2349, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2347, i32 %i500)
  %add2350 = add nsw i32 %gs.2, 42
  %idxprom2351 = sext i32 %add2350 to i64
  %arrayidx2352 = getelementptr inbounds i16, i16* %i, i64 %idxprom2351
  %i501 = load i16, i16* %arrayidx2352, align 2
  %idxprom2353 = zext i16 %i501 to i64
  %arrayidx2354 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2353
  %i502 = load i8, i8* %arrayidx2354, align 1
  %conv2355 = zext i8 %i502 to i32
  %idxprom2356 = zext i16 %i501 to i64
  %arrayidx2357 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2356
  %i503 = load i32, i32* %arrayidx2357, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2355, i32 %i503)
  %add2358 = add nsw i32 %gs.2, 43
  %idxprom2359 = sext i32 %add2358 to i64
  %arrayidx2360 = getelementptr inbounds i16, i16* %i, i64 %idxprom2359
  %i504 = load i16, i16* %arrayidx2360, align 2
  %idxprom2361 = zext i16 %i504 to i64
  %arrayidx2362 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2361
  %i505 = load i8, i8* %arrayidx2362, align 1
  %conv2363 = zext i8 %i505 to i32
  %idxprom2364 = zext i16 %i504 to i64
  %arrayidx2365 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2364
  %i506 = load i32, i32* %arrayidx2365, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2363, i32 %i506)
  %add2366 = add nsw i32 %gs.2, 44
  %idxprom2367 = sext i32 %add2366 to i64
  %arrayidx2368 = getelementptr inbounds i16, i16* %i, i64 %idxprom2367
  %i507 = load i16, i16* %arrayidx2368, align 2
  %idxprom2369 = zext i16 %i507 to i64
  %arrayidx2370 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2369
  %i508 = load i8, i8* %arrayidx2370, align 1
  %conv2371 = zext i8 %i508 to i32
  %idxprom2372 = zext i16 %i507 to i64
  %arrayidx2373 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2372
  %i509 = load i32, i32* %arrayidx2373, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2371, i32 %i509)
  %add2374 = add nsw i32 %gs.2, 45
  %idxprom2375 = sext i32 %add2374 to i64
  %arrayidx2376 = getelementptr inbounds i16, i16* %i, i64 %idxprom2375
  %i510 = load i16, i16* %arrayidx2376, align 2
  %idxprom2377 = zext i16 %i510 to i64
  %arrayidx2378 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2377
  %i511 = load i8, i8* %arrayidx2378, align 1
  %conv2379 = zext i8 %i511 to i32
  %idxprom2380 = zext i16 %i510 to i64
  %arrayidx2381 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2380
  %i512 = load i32, i32* %arrayidx2381, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2379, i32 %i512)
  %add2382 = add nsw i32 %gs.2, 46
  %idxprom2383 = sext i32 %add2382 to i64
  %arrayidx2384 = getelementptr inbounds i16, i16* %i, i64 %idxprom2383
  %i513 = load i16, i16* %arrayidx2384, align 2
  %idxprom2385 = zext i16 %i513 to i64
  %arrayidx2386 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2385
  %i514 = load i8, i8* %arrayidx2386, align 1
  %conv2387 = zext i8 %i514 to i32
  %idxprom2388 = zext i16 %i513 to i64
  %arrayidx2389 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2388
  %i515 = load i32, i32* %arrayidx2389, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2387, i32 %i515)
  %add2390 = add nsw i32 %gs.2, 47
  %idxprom2391 = sext i32 %add2390 to i64
  %arrayidx2392 = getelementptr inbounds i16, i16* %i, i64 %idxprom2391
  %i516 = load i16, i16* %arrayidx2392, align 2
  %idxprom2393 = zext i16 %i516 to i64
  %arrayidx2394 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2393
  %i517 = load i8, i8* %arrayidx2394, align 1
  %conv2395 = zext i8 %i517 to i32
  %idxprom2396 = zext i16 %i516 to i64
  %arrayidx2397 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2396
  %i518 = load i32, i32* %arrayidx2397, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2395, i32 %i518)
  %add2398 = add nsw i32 %gs.2, 48
  %idxprom2399 = sext i32 %add2398 to i64
  %arrayidx2400 = getelementptr inbounds i16, i16* %i, i64 %idxprom2399
  %i519 = load i16, i16* %arrayidx2400, align 2
  %idxprom2401 = zext i16 %i519 to i64
  %arrayidx2402 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2401
  %i520 = load i8, i8* %arrayidx2402, align 1
  %conv2403 = zext i8 %i520 to i32
  %idxprom2404 = zext i16 %i519 to i64
  %arrayidx2405 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2404
  %i521 = load i32, i32* %arrayidx2405, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2403, i32 %i521)
  %add2406 = add nsw i32 %gs.2, 49
  %idxprom2407 = sext i32 %add2406 to i64
  %arrayidx2408 = getelementptr inbounds i16, i16* %i, i64 %idxprom2407
  %i522 = load i16, i16* %arrayidx2408, align 2
  %idxprom2409 = zext i16 %i522 to i64
  %arrayidx2410 = getelementptr inbounds i8, i8* %arrayidx2006, i64 %idxprom2409
  %i523 = load i8, i8* %arrayidx2410, align 1
  %conv2411 = zext i8 %i523 to i32
  %idxprom2412 = zext i16 %i522 to i64
  %arrayidx2413 = getelementptr inbounds i32, i32* %arrayidx2013, i64 %idxprom2412
  %i524 = load i32, i32* %arrayidx2413, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2411, i32 %i524)
  br label %if.end2443

if.else2414:                                      ; preds = %land.lhs.true1994, %if.end1991
  br label %for.cond2415

for.cond2415:                                     ; preds = %for.inc2440, %if.else2414
  %i.10 = phi i32 [ %gs.2, %if.else2414 ], [ %inc2441, %for.inc2440 ]
  %cmp2416 = icmp sle i32 %i.10, %ge.3
  br i1 %cmp2416, label %for.body2418, label %for.end2442

for.body2418:                                     ; preds = %for.cond2415
  %len2419 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 35
  %selector2420 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 33
  %idxprom2421 = sext i32 %selCtr.0 to i64
  %arrayidx2422 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector2420, i64 0, i64 %idxprom2421
  %i525 = load i8, i8* %arrayidx2422, align 1
  %idxprom2423 = zext i8 %i525 to i64
  %arrayidx2424 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len2419, i64 0, i64 %idxprom2423
  %idxprom2425 = sext i32 %i.10 to i64
  %arrayidx2426 = getelementptr inbounds i16, i16* %i, i64 %idxprom2425
  %i526 = load i16, i16* %arrayidx2426, align 2
  %idxprom2427 = zext i16 %i526 to i64
  %arrayidx2428 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx2424, i64 0, i64 %idxprom2427
  %i527 = load i8, i8* %arrayidx2428, align 1
  %conv2429 = zext i8 %i527 to i32
  %code2430 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 36
  %selector2431 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 33
  %idxprom2432 = sext i32 %selCtr.0 to i64
  %arrayidx2433 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector2431, i64 0, i64 %idxprom2432
  %i528 = load i8, i8* %arrayidx2433, align 1
  %idxprom2434 = zext i8 %i528 to i64
  %arrayidx2435 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %code2430, i64 0, i64 %idxprom2434
  %idxprom2436 = sext i32 %i.10 to i64
  %arrayidx2437 = getelementptr inbounds i16, i16* %i, i64 %idxprom2436
  %i529 = load i16, i16* %arrayidx2437, align 2
  %idxprom2438 = zext i16 %i529 to i64
  %arrayidx2439 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx2435, i64 0, i64 %idxprom2438
  %i530 = load i32, i32* %arrayidx2439, align 4
  call void @bsW(%struct.EState* %s, i32 %conv2429, i32 %i530)
  br label %for.inc2440

for.inc2440:                                      ; preds = %for.body2418
  %inc2441 = add nsw i32 %i.10, 1
  br label %for.cond2415

for.end2442:                                      ; preds = %for.cond2415
  br label %if.end2443

if.end2443:                                       ; preds = %for.end2442, %if.then1999
  %add2444 = add nsw i32 %ge.3, 1
  %inc2445 = add nsw i32 %selCtr.0, 1
  br label %while.body1969

while.end2446:                                    ; preds = %if.then1973
  %cmp2447 = icmp eq i32 %selCtr.0, %nSelectors.0
  br i1 %cmp2447, label %if.end2450, label %if.then2449

if.then2449:                                      ; preds = %while.end2446
  call void @BZ2_bz__AssertH__fail(i32 3007)
  br label %if.end2450

if.end2450:                                       ; preds = %if.then2449, %while.end2446
  %verbosity2451 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 28
  %i531 = load i32, i32* %verbosity2451, align 8
  %cmp2452 = icmp sge i32 %i531, 3
  br i1 %cmp2452, label %if.then2454, label %if.end2458

if.then2454:                                      ; preds = %if.end2450
  %i532 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %numZ2455 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i533 = load i32, i32* %numZ2455, align 4
  %sub2456 = sub nsw i32 %i533, %i368
  %call2457 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i532, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.123, i64 0, i64 0), i32 %sub2456)
  br label %if.end2458

if.end2458:                                       ; preds = %if.then2454, %if.end2450
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @bsFinishWrite(%struct.EState* %s) #0 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %bsLive = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 25
  %i = load i32, i32* %bsLive, align 4
  %cmp = icmp sgt i32 %i, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %bsBuff = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 24
  %i1 = load i32, i32* %bsBuff, align 8
  %shr = lshr i32 %i1, 24
  %conv = trunc i32 %shr to i8
  %zbits = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 11
  %i2 = load i8*, i8** %zbits, align 8
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i3 = load i32, i32* %numZ, align 4
  %idxprom = sext i32 %i3 to i64
  %arrayidx = getelementptr inbounds i8, i8* %i2, i64 %idxprom
  store i8 %conv, i8* %arrayidx, align 1
  %numZ1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 19
  %i4 = load i32, i32* %numZ1, align 4
  %inc = add nsw i32 %i4, 1
  store i32 %inc, i32* %numZ1, align 4
  %bsBuff2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 24
  %i5 = load i32, i32* %bsBuff2, align 8
  %shl = shl i32 %i5, 8
  store i32 %shl, i32* %bsBuff2, align 8
  %bsLive3 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 25
  %i6 = load i32, i32* %bsLive3, align 4
  %sub = sub nsw i32 %i6, 8
  store i32 %sub, i32* %bsLive3, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @makeMaps_e(%struct.EState* %s) #0 {
entry:
  %nInUse = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 21
  store i32 0, i32* %nInUse, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc5, %for.inc ]
  %cmp = icmp slt i32 %i.0, 256
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %inUse = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 22
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom
  %i = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %i, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %nInUse1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 21
  %i1 = load i32, i32* %nInUse1, align 4
  %conv = trunc i32 %i1 to i8
  %unseqToSeq = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 23
  %idxprom2 = sext i32 %i.0 to i64
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %unseqToSeq, i64 0, i64 %idxprom2
  store i8 %conv, i8* %arrayidx3, align 1
  %nInUse4 = getelementptr inbounds %struct.EState, %struct.EState* %s, i32 0, i32 21
  %i2 = load i32, i32* %nInUse4, align 4
  %inc = add nsw i32 %i2, 1
  store i32 %inc, i32* %nInUse4, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %inc5 = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_decompress(%struct.DState* %s) #0 {
entry:
  %pos = alloca [6 x i8], align 1
  %strm1 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8
  %state = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  %i1 = load i32, i32* %state, align 8
  %cmp = icmp eq i32 %i1, 10
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %save_i = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 40
  store i32 0, i32* %save_i, align 4
  %save_j = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 41
  store i32 0, i32* %save_j, align 8
  %save_t = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 42
  store i32 0, i32* %save_t, align 4
  %save_alphaSize = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 43
  store i32 0, i32* %save_alphaSize, align 8
  %save_nGroups = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 44
  store i32 0, i32* %save_nGroups, align 4
  %save_nSelectors = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 45
  store i32 0, i32* %save_nSelectors, align 8
  %save_EOB = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 46
  store i32 0, i32* %save_EOB, align 4
  %save_groupNo = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 47
  store i32 0, i32* %save_groupNo, align 8
  %save_groupPos = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 48
  store i32 0, i32* %save_groupPos, align 4
  %save_nextSym = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 49
  store i32 0, i32* %save_nextSym, align 8
  %save_nblockMAX = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 50
  store i32 0, i32* %save_nblockMAX, align 4
  %save_nblock = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  store i32 0, i32* %save_nblock, align 8
  %save_es = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 52
  store i32 0, i32* %save_es, align 4
  %save_N = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 53
  store i32 0, i32* %save_N, align 8
  %save_curr = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 54
  store i32 0, i32* %save_curr, align 4
  %save_zt = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 55
  store i32 0, i32* %save_zt, align 8
  %save_zn = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 56
  store i32 0, i32* %save_zn, align 4
  %save_zvec = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 57
  store i32 0, i32* %save_zvec, align 8
  %save_zj = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 58
  store i32 0, i32* %save_zj, align 4
  %save_gSel = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 59
  store i32 0, i32* %save_gSel, align 8
  %save_gMinlen = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 60
  store i32 0, i32* %save_gMinlen, align 4
  %save_gLimit = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 61
  store i32* null, i32** %save_gLimit, align 8
  %save_gBase = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 62
  store i32* null, i32** %save_gBase, align 8
  %save_gPerm = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 63
  store i32* null, i32** %save_gPerm, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %save_i2 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 40
  %i2 = load i32, i32* %save_i2, align 4
  %save_j3 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 41
  %i3 = load i32, i32* %save_j3, align 8
  %save_t4 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 42
  %i4 = load i32, i32* %save_t4, align 4
  %save_alphaSize5 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 43
  %i5 = load i32, i32* %save_alphaSize5, align 8
  %save_nGroups6 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 44
  %i6 = load i32, i32* %save_nGroups6, align 4
  %save_nSelectors7 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 45
  %i7 = load i32, i32* %save_nSelectors7, align 8
  %save_EOB8 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 46
  %i8 = load i32, i32* %save_EOB8, align 4
  %save_groupNo9 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 47
  %i9 = load i32, i32* %save_groupNo9, align 8
  %save_groupPos10 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 48
  %i10 = load i32, i32* %save_groupPos10, align 4
  %save_nextSym11 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 49
  %i11 = load i32, i32* %save_nextSym11, align 8
  %save_nblockMAX12 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 50
  %i12 = load i32, i32* %save_nblockMAX12, align 4
  %save_nblock13 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  %i13 = load i32, i32* %save_nblock13, align 8
  %save_es14 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 52
  %i14 = load i32, i32* %save_es14, align 4
  %save_N15 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 53
  %i15 = load i32, i32* %save_N15, align 8
  %save_curr16 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 54
  %i16 = load i32, i32* %save_curr16, align 4
  %save_zt17 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 55
  %i17 = load i32, i32* %save_zt17, align 8
  %save_zn18 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 56
  %i18 = load i32, i32* %save_zn18, align 4
  %save_zvec19 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 57
  %i19 = load i32, i32* %save_zvec19, align 8
  %save_zj20 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 58
  %i20 = load i32, i32* %save_zj20, align 4
  %save_gSel21 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 59
  %i21 = load i32, i32* %save_gSel21, align 8
  %save_gMinlen22 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 60
  %i22 = load i32, i32* %save_gMinlen22, align 4
  %save_gLimit23 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 61
  %i23 = load i32*, i32** %save_gLimit23, align 8
  %save_gBase24 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 62
  %i24 = load i32*, i32** %save_gBase24, align 8
  %save_gPerm25 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 63
  %i25 = load i32*, i32** %save_gPerm25, align 8
  %state26 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  %i26 = load i32, i32* %state26, align 8
  switch i32 %i26, label %sw.default [
    i32 10, label %sw.bb
    i32 11, label %sw.bb62
    i32 12, label %sw.bb118
    i32 13, label %sw.bb174
    i32 14, label %sw.bb272
    i32 15, label %sw.bb333
    i32 16, label %sw.bb389
    i32 17, label %sw.bb445
    i32 18, label %sw.bb501
    i32 19, label %sw.bb557
    i32 20, label %sw.bb620
    i32 21, label %sw.bb676
    i32 22, label %sw.bb732
    i32 23, label %sw.bb788
    i32 24, label %sw.bb844
    i32 25, label %sw.bb895
    i32 26, label %sw.bb951
    i32 27, label %sw.bb1007
    i32 28, label %sw.bb1078
    i32 29, label %sw.bb1161
    i32 30, label %sw.bb1235
    i32 31, label %sw.bb1292
    i32 32, label %sw.bb1351
    i32 33, label %sw.bb1462
    i32 34, label %sw.bb1526
    i32 35, label %sw.bb1583
    i32 36, label %sw.bb1781
    i32 37, label %sw.bb1847
    i32 38, label %sw.bb1974
    i32 39, label %sw.bb2040
    i32 40, label %sw.bb2390
    i32 41, label %sw.bb2456
    i32 42, label %sw.bb2920
    i32 43, label %sw.bb2977
    i32 44, label %sw.bb3034
    i32 45, label %sw.bb3091
    i32 46, label %sw.bb3148
    i32 47, label %sw.bb3205
    i32 48, label %sw.bb3262
    i32 49, label %sw.bb3319
    i32 50, label %sw.bb3376
  ]

sw.bb:                                            ; preds = %if.end
  %state27 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 10, i32* %state27, align 8
  br label %while.body

while.body:                                       ; preds = %if.end56, %sw.bb
  %bsLive = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i27 = load i32, i32* %bsLive, align 4
  %cmp28 = icmp sge i32 %i27, 8
  br i1 %cmp28, label %if.then29, label %if.end33

if.then29:                                        ; preds = %while.body
  %bsBuff = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i28 = load i32, i32* %bsBuff, align 8
  %bsLive30 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i29 = load i32, i32* %bsLive30, align 4
  %sub = sub nsw i32 %i29, 8
  %shr = lshr i32 %i28, %sub
  %and = and i32 %shr, 255
  %bsLive31 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i30 = load i32, i32* %bsLive31, align 4
  %sub32 = sub nsw i32 %i30, 8
  store i32 %sub32, i32* %bsLive31, align 4
  %conv = trunc i32 %and to i8
  br label %while.end

if.end33:                                         ; preds = %while.body
  %strm34 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i31 = load %struct.bz_stream*, %struct.bz_stream** %strm34, align 8
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i31, i32 0, i32 1
  %i32 = load i32, i32* %avail_in, align 8
  %cmp35 = icmp eq i32 %i32, 0
  br i1 %cmp35, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.end33
  br label %save_state_and_return

if.end38:                                         ; preds = %if.end33
  %bsBuff39 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i33 = load i32, i32* %bsBuff39, align 8
  %shl = shl i32 %i33, 8
  %strm40 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i34 = load %struct.bz_stream*, %struct.bz_stream** %strm40, align 8
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i34, i32 0, i32 0
  %i35 = load i8*, i8** %next_in, align 8
  %i36 = load i8, i8* %i35, align 1
  %conv41 = zext i8 %i36 to i32
  %or = or i32 %shl, %conv41
  %bsBuff42 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or, i32* %bsBuff42, align 8
  %bsLive43 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i37 = load i32, i32* %bsLive43, align 4
  %add = add nsw i32 %i37, 8
  store i32 %add, i32* %bsLive43, align 4
  %strm44 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i38 = load %struct.bz_stream*, %struct.bz_stream** %strm44, align 8
  %next_in45 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i38, i32 0, i32 0
  %i39 = load i8*, i8** %next_in45, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %i39, i32 1
  store i8* %incdec.ptr, i8** %next_in45, align 8
  %strm46 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i40 = load %struct.bz_stream*, %struct.bz_stream** %strm46, align 8
  %avail_in47 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i40, i32 0, i32 1
  %i41 = load i32, i32* %avail_in47, align 8
  %dec = add i32 %i41, -1
  store i32 %dec, i32* %avail_in47, align 8
  %strm48 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i42 = load %struct.bz_stream*, %struct.bz_stream** %strm48, align 8
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i42, i32 0, i32 2
  %i43 = load i32, i32* %total_in_lo32, align 4
  %inc = add i32 %i43, 1
  store i32 %inc, i32* %total_in_lo32, align 4
  %strm49 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i44 = load %struct.bz_stream*, %struct.bz_stream** %strm49, align 8
  %total_in_lo3250 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i44, i32 0, i32 2
  %i45 = load i32, i32* %total_in_lo3250, align 4
  %cmp51 = icmp eq i32 %i45, 0
  br i1 %cmp51, label %if.then53, label %if.end56

if.then53:                                        ; preds = %if.end38
  %strm54 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i46 = load %struct.bz_stream*, %struct.bz_stream** %strm54, align 8
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i46, i32 0, i32 3
  %i47 = load i32, i32* %total_in_hi32, align 8
  %inc55 = add i32 %i47, 1
  store i32 %inc55, i32* %total_in_hi32, align 8
  br label %if.end56

if.end56:                                         ; preds = %if.then53, %if.end38
  br label %while.body

while.end:                                        ; preds = %if.then29
  %conv57 = zext i8 %conv to i32
  %cmp58 = icmp ne i32 %conv57, 66
  br i1 %cmp58, label %if.then60, label %if.end61

if.then60:                                        ; preds = %while.end
  br label %save_state_and_return

if.end61:                                         ; preds = %while.end
  br label %sw.bb62

sw.bb62:                                          ; preds = %if.end61, %if.end
  %state63 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 11, i32* %state63, align 8
  br label %while.body64

while.body64:                                     ; preds = %if.end111, %sw.bb62
  %bsLive65 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i48 = load i32, i32* %bsLive65, align 4
  %cmp66 = icmp sge i32 %i48, 8
  br i1 %cmp66, label %if.then68, label %if.end78

if.then68:                                        ; preds = %while.body64
  %bsBuff70 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i49 = load i32, i32* %bsBuff70, align 8
  %bsLive71 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i50 = load i32, i32* %bsLive71, align 4
  %sub72 = sub nsw i32 %i50, 8
  %shr73 = lshr i32 %i49, %sub72
  %and74 = and i32 %shr73, 255
  %bsLive75 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i51 = load i32, i32* %bsLive75, align 4
  %sub76 = sub nsw i32 %i51, 8
  store i32 %sub76, i32* %bsLive75, align 4
  %conv77 = trunc i32 %and74 to i8
  br label %while.end112

if.end78:                                         ; preds = %while.body64
  %strm79 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i52 = load %struct.bz_stream*, %struct.bz_stream** %strm79, align 8
  %avail_in80 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i52, i32 0, i32 1
  %i53 = load i32, i32* %avail_in80, align 8
  %cmp81 = icmp eq i32 %i53, 0
  br i1 %cmp81, label %if.then83, label %if.end84

if.then83:                                        ; preds = %if.end78
  br label %save_state_and_return

if.end84:                                         ; preds = %if.end78
  %bsBuff85 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i54 = load i32, i32* %bsBuff85, align 8
  %shl86 = shl i32 %i54, 8
  %strm87 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i55 = load %struct.bz_stream*, %struct.bz_stream** %strm87, align 8
  %next_in88 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i55, i32 0, i32 0
  %i56 = load i8*, i8** %next_in88, align 8
  %i57 = load i8, i8* %i56, align 1
  %conv89 = zext i8 %i57 to i32
  %or90 = or i32 %shl86, %conv89
  %bsBuff91 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or90, i32* %bsBuff91, align 8
  %bsLive92 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i58 = load i32, i32* %bsLive92, align 4
  %add93 = add nsw i32 %i58, 8
  store i32 %add93, i32* %bsLive92, align 4
  %strm94 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i59 = load %struct.bz_stream*, %struct.bz_stream** %strm94, align 8
  %next_in95 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i59, i32 0, i32 0
  %i60 = load i8*, i8** %next_in95, align 8
  %incdec.ptr96 = getelementptr inbounds i8, i8* %i60, i32 1
  store i8* %incdec.ptr96, i8** %next_in95, align 8
  %strm97 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i61 = load %struct.bz_stream*, %struct.bz_stream** %strm97, align 8
  %avail_in98 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i61, i32 0, i32 1
  %i62 = load i32, i32* %avail_in98, align 8
  %dec99 = add i32 %i62, -1
  store i32 %dec99, i32* %avail_in98, align 8
  %strm100 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i63 = load %struct.bz_stream*, %struct.bz_stream** %strm100, align 8
  %total_in_lo32101 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i63, i32 0, i32 2
  %i64 = load i32, i32* %total_in_lo32101, align 4
  %inc102 = add i32 %i64, 1
  store i32 %inc102, i32* %total_in_lo32101, align 4
  %strm103 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i65 = load %struct.bz_stream*, %struct.bz_stream** %strm103, align 8
  %total_in_lo32104 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i65, i32 0, i32 2
  %i66 = load i32, i32* %total_in_lo32104, align 4
  %cmp105 = icmp eq i32 %i66, 0
  br i1 %cmp105, label %if.then107, label %if.end111

if.then107:                                       ; preds = %if.end84
  %strm108 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i67 = load %struct.bz_stream*, %struct.bz_stream** %strm108, align 8
  %total_in_hi32109 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i67, i32 0, i32 3
  %i68 = load i32, i32* %total_in_hi32109, align 8
  %inc110 = add i32 %i68, 1
  store i32 %inc110, i32* %total_in_hi32109, align 8
  br label %if.end111

if.end111:                                        ; preds = %if.then107, %if.end84
  br label %while.body64

while.end112:                                     ; preds = %if.then68
  %conv113 = zext i8 %conv77 to i32
  %cmp114 = icmp ne i32 %conv113, 90
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %while.end112
  br label %save_state_and_return

if.end117:                                        ; preds = %while.end112
  br label %sw.bb118

sw.bb118:                                         ; preds = %if.end117, %if.end
  %state119 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 12, i32* %state119, align 8
  br label %while.body120

while.body120:                                    ; preds = %if.end167, %sw.bb118
  %bsLive121 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i69 = load i32, i32* %bsLive121, align 4
  %cmp122 = icmp sge i32 %i69, 8
  br i1 %cmp122, label %if.then124, label %if.end134

if.then124:                                       ; preds = %while.body120
  %bsBuff126 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i70 = load i32, i32* %bsBuff126, align 8
  %bsLive127 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i71 = load i32, i32* %bsLive127, align 4
  %sub128 = sub nsw i32 %i71, 8
  %shr129 = lshr i32 %i70, %sub128
  %and130 = and i32 %shr129, 255
  %bsLive131 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i72 = load i32, i32* %bsLive131, align 4
  %sub132 = sub nsw i32 %i72, 8
  store i32 %sub132, i32* %bsLive131, align 4
  %conv133 = trunc i32 %and130 to i8
  br label %while.end168

if.end134:                                        ; preds = %while.body120
  %strm135 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i73 = load %struct.bz_stream*, %struct.bz_stream** %strm135, align 8
  %avail_in136 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i73, i32 0, i32 1
  %i74 = load i32, i32* %avail_in136, align 8
  %cmp137 = icmp eq i32 %i74, 0
  br i1 %cmp137, label %if.then139, label %if.end140

if.then139:                                       ; preds = %if.end134
  br label %save_state_and_return

if.end140:                                        ; preds = %if.end134
  %bsBuff141 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i75 = load i32, i32* %bsBuff141, align 8
  %shl142 = shl i32 %i75, 8
  %strm143 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i76 = load %struct.bz_stream*, %struct.bz_stream** %strm143, align 8
  %next_in144 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i76, i32 0, i32 0
  %i77 = load i8*, i8** %next_in144, align 8
  %i78 = load i8, i8* %i77, align 1
  %conv145 = zext i8 %i78 to i32
  %or146 = or i32 %shl142, %conv145
  %bsBuff147 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or146, i32* %bsBuff147, align 8
  %bsLive148 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i79 = load i32, i32* %bsLive148, align 4
  %add149 = add nsw i32 %i79, 8
  store i32 %add149, i32* %bsLive148, align 4
  %strm150 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i80 = load %struct.bz_stream*, %struct.bz_stream** %strm150, align 8
  %next_in151 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i80, i32 0, i32 0
  %i81 = load i8*, i8** %next_in151, align 8
  %incdec.ptr152 = getelementptr inbounds i8, i8* %i81, i32 1
  store i8* %incdec.ptr152, i8** %next_in151, align 8
  %strm153 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i82 = load %struct.bz_stream*, %struct.bz_stream** %strm153, align 8
  %avail_in154 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i82, i32 0, i32 1
  %i83 = load i32, i32* %avail_in154, align 8
  %dec155 = add i32 %i83, -1
  store i32 %dec155, i32* %avail_in154, align 8
  %strm156 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i84 = load %struct.bz_stream*, %struct.bz_stream** %strm156, align 8
  %total_in_lo32157 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i84, i32 0, i32 2
  %i85 = load i32, i32* %total_in_lo32157, align 4
  %inc158 = add i32 %i85, 1
  store i32 %inc158, i32* %total_in_lo32157, align 4
  %strm159 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i86 = load %struct.bz_stream*, %struct.bz_stream** %strm159, align 8
  %total_in_lo32160 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i86, i32 0, i32 2
  %i87 = load i32, i32* %total_in_lo32160, align 4
  %cmp161 = icmp eq i32 %i87, 0
  br i1 %cmp161, label %if.then163, label %if.end167

if.then163:                                       ; preds = %if.end140
  %strm164 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i88 = load %struct.bz_stream*, %struct.bz_stream** %strm164, align 8
  %total_in_hi32165 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i88, i32 0, i32 3
  %i89 = load i32, i32* %total_in_hi32165, align 8
  %inc166 = add i32 %i89, 1
  store i32 %inc166, i32* %total_in_hi32165, align 8
  br label %if.end167

if.end167:                                        ; preds = %if.then163, %if.end140
  br label %while.body120

while.end168:                                     ; preds = %if.then124
  %conv169 = zext i8 %conv133 to i32
  %cmp170 = icmp ne i32 %conv169, 104
  br i1 %cmp170, label %if.then172, label %if.end173

if.then172:                                       ; preds = %while.end168
  br label %save_state_and_return

if.end173:                                        ; preds = %while.end168
  br label %sw.bb174

sw.bb174:                                         ; preds = %if.end173, %if.end
  %state175 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 13, i32* %state175, align 8
  br label %while.body176

while.body176:                                    ; preds = %if.end222, %sw.bb174
  %bsLive177 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i90 = load i32, i32* %bsLive177, align 4
  %cmp178 = icmp sge i32 %i90, 8
  br i1 %cmp178, label %if.then180, label %if.end189

if.then180:                                       ; preds = %while.body176
  %bsBuff182 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i91 = load i32, i32* %bsBuff182, align 8
  %bsLive183 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i92 = load i32, i32* %bsLive183, align 4
  %sub184 = sub nsw i32 %i92, 8
  %shr185 = lshr i32 %i91, %sub184
  %and186 = and i32 %shr185, 255
  %bsLive187 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i93 = load i32, i32* %bsLive187, align 4
  %sub188 = sub nsw i32 %i93, 8
  store i32 %sub188, i32* %bsLive187, align 4
  %blockSize100k = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 9
  store i32 %and186, i32* %blockSize100k, align 8
  br label %while.end223

if.end189:                                        ; preds = %while.body176
  %strm190 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i94 = load %struct.bz_stream*, %struct.bz_stream** %strm190, align 8
  %avail_in191 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i94, i32 0, i32 1
  %i95 = load i32, i32* %avail_in191, align 8
  %cmp192 = icmp eq i32 %i95, 0
  br i1 %cmp192, label %if.then194, label %if.end195

if.then194:                                       ; preds = %if.end189
  br label %save_state_and_return

if.end195:                                        ; preds = %if.end189
  %bsBuff196 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i96 = load i32, i32* %bsBuff196, align 8
  %shl197 = shl i32 %i96, 8
  %strm198 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i97 = load %struct.bz_stream*, %struct.bz_stream** %strm198, align 8
  %next_in199 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i97, i32 0, i32 0
  %i98 = load i8*, i8** %next_in199, align 8
  %i99 = load i8, i8* %i98, align 1
  %conv200 = zext i8 %i99 to i32
  %or201 = or i32 %shl197, %conv200
  %bsBuff202 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or201, i32* %bsBuff202, align 8
  %bsLive203 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i100 = load i32, i32* %bsLive203, align 4
  %add204 = add nsw i32 %i100, 8
  store i32 %add204, i32* %bsLive203, align 4
  %strm205 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i101 = load %struct.bz_stream*, %struct.bz_stream** %strm205, align 8
  %next_in206 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i101, i32 0, i32 0
  %i102 = load i8*, i8** %next_in206, align 8
  %incdec.ptr207 = getelementptr inbounds i8, i8* %i102, i32 1
  store i8* %incdec.ptr207, i8** %next_in206, align 8
  %strm208 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i103 = load %struct.bz_stream*, %struct.bz_stream** %strm208, align 8
  %avail_in209 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i103, i32 0, i32 1
  %i104 = load i32, i32* %avail_in209, align 8
  %dec210 = add i32 %i104, -1
  store i32 %dec210, i32* %avail_in209, align 8
  %strm211 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i105 = load %struct.bz_stream*, %struct.bz_stream** %strm211, align 8
  %total_in_lo32212 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i105, i32 0, i32 2
  %i106 = load i32, i32* %total_in_lo32212, align 4
  %inc213 = add i32 %i106, 1
  store i32 %inc213, i32* %total_in_lo32212, align 4
  %strm214 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i107 = load %struct.bz_stream*, %struct.bz_stream** %strm214, align 8
  %total_in_lo32215 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i107, i32 0, i32 2
  %i108 = load i32, i32* %total_in_lo32215, align 4
  %cmp216 = icmp eq i32 %i108, 0
  br i1 %cmp216, label %if.then218, label %if.end222

if.then218:                                       ; preds = %if.end195
  %strm219 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i109 = load %struct.bz_stream*, %struct.bz_stream** %strm219, align 8
  %total_in_hi32220 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i109, i32 0, i32 3
  %i110 = load i32, i32* %total_in_hi32220, align 8
  %inc221 = add i32 %i110, 1
  store i32 %inc221, i32* %total_in_hi32220, align 8
  br label %if.end222

if.end222:                                        ; preds = %if.then218, %if.end195
  br label %while.body176

while.end223:                                     ; preds = %if.then180
  %blockSize100k224 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 9
  %i111 = load i32, i32* %blockSize100k224, align 8
  %cmp225 = icmp slt i32 %i111, 49
  br i1 %cmp225, label %if.then230, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.end223
  %blockSize100k227 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 9
  %i112 = load i32, i32* %blockSize100k227, align 8
  %cmp228 = icmp sgt i32 %i112, 57
  br i1 %cmp228, label %if.then230, label %if.end231

if.then230:                                       ; preds = %lor.lhs.false, %while.end223
  br label %save_state_and_return

if.end231:                                        ; preds = %lor.lhs.false
  %blockSize100k232 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 9
  %i113 = load i32, i32* %blockSize100k232, align 8
  %sub233 = sub nsw i32 %i113, 48
  store i32 %sub233, i32* %blockSize100k232, align 8
  %smallDecompress = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 10
  %i114 = load i8, i8* %smallDecompress, align 4
  %tobool = icmp ne i8 %i114, 0
  br i1 %tobool, label %if.then234, label %if.else

if.then234:                                       ; preds = %if.end231
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i, i32 0, i32 9
  %i115 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i, i32 0, i32 11
  %i116 = load i8*, i8** %opaque, align 8
  %blockSize100k235 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 9
  %i117 = load i32, i32* %blockSize100k235, align 8
  %mul = mul nsw i32 %i117, 100000
  %conv236 = sext i32 %mul to i64
  %mul237 = mul i64 %conv236, 2
  %conv238 = trunc i64 %mul237 to i32
  %call = call i8* %i115(i8* %i116, i32 %conv238, i32 1)
  %i118 = bitcast i8* %call to i16*
  %ll16 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  store i16* %i118, i16** %ll16, align 8
  %bzalloc239 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i, i32 0, i32 9
  %i119 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc239, align 8
  %opaque240 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i, i32 0, i32 11
  %i120 = load i8*, i8** %opaque240, align 8
  %blockSize100k241 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 9
  %i121 = load i32, i32* %blockSize100k241, align 8
  %mul242 = mul nsw i32 %i121, 100000
  %add243 = add nsw i32 1, %mul242
  %shr244 = ashr i32 %add243, 1
  %conv245 = sext i32 %shr244 to i64
  %mul246 = mul i64 %conv245, 1
  %conv247 = trunc i64 %mul246 to i32
  %call248 = call i8* %i119(i8* %i120, i32 %conv247, i32 1)
  %ll4 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  store i8* %call248, i8** %ll4, align 8
  %ll16249 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i122 = load i16*, i16** %ll16249, align 8
  %cmp250 = icmp eq i16* %i122, null
  br i1 %cmp250, label %if.then256, label %lor.lhs.false252

lor.lhs.false252:                                 ; preds = %if.then234
  %ll4253 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i123 = load i8*, i8** %ll4253, align 8
  %cmp254 = icmp eq i8* %i123, null
  br i1 %cmp254, label %if.then256, label %if.end257

if.then256:                                       ; preds = %lor.lhs.false252, %if.then234
  br label %save_state_and_return

if.end257:                                        ; preds = %lor.lhs.false252
  br label %if.end271

if.else:                                          ; preds = %if.end231
  %bzalloc258 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i, i32 0, i32 9
  %i124 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc258, align 8
  %opaque259 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i, i32 0, i32 11
  %i125 = load i8*, i8** %opaque259, align 8
  %blockSize100k260 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 9
  %i126 = load i32, i32* %blockSize100k260, align 8
  %mul261 = mul nsw i32 %i126, 100000
  %conv262 = sext i32 %mul261 to i64
  %mul263 = mul i64 %conv262, 4
  %conv264 = trunc i64 %mul263 to i32
  %call265 = call i8* %i124(i8* %i125, i32 %conv264, i32 1)
  %i127 = bitcast i8* %call265 to i32*
  %tt = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  store i32* %i127, i32** %tt, align 8
  %tt266 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i128 = load i32*, i32** %tt266, align 8
  %cmp267 = icmp eq i32* %i128, null
  br i1 %cmp267, label %if.then269, label %if.end270

if.then269:                                       ; preds = %if.else
  br label %save_state_and_return

if.end270:                                        ; preds = %if.else
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.end257
  br label %sw.bb272

sw.bb272:                                         ; preds = %if.end271, %if.end
  %state273 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 14, i32* %state273, align 8
  br label %while.body274

while.body274:                                    ; preds = %if.end321, %sw.bb272
  %bsLive275 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i129 = load i32, i32* %bsLive275, align 4
  %cmp276 = icmp sge i32 %i129, 8
  br i1 %cmp276, label %if.then278, label %if.end288

if.then278:                                       ; preds = %while.body274
  %bsBuff280 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i130 = load i32, i32* %bsBuff280, align 8
  %bsLive281 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i131 = load i32, i32* %bsLive281, align 4
  %sub282 = sub nsw i32 %i131, 8
  %shr283 = lshr i32 %i130, %sub282
  %and284 = and i32 %shr283, 255
  %bsLive285 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i132 = load i32, i32* %bsLive285, align 4
  %sub286 = sub nsw i32 %i132, 8
  store i32 %sub286, i32* %bsLive285, align 4
  %conv287 = trunc i32 %and284 to i8
  br label %while.end322

if.end288:                                        ; preds = %while.body274
  %strm289 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i133 = load %struct.bz_stream*, %struct.bz_stream** %strm289, align 8
  %avail_in290 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i133, i32 0, i32 1
  %i134 = load i32, i32* %avail_in290, align 8
  %cmp291 = icmp eq i32 %i134, 0
  br i1 %cmp291, label %if.then293, label %if.end294

if.then293:                                       ; preds = %if.end288
  br label %save_state_and_return

if.end294:                                        ; preds = %if.end288
  %bsBuff295 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i135 = load i32, i32* %bsBuff295, align 8
  %shl296 = shl i32 %i135, 8
  %strm297 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i136 = load %struct.bz_stream*, %struct.bz_stream** %strm297, align 8
  %next_in298 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i136, i32 0, i32 0
  %i137 = load i8*, i8** %next_in298, align 8
  %i138 = load i8, i8* %i137, align 1
  %conv299 = zext i8 %i138 to i32
  %or300 = or i32 %shl296, %conv299
  %bsBuff301 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or300, i32* %bsBuff301, align 8
  %bsLive302 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i139 = load i32, i32* %bsLive302, align 4
  %add303 = add nsw i32 %i139, 8
  store i32 %add303, i32* %bsLive302, align 4
  %strm304 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i140 = load %struct.bz_stream*, %struct.bz_stream** %strm304, align 8
  %next_in305 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i140, i32 0, i32 0
  %i141 = load i8*, i8** %next_in305, align 8
  %incdec.ptr306 = getelementptr inbounds i8, i8* %i141, i32 1
  store i8* %incdec.ptr306, i8** %next_in305, align 8
  %strm307 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i142 = load %struct.bz_stream*, %struct.bz_stream** %strm307, align 8
  %avail_in308 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i142, i32 0, i32 1
  %i143 = load i32, i32* %avail_in308, align 8
  %dec309 = add i32 %i143, -1
  store i32 %dec309, i32* %avail_in308, align 8
  %strm310 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i144 = load %struct.bz_stream*, %struct.bz_stream** %strm310, align 8
  %total_in_lo32311 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i144, i32 0, i32 2
  %i145 = load i32, i32* %total_in_lo32311, align 4
  %inc312 = add i32 %i145, 1
  store i32 %inc312, i32* %total_in_lo32311, align 4
  %strm313 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i146 = load %struct.bz_stream*, %struct.bz_stream** %strm313, align 8
  %total_in_lo32314 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i146, i32 0, i32 2
  %i147 = load i32, i32* %total_in_lo32314, align 4
  %cmp315 = icmp eq i32 %i147, 0
  br i1 %cmp315, label %if.then317, label %if.end321

if.then317:                                       ; preds = %if.end294
  %strm318 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i148 = load %struct.bz_stream*, %struct.bz_stream** %strm318, align 8
  %total_in_hi32319 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i148, i32 0, i32 3
  %i149 = load i32, i32* %total_in_hi32319, align 8
  %inc320 = add i32 %i149, 1
  store i32 %inc320, i32* %total_in_hi32319, align 8
  br label %if.end321

if.end321:                                        ; preds = %if.then317, %if.end294
  br label %while.body274

while.end322:                                     ; preds = %if.then278
  %conv323 = zext i8 %conv287 to i32
  %cmp324 = icmp eq i32 %conv323, 23
  br i1 %cmp324, label %if.then326, label %if.end327

if.then326:                                       ; preds = %while.end322
  br label %endhdr_2

if.end327:                                        ; preds = %while.end322
  %conv328 = zext i8 %conv287 to i32
  %cmp329 = icmp ne i32 %conv328, 49
  br i1 %cmp329, label %if.then331, label %if.end332

if.then331:                                       ; preds = %if.end327
  br label %save_state_and_return

if.end332:                                        ; preds = %if.end327
  br label %sw.bb333

sw.bb333:                                         ; preds = %if.end332, %if.end
  %state334 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 15, i32* %state334, align 8
  br label %while.body335

while.body335:                                    ; preds = %if.end382, %sw.bb333
  %bsLive336 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i150 = load i32, i32* %bsLive336, align 4
  %cmp337 = icmp sge i32 %i150, 8
  br i1 %cmp337, label %if.then339, label %if.end349

if.then339:                                       ; preds = %while.body335
  %bsBuff341 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i151 = load i32, i32* %bsBuff341, align 8
  %bsLive342 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i152 = load i32, i32* %bsLive342, align 4
  %sub343 = sub nsw i32 %i152, 8
  %shr344 = lshr i32 %i151, %sub343
  %and345 = and i32 %shr344, 255
  %bsLive346 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i153 = load i32, i32* %bsLive346, align 4
  %sub347 = sub nsw i32 %i153, 8
  store i32 %sub347, i32* %bsLive346, align 4
  %conv348 = trunc i32 %and345 to i8
  br label %while.end383

if.end349:                                        ; preds = %while.body335
  %strm350 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i154 = load %struct.bz_stream*, %struct.bz_stream** %strm350, align 8
  %avail_in351 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i154, i32 0, i32 1
  %i155 = load i32, i32* %avail_in351, align 8
  %cmp352 = icmp eq i32 %i155, 0
  br i1 %cmp352, label %if.then354, label %if.end355

if.then354:                                       ; preds = %if.end349
  br label %save_state_and_return

if.end355:                                        ; preds = %if.end349
  %bsBuff356 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i156 = load i32, i32* %bsBuff356, align 8
  %shl357 = shl i32 %i156, 8
  %strm358 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i157 = load %struct.bz_stream*, %struct.bz_stream** %strm358, align 8
  %next_in359 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i157, i32 0, i32 0
  %i158 = load i8*, i8** %next_in359, align 8
  %i159 = load i8, i8* %i158, align 1
  %conv360 = zext i8 %i159 to i32
  %or361 = or i32 %shl357, %conv360
  %bsBuff362 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or361, i32* %bsBuff362, align 8
  %bsLive363 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i160 = load i32, i32* %bsLive363, align 4
  %add364 = add nsw i32 %i160, 8
  store i32 %add364, i32* %bsLive363, align 4
  %strm365 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i161 = load %struct.bz_stream*, %struct.bz_stream** %strm365, align 8
  %next_in366 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i161, i32 0, i32 0
  %i162 = load i8*, i8** %next_in366, align 8
  %incdec.ptr367 = getelementptr inbounds i8, i8* %i162, i32 1
  store i8* %incdec.ptr367, i8** %next_in366, align 8
  %strm368 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i163 = load %struct.bz_stream*, %struct.bz_stream** %strm368, align 8
  %avail_in369 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i163, i32 0, i32 1
  %i164 = load i32, i32* %avail_in369, align 8
  %dec370 = add i32 %i164, -1
  store i32 %dec370, i32* %avail_in369, align 8
  %strm371 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i165 = load %struct.bz_stream*, %struct.bz_stream** %strm371, align 8
  %total_in_lo32372 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i165, i32 0, i32 2
  %i166 = load i32, i32* %total_in_lo32372, align 4
  %inc373 = add i32 %i166, 1
  store i32 %inc373, i32* %total_in_lo32372, align 4
  %strm374 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i167 = load %struct.bz_stream*, %struct.bz_stream** %strm374, align 8
  %total_in_lo32375 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i167, i32 0, i32 2
  %i168 = load i32, i32* %total_in_lo32375, align 4
  %cmp376 = icmp eq i32 %i168, 0
  br i1 %cmp376, label %if.then378, label %if.end382

if.then378:                                       ; preds = %if.end355
  %strm379 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i169 = load %struct.bz_stream*, %struct.bz_stream** %strm379, align 8
  %total_in_hi32380 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i169, i32 0, i32 3
  %i170 = load i32, i32* %total_in_hi32380, align 8
  %inc381 = add i32 %i170, 1
  store i32 %inc381, i32* %total_in_hi32380, align 8
  br label %if.end382

if.end382:                                        ; preds = %if.then378, %if.end355
  br label %while.body335

while.end383:                                     ; preds = %if.then339
  %conv384 = zext i8 %conv348 to i32
  %cmp385 = icmp ne i32 %conv384, 65
  br i1 %cmp385, label %if.then387, label %if.end388

if.then387:                                       ; preds = %while.end383
  br label %save_state_and_return

if.end388:                                        ; preds = %while.end383
  br label %sw.bb389

sw.bb389:                                         ; preds = %if.end388, %if.end
  %state390 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 16, i32* %state390, align 8
  br label %while.body391

while.body391:                                    ; preds = %if.end438, %sw.bb389
  %bsLive392 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i171 = load i32, i32* %bsLive392, align 4
  %cmp393 = icmp sge i32 %i171, 8
  br i1 %cmp393, label %if.then395, label %if.end405

if.then395:                                       ; preds = %while.body391
  %bsBuff397 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i172 = load i32, i32* %bsBuff397, align 8
  %bsLive398 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i173 = load i32, i32* %bsLive398, align 4
  %sub399 = sub nsw i32 %i173, 8
  %shr400 = lshr i32 %i172, %sub399
  %and401 = and i32 %shr400, 255
  %bsLive402 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i174 = load i32, i32* %bsLive402, align 4
  %sub403 = sub nsw i32 %i174, 8
  store i32 %sub403, i32* %bsLive402, align 4
  %conv404 = trunc i32 %and401 to i8
  br label %while.end439

if.end405:                                        ; preds = %while.body391
  %strm406 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i175 = load %struct.bz_stream*, %struct.bz_stream** %strm406, align 8
  %avail_in407 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i175, i32 0, i32 1
  %i176 = load i32, i32* %avail_in407, align 8
  %cmp408 = icmp eq i32 %i176, 0
  br i1 %cmp408, label %if.then410, label %if.end411

if.then410:                                       ; preds = %if.end405
  br label %save_state_and_return

if.end411:                                        ; preds = %if.end405
  %bsBuff412 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i177 = load i32, i32* %bsBuff412, align 8
  %shl413 = shl i32 %i177, 8
  %strm414 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i178 = load %struct.bz_stream*, %struct.bz_stream** %strm414, align 8
  %next_in415 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i178, i32 0, i32 0
  %i179 = load i8*, i8** %next_in415, align 8
  %i180 = load i8, i8* %i179, align 1
  %conv416 = zext i8 %i180 to i32
  %or417 = or i32 %shl413, %conv416
  %bsBuff418 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or417, i32* %bsBuff418, align 8
  %bsLive419 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i181 = load i32, i32* %bsLive419, align 4
  %add420 = add nsw i32 %i181, 8
  store i32 %add420, i32* %bsLive419, align 4
  %strm421 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i182 = load %struct.bz_stream*, %struct.bz_stream** %strm421, align 8
  %next_in422 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i182, i32 0, i32 0
  %i183 = load i8*, i8** %next_in422, align 8
  %incdec.ptr423 = getelementptr inbounds i8, i8* %i183, i32 1
  store i8* %incdec.ptr423, i8** %next_in422, align 8
  %strm424 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i184 = load %struct.bz_stream*, %struct.bz_stream** %strm424, align 8
  %avail_in425 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i184, i32 0, i32 1
  %i185 = load i32, i32* %avail_in425, align 8
  %dec426 = add i32 %i185, -1
  store i32 %dec426, i32* %avail_in425, align 8
  %strm427 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i186 = load %struct.bz_stream*, %struct.bz_stream** %strm427, align 8
  %total_in_lo32428 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i186, i32 0, i32 2
  %i187 = load i32, i32* %total_in_lo32428, align 4
  %inc429 = add i32 %i187, 1
  store i32 %inc429, i32* %total_in_lo32428, align 4
  %strm430 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i188 = load %struct.bz_stream*, %struct.bz_stream** %strm430, align 8
  %total_in_lo32431 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i188, i32 0, i32 2
  %i189 = load i32, i32* %total_in_lo32431, align 4
  %cmp432 = icmp eq i32 %i189, 0
  br i1 %cmp432, label %if.then434, label %if.end438

if.then434:                                       ; preds = %if.end411
  %strm435 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i190 = load %struct.bz_stream*, %struct.bz_stream** %strm435, align 8
  %total_in_hi32436 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i190, i32 0, i32 3
  %i191 = load i32, i32* %total_in_hi32436, align 8
  %inc437 = add i32 %i191, 1
  store i32 %inc437, i32* %total_in_hi32436, align 8
  br label %if.end438

if.end438:                                        ; preds = %if.then434, %if.end411
  br label %while.body391

while.end439:                                     ; preds = %if.then395
  %conv440 = zext i8 %conv404 to i32
  %cmp441 = icmp ne i32 %conv440, 89
  br i1 %cmp441, label %if.then443, label %if.end444

if.then443:                                       ; preds = %while.end439
  br label %save_state_and_return

if.end444:                                        ; preds = %while.end439
  br label %sw.bb445

sw.bb445:                                         ; preds = %if.end444, %if.end
  %state446 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 17, i32* %state446, align 8
  br label %while.body447

while.body447:                                    ; preds = %if.end494, %sw.bb445
  %bsLive448 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i192 = load i32, i32* %bsLive448, align 4
  %cmp449 = icmp sge i32 %i192, 8
  br i1 %cmp449, label %if.then451, label %if.end461

if.then451:                                       ; preds = %while.body447
  %bsBuff453 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i193 = load i32, i32* %bsBuff453, align 8
  %bsLive454 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i194 = load i32, i32* %bsLive454, align 4
  %sub455 = sub nsw i32 %i194, 8
  %shr456 = lshr i32 %i193, %sub455
  %and457 = and i32 %shr456, 255
  %bsLive458 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i195 = load i32, i32* %bsLive458, align 4
  %sub459 = sub nsw i32 %i195, 8
  store i32 %sub459, i32* %bsLive458, align 4
  %conv460 = trunc i32 %and457 to i8
  br label %while.end495

if.end461:                                        ; preds = %while.body447
  %strm462 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i196 = load %struct.bz_stream*, %struct.bz_stream** %strm462, align 8
  %avail_in463 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i196, i32 0, i32 1
  %i197 = load i32, i32* %avail_in463, align 8
  %cmp464 = icmp eq i32 %i197, 0
  br i1 %cmp464, label %if.then466, label %if.end467

if.then466:                                       ; preds = %if.end461
  br label %save_state_and_return

if.end467:                                        ; preds = %if.end461
  %bsBuff468 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i198 = load i32, i32* %bsBuff468, align 8
  %shl469 = shl i32 %i198, 8
  %strm470 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i199 = load %struct.bz_stream*, %struct.bz_stream** %strm470, align 8
  %next_in471 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i199, i32 0, i32 0
  %i200 = load i8*, i8** %next_in471, align 8
  %i201 = load i8, i8* %i200, align 1
  %conv472 = zext i8 %i201 to i32
  %or473 = or i32 %shl469, %conv472
  %bsBuff474 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or473, i32* %bsBuff474, align 8
  %bsLive475 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i202 = load i32, i32* %bsLive475, align 4
  %add476 = add nsw i32 %i202, 8
  store i32 %add476, i32* %bsLive475, align 4
  %strm477 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i203 = load %struct.bz_stream*, %struct.bz_stream** %strm477, align 8
  %next_in478 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i203, i32 0, i32 0
  %i204 = load i8*, i8** %next_in478, align 8
  %incdec.ptr479 = getelementptr inbounds i8, i8* %i204, i32 1
  store i8* %incdec.ptr479, i8** %next_in478, align 8
  %strm480 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i205 = load %struct.bz_stream*, %struct.bz_stream** %strm480, align 8
  %avail_in481 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i205, i32 0, i32 1
  %i206 = load i32, i32* %avail_in481, align 8
  %dec482 = add i32 %i206, -1
  store i32 %dec482, i32* %avail_in481, align 8
  %strm483 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i207 = load %struct.bz_stream*, %struct.bz_stream** %strm483, align 8
  %total_in_lo32484 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i207, i32 0, i32 2
  %i208 = load i32, i32* %total_in_lo32484, align 4
  %inc485 = add i32 %i208, 1
  store i32 %inc485, i32* %total_in_lo32484, align 4
  %strm486 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i209 = load %struct.bz_stream*, %struct.bz_stream** %strm486, align 8
  %total_in_lo32487 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i209, i32 0, i32 2
  %i210 = load i32, i32* %total_in_lo32487, align 4
  %cmp488 = icmp eq i32 %i210, 0
  br i1 %cmp488, label %if.then490, label %if.end494

if.then490:                                       ; preds = %if.end467
  %strm491 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i211 = load %struct.bz_stream*, %struct.bz_stream** %strm491, align 8
  %total_in_hi32492 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i211, i32 0, i32 3
  %i212 = load i32, i32* %total_in_hi32492, align 8
  %inc493 = add i32 %i212, 1
  store i32 %inc493, i32* %total_in_hi32492, align 8
  br label %if.end494

if.end494:                                        ; preds = %if.then490, %if.end467
  br label %while.body447

while.end495:                                     ; preds = %if.then451
  %conv496 = zext i8 %conv460 to i32
  %cmp497 = icmp ne i32 %conv496, 38
  br i1 %cmp497, label %if.then499, label %if.end500

if.then499:                                       ; preds = %while.end495
  br label %save_state_and_return

if.end500:                                        ; preds = %while.end495
  br label %sw.bb501

sw.bb501:                                         ; preds = %if.end500, %if.end
  %state502 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 18, i32* %state502, align 8
  br label %while.body503

while.body503:                                    ; preds = %if.end550, %sw.bb501
  %bsLive504 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i213 = load i32, i32* %bsLive504, align 4
  %cmp505 = icmp sge i32 %i213, 8
  br i1 %cmp505, label %if.then507, label %if.end517

if.then507:                                       ; preds = %while.body503
  %bsBuff509 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i214 = load i32, i32* %bsBuff509, align 8
  %bsLive510 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i215 = load i32, i32* %bsLive510, align 4
  %sub511 = sub nsw i32 %i215, 8
  %shr512 = lshr i32 %i214, %sub511
  %and513 = and i32 %shr512, 255
  %bsLive514 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i216 = load i32, i32* %bsLive514, align 4
  %sub515 = sub nsw i32 %i216, 8
  store i32 %sub515, i32* %bsLive514, align 4
  %conv516 = trunc i32 %and513 to i8
  br label %while.end551

if.end517:                                        ; preds = %while.body503
  %strm518 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i217 = load %struct.bz_stream*, %struct.bz_stream** %strm518, align 8
  %avail_in519 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i217, i32 0, i32 1
  %i218 = load i32, i32* %avail_in519, align 8
  %cmp520 = icmp eq i32 %i218, 0
  br i1 %cmp520, label %if.then522, label %if.end523

if.then522:                                       ; preds = %if.end517
  br label %save_state_and_return

if.end523:                                        ; preds = %if.end517
  %bsBuff524 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i219 = load i32, i32* %bsBuff524, align 8
  %shl525 = shl i32 %i219, 8
  %strm526 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i220 = load %struct.bz_stream*, %struct.bz_stream** %strm526, align 8
  %next_in527 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i220, i32 0, i32 0
  %i221 = load i8*, i8** %next_in527, align 8
  %i222 = load i8, i8* %i221, align 1
  %conv528 = zext i8 %i222 to i32
  %or529 = or i32 %shl525, %conv528
  %bsBuff530 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or529, i32* %bsBuff530, align 8
  %bsLive531 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i223 = load i32, i32* %bsLive531, align 4
  %add532 = add nsw i32 %i223, 8
  store i32 %add532, i32* %bsLive531, align 4
  %strm533 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i224 = load %struct.bz_stream*, %struct.bz_stream** %strm533, align 8
  %next_in534 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i224, i32 0, i32 0
  %i225 = load i8*, i8** %next_in534, align 8
  %incdec.ptr535 = getelementptr inbounds i8, i8* %i225, i32 1
  store i8* %incdec.ptr535, i8** %next_in534, align 8
  %strm536 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i226 = load %struct.bz_stream*, %struct.bz_stream** %strm536, align 8
  %avail_in537 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i226, i32 0, i32 1
  %i227 = load i32, i32* %avail_in537, align 8
  %dec538 = add i32 %i227, -1
  store i32 %dec538, i32* %avail_in537, align 8
  %strm539 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i228 = load %struct.bz_stream*, %struct.bz_stream** %strm539, align 8
  %total_in_lo32540 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i228, i32 0, i32 2
  %i229 = load i32, i32* %total_in_lo32540, align 4
  %inc541 = add i32 %i229, 1
  store i32 %inc541, i32* %total_in_lo32540, align 4
  %strm542 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i230 = load %struct.bz_stream*, %struct.bz_stream** %strm542, align 8
  %total_in_lo32543 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i230, i32 0, i32 2
  %i231 = load i32, i32* %total_in_lo32543, align 4
  %cmp544 = icmp eq i32 %i231, 0
  br i1 %cmp544, label %if.then546, label %if.end550

if.then546:                                       ; preds = %if.end523
  %strm547 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i232 = load %struct.bz_stream*, %struct.bz_stream** %strm547, align 8
  %total_in_hi32548 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i232, i32 0, i32 3
  %i233 = load i32, i32* %total_in_hi32548, align 8
  %inc549 = add i32 %i233, 1
  store i32 %inc549, i32* %total_in_hi32548, align 8
  br label %if.end550

if.end550:                                        ; preds = %if.then546, %if.end523
  br label %while.body503

while.end551:                                     ; preds = %if.then507
  %conv552 = zext i8 %conv516 to i32
  %cmp553 = icmp ne i32 %conv552, 83
  br i1 %cmp553, label %if.then555, label %if.end556

if.then555:                                       ; preds = %while.end551
  br label %save_state_and_return

if.end556:                                        ; preds = %while.end551
  br label %sw.bb557

sw.bb557:                                         ; preds = %if.end556, %if.end
  %state558 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 19, i32* %state558, align 8
  br label %while.body559

while.body559:                                    ; preds = %if.end606, %sw.bb557
  %bsLive560 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i234 = load i32, i32* %bsLive560, align 4
  %cmp561 = icmp sge i32 %i234, 8
  br i1 %cmp561, label %if.then563, label %if.end573

if.then563:                                       ; preds = %while.body559
  %bsBuff565 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i235 = load i32, i32* %bsBuff565, align 8
  %bsLive566 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i236 = load i32, i32* %bsLive566, align 4
  %sub567 = sub nsw i32 %i236, 8
  %shr568 = lshr i32 %i235, %sub567
  %and569 = and i32 %shr568, 255
  %bsLive570 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i237 = load i32, i32* %bsLive570, align 4
  %sub571 = sub nsw i32 %i237, 8
  store i32 %sub571, i32* %bsLive570, align 4
  %conv572 = trunc i32 %and569 to i8
  br label %while.end607

if.end573:                                        ; preds = %while.body559
  %strm574 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i238 = load %struct.bz_stream*, %struct.bz_stream** %strm574, align 8
  %avail_in575 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i238, i32 0, i32 1
  %i239 = load i32, i32* %avail_in575, align 8
  %cmp576 = icmp eq i32 %i239, 0
  br i1 %cmp576, label %if.then578, label %if.end579

if.then578:                                       ; preds = %if.end573
  br label %save_state_and_return

if.end579:                                        ; preds = %if.end573
  %bsBuff580 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i240 = load i32, i32* %bsBuff580, align 8
  %shl581 = shl i32 %i240, 8
  %strm582 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i241 = load %struct.bz_stream*, %struct.bz_stream** %strm582, align 8
  %next_in583 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i241, i32 0, i32 0
  %i242 = load i8*, i8** %next_in583, align 8
  %i243 = load i8, i8* %i242, align 1
  %conv584 = zext i8 %i243 to i32
  %or585 = or i32 %shl581, %conv584
  %bsBuff586 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or585, i32* %bsBuff586, align 8
  %bsLive587 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i244 = load i32, i32* %bsLive587, align 4
  %add588 = add nsw i32 %i244, 8
  store i32 %add588, i32* %bsLive587, align 4
  %strm589 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i245 = load %struct.bz_stream*, %struct.bz_stream** %strm589, align 8
  %next_in590 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i245, i32 0, i32 0
  %i246 = load i8*, i8** %next_in590, align 8
  %incdec.ptr591 = getelementptr inbounds i8, i8* %i246, i32 1
  store i8* %incdec.ptr591, i8** %next_in590, align 8
  %strm592 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i247 = load %struct.bz_stream*, %struct.bz_stream** %strm592, align 8
  %avail_in593 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i247, i32 0, i32 1
  %i248 = load i32, i32* %avail_in593, align 8
  %dec594 = add i32 %i248, -1
  store i32 %dec594, i32* %avail_in593, align 8
  %strm595 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i249 = load %struct.bz_stream*, %struct.bz_stream** %strm595, align 8
  %total_in_lo32596 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i249, i32 0, i32 2
  %i250 = load i32, i32* %total_in_lo32596, align 4
  %inc597 = add i32 %i250, 1
  store i32 %inc597, i32* %total_in_lo32596, align 4
  %strm598 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i251 = load %struct.bz_stream*, %struct.bz_stream** %strm598, align 8
  %total_in_lo32599 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i251, i32 0, i32 2
  %i252 = load i32, i32* %total_in_lo32599, align 4
  %cmp600 = icmp eq i32 %i252, 0
  br i1 %cmp600, label %if.then602, label %if.end606

if.then602:                                       ; preds = %if.end579
  %strm603 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i253 = load %struct.bz_stream*, %struct.bz_stream** %strm603, align 8
  %total_in_hi32604 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i253, i32 0, i32 3
  %i254 = load i32, i32* %total_in_hi32604, align 8
  %inc605 = add i32 %i254, 1
  store i32 %inc605, i32* %total_in_hi32604, align 8
  br label %if.end606

if.end606:                                        ; preds = %if.then602, %if.end579
  br label %while.body559

while.end607:                                     ; preds = %if.then563
  %conv608 = zext i8 %conv572 to i32
  %cmp609 = icmp ne i32 %conv608, 89
  br i1 %cmp609, label %if.then611, label %if.end612

if.then611:                                       ; preds = %while.end607
  br label %save_state_and_return

if.end612:                                        ; preds = %while.end607
  %currBlockNo = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 11
  %i255 = load i32, i32* %currBlockNo, align 8
  %inc613 = add nsw i32 %i255, 1
  store i32 %inc613, i32* %currBlockNo, align 8
  %verbosity = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 12
  %i256 = load i32, i32* %verbosity, align 4
  %cmp614 = icmp sge i32 %i256, 2
  br i1 %cmp614, label %if.then616, label %if.end619

if.then616:                                       ; preds = %if.end612
  %i257 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %currBlockNo617 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 11
  %i258 = load i32, i32* %currBlockNo617, align 8
  %call618 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i257, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.128, i64 0, i64 0), i32 %i258)
  br label %if.end619

if.end619:                                        ; preds = %if.then616, %if.end612
  %storedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 23
  store i32 0, i32* %storedBlockCRC, align 8
  br label %sw.bb620

sw.bb620:                                         ; preds = %if.end619, %if.end
  %state621 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 20, i32* %state621, align 8
  br label %while.body622

while.body622:                                    ; preds = %if.end669, %sw.bb620
  %bsLive623 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i259 = load i32, i32* %bsLive623, align 4
  %cmp624 = icmp sge i32 %i259, 8
  br i1 %cmp624, label %if.then626, label %if.end636

if.then626:                                       ; preds = %while.body622
  %bsBuff628 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i260 = load i32, i32* %bsBuff628, align 8
  %bsLive629 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i261 = load i32, i32* %bsLive629, align 4
  %sub630 = sub nsw i32 %i261, 8
  %shr631 = lshr i32 %i260, %sub630
  %and632 = and i32 %shr631, 255
  %bsLive633 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i262 = load i32, i32* %bsLive633, align 4
  %sub634 = sub nsw i32 %i262, 8
  store i32 %sub634, i32* %bsLive633, align 4
  %conv635 = trunc i32 %and632 to i8
  br label %while.end670

if.end636:                                        ; preds = %while.body622
  %strm637 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i263 = load %struct.bz_stream*, %struct.bz_stream** %strm637, align 8
  %avail_in638 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i263, i32 0, i32 1
  %i264 = load i32, i32* %avail_in638, align 8
  %cmp639 = icmp eq i32 %i264, 0
  br i1 %cmp639, label %if.then641, label %if.end642

if.then641:                                       ; preds = %if.end636
  br label %save_state_and_return

if.end642:                                        ; preds = %if.end636
  %bsBuff643 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i265 = load i32, i32* %bsBuff643, align 8
  %shl644 = shl i32 %i265, 8
  %strm645 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i266 = load %struct.bz_stream*, %struct.bz_stream** %strm645, align 8
  %next_in646 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i266, i32 0, i32 0
  %i267 = load i8*, i8** %next_in646, align 8
  %i268 = load i8, i8* %i267, align 1
  %conv647 = zext i8 %i268 to i32
  %or648 = or i32 %shl644, %conv647
  %bsBuff649 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or648, i32* %bsBuff649, align 8
  %bsLive650 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i269 = load i32, i32* %bsLive650, align 4
  %add651 = add nsw i32 %i269, 8
  store i32 %add651, i32* %bsLive650, align 4
  %strm652 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i270 = load %struct.bz_stream*, %struct.bz_stream** %strm652, align 8
  %next_in653 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i270, i32 0, i32 0
  %i271 = load i8*, i8** %next_in653, align 8
  %incdec.ptr654 = getelementptr inbounds i8, i8* %i271, i32 1
  store i8* %incdec.ptr654, i8** %next_in653, align 8
  %strm655 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i272 = load %struct.bz_stream*, %struct.bz_stream** %strm655, align 8
  %avail_in656 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i272, i32 0, i32 1
  %i273 = load i32, i32* %avail_in656, align 8
  %dec657 = add i32 %i273, -1
  store i32 %dec657, i32* %avail_in656, align 8
  %strm658 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i274 = load %struct.bz_stream*, %struct.bz_stream** %strm658, align 8
  %total_in_lo32659 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i274, i32 0, i32 2
  %i275 = load i32, i32* %total_in_lo32659, align 4
  %inc660 = add i32 %i275, 1
  store i32 %inc660, i32* %total_in_lo32659, align 4
  %strm661 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i276 = load %struct.bz_stream*, %struct.bz_stream** %strm661, align 8
  %total_in_lo32662 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i276, i32 0, i32 2
  %i277 = load i32, i32* %total_in_lo32662, align 4
  %cmp663 = icmp eq i32 %i277, 0
  br i1 %cmp663, label %if.then665, label %if.end669

if.then665:                                       ; preds = %if.end642
  %strm666 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i278 = load %struct.bz_stream*, %struct.bz_stream** %strm666, align 8
  %total_in_hi32667 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i278, i32 0, i32 3
  %i279 = load i32, i32* %total_in_hi32667, align 8
  %inc668 = add i32 %i279, 1
  store i32 %inc668, i32* %total_in_hi32667, align 8
  br label %if.end669

if.end669:                                        ; preds = %if.then665, %if.end642
  br label %while.body622

while.end670:                                     ; preds = %if.then626
  %storedBlockCRC671 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 23
  %i280 = load i32, i32* %storedBlockCRC671, align 8
  %shl672 = shl i32 %i280, 8
  %conv673 = zext i8 %conv635 to i32
  %or674 = or i32 %shl672, %conv673
  %storedBlockCRC675 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 23
  store i32 %or674, i32* %storedBlockCRC675, align 8
  br label %sw.bb676

sw.bb676:                                         ; preds = %while.end670, %if.end
  %state677 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 21, i32* %state677, align 8
  br label %while.body678

while.body678:                                    ; preds = %if.end725, %sw.bb676
  %bsLive679 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i281 = load i32, i32* %bsLive679, align 4
  %cmp680 = icmp sge i32 %i281, 8
  br i1 %cmp680, label %if.then682, label %if.end692

if.then682:                                       ; preds = %while.body678
  %bsBuff684 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i282 = load i32, i32* %bsBuff684, align 8
  %bsLive685 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i283 = load i32, i32* %bsLive685, align 4
  %sub686 = sub nsw i32 %i283, 8
  %shr687 = lshr i32 %i282, %sub686
  %and688 = and i32 %shr687, 255
  %bsLive689 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i284 = load i32, i32* %bsLive689, align 4
  %sub690 = sub nsw i32 %i284, 8
  store i32 %sub690, i32* %bsLive689, align 4
  %conv691 = trunc i32 %and688 to i8
  br label %while.end726

if.end692:                                        ; preds = %while.body678
  %strm693 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i285 = load %struct.bz_stream*, %struct.bz_stream** %strm693, align 8
  %avail_in694 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i285, i32 0, i32 1
  %i286 = load i32, i32* %avail_in694, align 8
  %cmp695 = icmp eq i32 %i286, 0
  br i1 %cmp695, label %if.then697, label %if.end698

if.then697:                                       ; preds = %if.end692
  br label %save_state_and_return

if.end698:                                        ; preds = %if.end692
  %bsBuff699 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i287 = load i32, i32* %bsBuff699, align 8
  %shl700 = shl i32 %i287, 8
  %strm701 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i288 = load %struct.bz_stream*, %struct.bz_stream** %strm701, align 8
  %next_in702 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i288, i32 0, i32 0
  %i289 = load i8*, i8** %next_in702, align 8
  %i290 = load i8, i8* %i289, align 1
  %conv703 = zext i8 %i290 to i32
  %or704 = or i32 %shl700, %conv703
  %bsBuff705 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or704, i32* %bsBuff705, align 8
  %bsLive706 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i291 = load i32, i32* %bsLive706, align 4
  %add707 = add nsw i32 %i291, 8
  store i32 %add707, i32* %bsLive706, align 4
  %strm708 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i292 = load %struct.bz_stream*, %struct.bz_stream** %strm708, align 8
  %next_in709 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i292, i32 0, i32 0
  %i293 = load i8*, i8** %next_in709, align 8
  %incdec.ptr710 = getelementptr inbounds i8, i8* %i293, i32 1
  store i8* %incdec.ptr710, i8** %next_in709, align 8
  %strm711 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i294 = load %struct.bz_stream*, %struct.bz_stream** %strm711, align 8
  %avail_in712 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i294, i32 0, i32 1
  %i295 = load i32, i32* %avail_in712, align 8
  %dec713 = add i32 %i295, -1
  store i32 %dec713, i32* %avail_in712, align 8
  %strm714 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i296 = load %struct.bz_stream*, %struct.bz_stream** %strm714, align 8
  %total_in_lo32715 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i296, i32 0, i32 2
  %i297 = load i32, i32* %total_in_lo32715, align 4
  %inc716 = add i32 %i297, 1
  store i32 %inc716, i32* %total_in_lo32715, align 4
  %strm717 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i298 = load %struct.bz_stream*, %struct.bz_stream** %strm717, align 8
  %total_in_lo32718 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i298, i32 0, i32 2
  %i299 = load i32, i32* %total_in_lo32718, align 4
  %cmp719 = icmp eq i32 %i299, 0
  br i1 %cmp719, label %if.then721, label %if.end725

if.then721:                                       ; preds = %if.end698
  %strm722 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i300 = load %struct.bz_stream*, %struct.bz_stream** %strm722, align 8
  %total_in_hi32723 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i300, i32 0, i32 3
  %i301 = load i32, i32* %total_in_hi32723, align 8
  %inc724 = add i32 %i301, 1
  store i32 %inc724, i32* %total_in_hi32723, align 8
  br label %if.end725

if.end725:                                        ; preds = %if.then721, %if.end698
  br label %while.body678

while.end726:                                     ; preds = %if.then682
  %storedBlockCRC727 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 23
  %i302 = load i32, i32* %storedBlockCRC727, align 8
  %shl728 = shl i32 %i302, 8
  %conv729 = zext i8 %conv691 to i32
  %or730 = or i32 %shl728, %conv729
  %storedBlockCRC731 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 23
  store i32 %or730, i32* %storedBlockCRC731, align 8
  br label %sw.bb732

sw.bb732:                                         ; preds = %while.end726, %if.end
  %state733 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 22, i32* %state733, align 8
  br label %while.body734

while.body734:                                    ; preds = %if.end781, %sw.bb732
  %bsLive735 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i303 = load i32, i32* %bsLive735, align 4
  %cmp736 = icmp sge i32 %i303, 8
  br i1 %cmp736, label %if.then738, label %if.end748

if.then738:                                       ; preds = %while.body734
  %bsBuff740 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i304 = load i32, i32* %bsBuff740, align 8
  %bsLive741 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i305 = load i32, i32* %bsLive741, align 4
  %sub742 = sub nsw i32 %i305, 8
  %shr743 = lshr i32 %i304, %sub742
  %and744 = and i32 %shr743, 255
  %bsLive745 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i306 = load i32, i32* %bsLive745, align 4
  %sub746 = sub nsw i32 %i306, 8
  store i32 %sub746, i32* %bsLive745, align 4
  %conv747 = trunc i32 %and744 to i8
  br label %while.end782

if.end748:                                        ; preds = %while.body734
  %strm749 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i307 = load %struct.bz_stream*, %struct.bz_stream** %strm749, align 8
  %avail_in750 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i307, i32 0, i32 1
  %i308 = load i32, i32* %avail_in750, align 8
  %cmp751 = icmp eq i32 %i308, 0
  br i1 %cmp751, label %if.then753, label %if.end754

if.then753:                                       ; preds = %if.end748
  br label %save_state_and_return

if.end754:                                        ; preds = %if.end748
  %bsBuff755 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i309 = load i32, i32* %bsBuff755, align 8
  %shl756 = shl i32 %i309, 8
  %strm757 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i310 = load %struct.bz_stream*, %struct.bz_stream** %strm757, align 8
  %next_in758 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i310, i32 0, i32 0
  %i311 = load i8*, i8** %next_in758, align 8
  %i312 = load i8, i8* %i311, align 1
  %conv759 = zext i8 %i312 to i32
  %or760 = or i32 %shl756, %conv759
  %bsBuff761 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or760, i32* %bsBuff761, align 8
  %bsLive762 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i313 = load i32, i32* %bsLive762, align 4
  %add763 = add nsw i32 %i313, 8
  store i32 %add763, i32* %bsLive762, align 4
  %strm764 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i314 = load %struct.bz_stream*, %struct.bz_stream** %strm764, align 8
  %next_in765 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i314, i32 0, i32 0
  %i315 = load i8*, i8** %next_in765, align 8
  %incdec.ptr766 = getelementptr inbounds i8, i8* %i315, i32 1
  store i8* %incdec.ptr766, i8** %next_in765, align 8
  %strm767 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i316 = load %struct.bz_stream*, %struct.bz_stream** %strm767, align 8
  %avail_in768 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i316, i32 0, i32 1
  %i317 = load i32, i32* %avail_in768, align 8
  %dec769 = add i32 %i317, -1
  store i32 %dec769, i32* %avail_in768, align 8
  %strm770 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i318 = load %struct.bz_stream*, %struct.bz_stream** %strm770, align 8
  %total_in_lo32771 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i318, i32 0, i32 2
  %i319 = load i32, i32* %total_in_lo32771, align 4
  %inc772 = add i32 %i319, 1
  store i32 %inc772, i32* %total_in_lo32771, align 4
  %strm773 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i320 = load %struct.bz_stream*, %struct.bz_stream** %strm773, align 8
  %total_in_lo32774 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i320, i32 0, i32 2
  %i321 = load i32, i32* %total_in_lo32774, align 4
  %cmp775 = icmp eq i32 %i321, 0
  br i1 %cmp775, label %if.then777, label %if.end781

if.then777:                                       ; preds = %if.end754
  %strm778 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i322 = load %struct.bz_stream*, %struct.bz_stream** %strm778, align 8
  %total_in_hi32779 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i322, i32 0, i32 3
  %i323 = load i32, i32* %total_in_hi32779, align 8
  %inc780 = add i32 %i323, 1
  store i32 %inc780, i32* %total_in_hi32779, align 8
  br label %if.end781

if.end781:                                        ; preds = %if.then777, %if.end754
  br label %while.body734

while.end782:                                     ; preds = %if.then738
  %storedBlockCRC783 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 23
  %i324 = load i32, i32* %storedBlockCRC783, align 8
  %shl784 = shl i32 %i324, 8
  %conv785 = zext i8 %conv747 to i32
  %or786 = or i32 %shl784, %conv785
  %storedBlockCRC787 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 23
  store i32 %or786, i32* %storedBlockCRC787, align 8
  br label %sw.bb788

sw.bb788:                                         ; preds = %while.end782, %if.end
  %state789 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 23, i32* %state789, align 8
  br label %while.body790

while.body790:                                    ; preds = %if.end837, %sw.bb788
  %bsLive791 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i325 = load i32, i32* %bsLive791, align 4
  %cmp792 = icmp sge i32 %i325, 8
  br i1 %cmp792, label %if.then794, label %if.end804

if.then794:                                       ; preds = %while.body790
  %bsBuff796 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i326 = load i32, i32* %bsBuff796, align 8
  %bsLive797 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i327 = load i32, i32* %bsLive797, align 4
  %sub798 = sub nsw i32 %i327, 8
  %shr799 = lshr i32 %i326, %sub798
  %and800 = and i32 %shr799, 255
  %bsLive801 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i328 = load i32, i32* %bsLive801, align 4
  %sub802 = sub nsw i32 %i328, 8
  store i32 %sub802, i32* %bsLive801, align 4
  %conv803 = trunc i32 %and800 to i8
  br label %while.end838

if.end804:                                        ; preds = %while.body790
  %strm805 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i329 = load %struct.bz_stream*, %struct.bz_stream** %strm805, align 8
  %avail_in806 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i329, i32 0, i32 1
  %i330 = load i32, i32* %avail_in806, align 8
  %cmp807 = icmp eq i32 %i330, 0
  br i1 %cmp807, label %if.then809, label %if.end810

if.then809:                                       ; preds = %if.end804
  br label %save_state_and_return

if.end810:                                        ; preds = %if.end804
  %bsBuff811 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i331 = load i32, i32* %bsBuff811, align 8
  %shl812 = shl i32 %i331, 8
  %strm813 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i332 = load %struct.bz_stream*, %struct.bz_stream** %strm813, align 8
  %next_in814 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i332, i32 0, i32 0
  %i333 = load i8*, i8** %next_in814, align 8
  %i334 = load i8, i8* %i333, align 1
  %conv815 = zext i8 %i334 to i32
  %or816 = or i32 %shl812, %conv815
  %bsBuff817 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or816, i32* %bsBuff817, align 8
  %bsLive818 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i335 = load i32, i32* %bsLive818, align 4
  %add819 = add nsw i32 %i335, 8
  store i32 %add819, i32* %bsLive818, align 4
  %strm820 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i336 = load %struct.bz_stream*, %struct.bz_stream** %strm820, align 8
  %next_in821 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i336, i32 0, i32 0
  %i337 = load i8*, i8** %next_in821, align 8
  %incdec.ptr822 = getelementptr inbounds i8, i8* %i337, i32 1
  store i8* %incdec.ptr822, i8** %next_in821, align 8
  %strm823 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i338 = load %struct.bz_stream*, %struct.bz_stream** %strm823, align 8
  %avail_in824 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i338, i32 0, i32 1
  %i339 = load i32, i32* %avail_in824, align 8
  %dec825 = add i32 %i339, -1
  store i32 %dec825, i32* %avail_in824, align 8
  %strm826 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i340 = load %struct.bz_stream*, %struct.bz_stream** %strm826, align 8
  %total_in_lo32827 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i340, i32 0, i32 2
  %i341 = load i32, i32* %total_in_lo32827, align 4
  %inc828 = add i32 %i341, 1
  store i32 %inc828, i32* %total_in_lo32827, align 4
  %strm829 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i342 = load %struct.bz_stream*, %struct.bz_stream** %strm829, align 8
  %total_in_lo32830 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i342, i32 0, i32 2
  %i343 = load i32, i32* %total_in_lo32830, align 4
  %cmp831 = icmp eq i32 %i343, 0
  br i1 %cmp831, label %if.then833, label %if.end837

if.then833:                                       ; preds = %if.end810
  %strm834 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i344 = load %struct.bz_stream*, %struct.bz_stream** %strm834, align 8
  %total_in_hi32835 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i344, i32 0, i32 3
  %i345 = load i32, i32* %total_in_hi32835, align 8
  %inc836 = add i32 %i345, 1
  store i32 %inc836, i32* %total_in_hi32835, align 8
  br label %if.end837

if.end837:                                        ; preds = %if.then833, %if.end810
  br label %while.body790

while.end838:                                     ; preds = %if.then794
  %storedBlockCRC839 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 23
  %i346 = load i32, i32* %storedBlockCRC839, align 8
  %shl840 = shl i32 %i346, 8
  %conv841 = zext i8 %conv803 to i32
  %or842 = or i32 %shl840, %conv841
  %storedBlockCRC843 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 23
  store i32 %or842, i32* %storedBlockCRC843, align 8
  br label %sw.bb844

sw.bb844:                                         ; preds = %while.end838, %if.end
  %state845 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 24, i32* %state845, align 8
  br label %while.body846

while.body846:                                    ; preds = %if.end893, %sw.bb844
  %bsLive847 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i347 = load i32, i32* %bsLive847, align 4
  %cmp848 = icmp sge i32 %i347, 1
  br i1 %cmp848, label %if.then850, label %if.end860

if.then850:                                       ; preds = %while.body846
  %bsBuff852 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i348 = load i32, i32* %bsBuff852, align 8
  %bsLive853 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i349 = load i32, i32* %bsLive853, align 4
  %sub854 = sub nsw i32 %i349, 1
  %shr855 = lshr i32 %i348, %sub854
  %and856 = and i32 %shr855, 1
  %bsLive857 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i350 = load i32, i32* %bsLive857, align 4
  %sub858 = sub nsw i32 %i350, 1
  store i32 %sub858, i32* %bsLive857, align 4
  %conv859 = trunc i32 %and856 to i8
  %blockRandomised = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 4
  store i8 %conv859, i8* %blockRandomised, align 4
  br label %while.end894

if.end860:                                        ; preds = %while.body846
  %strm861 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i351 = load %struct.bz_stream*, %struct.bz_stream** %strm861, align 8
  %avail_in862 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i351, i32 0, i32 1
  %i352 = load i32, i32* %avail_in862, align 8
  %cmp863 = icmp eq i32 %i352, 0
  br i1 %cmp863, label %if.then865, label %if.end866

if.then865:                                       ; preds = %if.end860
  br label %save_state_and_return

if.end866:                                        ; preds = %if.end860
  %bsBuff867 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i353 = load i32, i32* %bsBuff867, align 8
  %shl868 = shl i32 %i353, 8
  %strm869 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i354 = load %struct.bz_stream*, %struct.bz_stream** %strm869, align 8
  %next_in870 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i354, i32 0, i32 0
  %i355 = load i8*, i8** %next_in870, align 8
  %i356 = load i8, i8* %i355, align 1
  %conv871 = zext i8 %i356 to i32
  %or872 = or i32 %shl868, %conv871
  %bsBuff873 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or872, i32* %bsBuff873, align 8
  %bsLive874 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i357 = load i32, i32* %bsLive874, align 4
  %add875 = add nsw i32 %i357, 8
  store i32 %add875, i32* %bsLive874, align 4
  %strm876 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i358 = load %struct.bz_stream*, %struct.bz_stream** %strm876, align 8
  %next_in877 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i358, i32 0, i32 0
  %i359 = load i8*, i8** %next_in877, align 8
  %incdec.ptr878 = getelementptr inbounds i8, i8* %i359, i32 1
  store i8* %incdec.ptr878, i8** %next_in877, align 8
  %strm879 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i360 = load %struct.bz_stream*, %struct.bz_stream** %strm879, align 8
  %avail_in880 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i360, i32 0, i32 1
  %i361 = load i32, i32* %avail_in880, align 8
  %dec881 = add i32 %i361, -1
  store i32 %dec881, i32* %avail_in880, align 8
  %strm882 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i362 = load %struct.bz_stream*, %struct.bz_stream** %strm882, align 8
  %total_in_lo32883 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i362, i32 0, i32 2
  %i363 = load i32, i32* %total_in_lo32883, align 4
  %inc884 = add i32 %i363, 1
  store i32 %inc884, i32* %total_in_lo32883, align 4
  %strm885 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i364 = load %struct.bz_stream*, %struct.bz_stream** %strm885, align 8
  %total_in_lo32886 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i364, i32 0, i32 2
  %i365 = load i32, i32* %total_in_lo32886, align 4
  %cmp887 = icmp eq i32 %i365, 0
  br i1 %cmp887, label %if.then889, label %if.end893

if.then889:                                       ; preds = %if.end866
  %strm890 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i366 = load %struct.bz_stream*, %struct.bz_stream** %strm890, align 8
  %total_in_hi32891 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i366, i32 0, i32 3
  %i367 = load i32, i32* %total_in_hi32891, align 8
  %inc892 = add i32 %i367, 1
  store i32 %inc892, i32* %total_in_hi32891, align 8
  br label %if.end893

if.end893:                                        ; preds = %if.then889, %if.end866
  br label %while.body846

while.end894:                                     ; preds = %if.then850
  %origPtr = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  store i32 0, i32* %origPtr, align 8
  br label %sw.bb895

sw.bb895:                                         ; preds = %while.end894, %if.end
  %state896 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 25, i32* %state896, align 8
  br label %while.body897

while.body897:                                    ; preds = %if.end944, %sw.bb895
  %bsLive898 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i368 = load i32, i32* %bsLive898, align 4
  %cmp899 = icmp sge i32 %i368, 8
  br i1 %cmp899, label %if.then901, label %if.end911

if.then901:                                       ; preds = %while.body897
  %bsBuff903 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i369 = load i32, i32* %bsBuff903, align 8
  %bsLive904 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i370 = load i32, i32* %bsLive904, align 4
  %sub905 = sub nsw i32 %i370, 8
  %shr906 = lshr i32 %i369, %sub905
  %and907 = and i32 %shr906, 255
  %bsLive908 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i371 = load i32, i32* %bsLive908, align 4
  %sub909 = sub nsw i32 %i371, 8
  store i32 %sub909, i32* %bsLive908, align 4
  %conv910 = trunc i32 %and907 to i8
  br label %while.end945

if.end911:                                        ; preds = %while.body897
  %strm912 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i372 = load %struct.bz_stream*, %struct.bz_stream** %strm912, align 8
  %avail_in913 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i372, i32 0, i32 1
  %i373 = load i32, i32* %avail_in913, align 8
  %cmp914 = icmp eq i32 %i373, 0
  br i1 %cmp914, label %if.then916, label %if.end917

if.then916:                                       ; preds = %if.end911
  br label %save_state_and_return

if.end917:                                        ; preds = %if.end911
  %bsBuff918 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i374 = load i32, i32* %bsBuff918, align 8
  %shl919 = shl i32 %i374, 8
  %strm920 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i375 = load %struct.bz_stream*, %struct.bz_stream** %strm920, align 8
  %next_in921 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i375, i32 0, i32 0
  %i376 = load i8*, i8** %next_in921, align 8
  %i377 = load i8, i8* %i376, align 1
  %conv922 = zext i8 %i377 to i32
  %or923 = or i32 %shl919, %conv922
  %bsBuff924 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or923, i32* %bsBuff924, align 8
  %bsLive925 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i378 = load i32, i32* %bsLive925, align 4
  %add926 = add nsw i32 %i378, 8
  store i32 %add926, i32* %bsLive925, align 4
  %strm927 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i379 = load %struct.bz_stream*, %struct.bz_stream** %strm927, align 8
  %next_in928 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i379, i32 0, i32 0
  %i380 = load i8*, i8** %next_in928, align 8
  %incdec.ptr929 = getelementptr inbounds i8, i8* %i380, i32 1
  store i8* %incdec.ptr929, i8** %next_in928, align 8
  %strm930 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i381 = load %struct.bz_stream*, %struct.bz_stream** %strm930, align 8
  %avail_in931 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i381, i32 0, i32 1
  %i382 = load i32, i32* %avail_in931, align 8
  %dec932 = add i32 %i382, -1
  store i32 %dec932, i32* %avail_in931, align 8
  %strm933 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i383 = load %struct.bz_stream*, %struct.bz_stream** %strm933, align 8
  %total_in_lo32934 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i383, i32 0, i32 2
  %i384 = load i32, i32* %total_in_lo32934, align 4
  %inc935 = add i32 %i384, 1
  store i32 %inc935, i32* %total_in_lo32934, align 4
  %strm936 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i385 = load %struct.bz_stream*, %struct.bz_stream** %strm936, align 8
  %total_in_lo32937 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i385, i32 0, i32 2
  %i386 = load i32, i32* %total_in_lo32937, align 4
  %cmp938 = icmp eq i32 %i386, 0
  br i1 %cmp938, label %if.then940, label %if.end944

if.then940:                                       ; preds = %if.end917
  %strm941 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i387 = load %struct.bz_stream*, %struct.bz_stream** %strm941, align 8
  %total_in_hi32942 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i387, i32 0, i32 3
  %i388 = load i32, i32* %total_in_hi32942, align 8
  %inc943 = add i32 %i388, 1
  store i32 %inc943, i32* %total_in_hi32942, align 8
  br label %if.end944

if.end944:                                        ; preds = %if.then940, %if.end917
  br label %while.body897

while.end945:                                     ; preds = %if.then901
  %origPtr946 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  %i389 = load i32, i32* %origPtr946, align 8
  %shl947 = shl i32 %i389, 8
  %conv948 = zext i8 %conv910 to i32
  %or949 = or i32 %shl947, %conv948
  %origPtr950 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  store i32 %or949, i32* %origPtr950, align 8
  br label %sw.bb951

sw.bb951:                                         ; preds = %while.end945, %if.end
  %state952 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 26, i32* %state952, align 8
  br label %while.body953

while.body953:                                    ; preds = %if.end1000, %sw.bb951
  %bsLive954 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i390 = load i32, i32* %bsLive954, align 4
  %cmp955 = icmp sge i32 %i390, 8
  br i1 %cmp955, label %if.then957, label %if.end967

if.then957:                                       ; preds = %while.body953
  %bsBuff959 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i391 = load i32, i32* %bsBuff959, align 8
  %bsLive960 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i392 = load i32, i32* %bsLive960, align 4
  %sub961 = sub nsw i32 %i392, 8
  %shr962 = lshr i32 %i391, %sub961
  %and963 = and i32 %shr962, 255
  %bsLive964 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i393 = load i32, i32* %bsLive964, align 4
  %sub965 = sub nsw i32 %i393, 8
  store i32 %sub965, i32* %bsLive964, align 4
  %conv966 = trunc i32 %and963 to i8
  br label %while.end1001

if.end967:                                        ; preds = %while.body953
  %strm968 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i394 = load %struct.bz_stream*, %struct.bz_stream** %strm968, align 8
  %avail_in969 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i394, i32 0, i32 1
  %i395 = load i32, i32* %avail_in969, align 8
  %cmp970 = icmp eq i32 %i395, 0
  br i1 %cmp970, label %if.then972, label %if.end973

if.then972:                                       ; preds = %if.end967
  br label %save_state_and_return

if.end973:                                        ; preds = %if.end967
  %bsBuff974 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i396 = load i32, i32* %bsBuff974, align 8
  %shl975 = shl i32 %i396, 8
  %strm976 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i397 = load %struct.bz_stream*, %struct.bz_stream** %strm976, align 8
  %next_in977 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i397, i32 0, i32 0
  %i398 = load i8*, i8** %next_in977, align 8
  %i399 = load i8, i8* %i398, align 1
  %conv978 = zext i8 %i399 to i32
  %or979 = or i32 %shl975, %conv978
  %bsBuff980 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or979, i32* %bsBuff980, align 8
  %bsLive981 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i400 = load i32, i32* %bsLive981, align 4
  %add982 = add nsw i32 %i400, 8
  store i32 %add982, i32* %bsLive981, align 4
  %strm983 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i401 = load %struct.bz_stream*, %struct.bz_stream** %strm983, align 8
  %next_in984 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i401, i32 0, i32 0
  %i402 = load i8*, i8** %next_in984, align 8
  %incdec.ptr985 = getelementptr inbounds i8, i8* %i402, i32 1
  store i8* %incdec.ptr985, i8** %next_in984, align 8
  %strm986 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i403 = load %struct.bz_stream*, %struct.bz_stream** %strm986, align 8
  %avail_in987 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i403, i32 0, i32 1
  %i404 = load i32, i32* %avail_in987, align 8
  %dec988 = add i32 %i404, -1
  store i32 %dec988, i32* %avail_in987, align 8
  %strm989 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i405 = load %struct.bz_stream*, %struct.bz_stream** %strm989, align 8
  %total_in_lo32990 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i405, i32 0, i32 2
  %i406 = load i32, i32* %total_in_lo32990, align 4
  %inc991 = add i32 %i406, 1
  store i32 %inc991, i32* %total_in_lo32990, align 4
  %strm992 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i407 = load %struct.bz_stream*, %struct.bz_stream** %strm992, align 8
  %total_in_lo32993 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i407, i32 0, i32 2
  %i408 = load i32, i32* %total_in_lo32993, align 4
  %cmp994 = icmp eq i32 %i408, 0
  br i1 %cmp994, label %if.then996, label %if.end1000

if.then996:                                       ; preds = %if.end973
  %strm997 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i409 = load %struct.bz_stream*, %struct.bz_stream** %strm997, align 8
  %total_in_hi32998 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i409, i32 0, i32 3
  %i410 = load i32, i32* %total_in_hi32998, align 8
  %inc999 = add i32 %i410, 1
  store i32 %inc999, i32* %total_in_hi32998, align 8
  br label %if.end1000

if.end1000:                                       ; preds = %if.then996, %if.end973
  br label %while.body953

while.end1001:                                    ; preds = %if.then957
  %origPtr1002 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  %i411 = load i32, i32* %origPtr1002, align 8
  %shl1003 = shl i32 %i411, 8
  %conv1004 = zext i8 %conv966 to i32
  %or1005 = or i32 %shl1003, %conv1004
  %origPtr1006 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  store i32 %or1005, i32* %origPtr1006, align 8
  br label %sw.bb1007

sw.bb1007:                                        ; preds = %while.end1001, %if.end
  %state1008 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 27, i32* %state1008, align 8
  br label %while.body1009

while.body1009:                                   ; preds = %if.end1056, %sw.bb1007
  %bsLive1010 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i412 = load i32, i32* %bsLive1010, align 4
  %cmp1011 = icmp sge i32 %i412, 8
  br i1 %cmp1011, label %if.then1013, label %if.end1023

if.then1013:                                      ; preds = %while.body1009
  %bsBuff1015 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i413 = load i32, i32* %bsBuff1015, align 8
  %bsLive1016 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i414 = load i32, i32* %bsLive1016, align 4
  %sub1017 = sub nsw i32 %i414, 8
  %shr1018 = lshr i32 %i413, %sub1017
  %and1019 = and i32 %shr1018, 255
  %bsLive1020 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i415 = load i32, i32* %bsLive1020, align 4
  %sub1021 = sub nsw i32 %i415, 8
  store i32 %sub1021, i32* %bsLive1020, align 4
  %conv1022 = trunc i32 %and1019 to i8
  br label %while.end1057

if.end1023:                                       ; preds = %while.body1009
  %strm1024 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i416 = load %struct.bz_stream*, %struct.bz_stream** %strm1024, align 8
  %avail_in1025 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i416, i32 0, i32 1
  %i417 = load i32, i32* %avail_in1025, align 8
  %cmp1026 = icmp eq i32 %i417, 0
  br i1 %cmp1026, label %if.then1028, label %if.end1029

if.then1028:                                      ; preds = %if.end1023
  br label %save_state_and_return

if.end1029:                                       ; preds = %if.end1023
  %bsBuff1030 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i418 = load i32, i32* %bsBuff1030, align 8
  %shl1031 = shl i32 %i418, 8
  %strm1032 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i419 = load %struct.bz_stream*, %struct.bz_stream** %strm1032, align 8
  %next_in1033 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i419, i32 0, i32 0
  %i420 = load i8*, i8** %next_in1033, align 8
  %i421 = load i8, i8* %i420, align 1
  %conv1034 = zext i8 %i421 to i32
  %or1035 = or i32 %shl1031, %conv1034
  %bsBuff1036 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or1035, i32* %bsBuff1036, align 8
  %bsLive1037 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i422 = load i32, i32* %bsLive1037, align 4
  %add1038 = add nsw i32 %i422, 8
  store i32 %add1038, i32* %bsLive1037, align 4
  %strm1039 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i423 = load %struct.bz_stream*, %struct.bz_stream** %strm1039, align 8
  %next_in1040 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i423, i32 0, i32 0
  %i424 = load i8*, i8** %next_in1040, align 8
  %incdec.ptr1041 = getelementptr inbounds i8, i8* %i424, i32 1
  store i8* %incdec.ptr1041, i8** %next_in1040, align 8
  %strm1042 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i425 = load %struct.bz_stream*, %struct.bz_stream** %strm1042, align 8
  %avail_in1043 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i425, i32 0, i32 1
  %i426 = load i32, i32* %avail_in1043, align 8
  %dec1044 = add i32 %i426, -1
  store i32 %dec1044, i32* %avail_in1043, align 8
  %strm1045 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i427 = load %struct.bz_stream*, %struct.bz_stream** %strm1045, align 8
  %total_in_lo321046 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i427, i32 0, i32 2
  %i428 = load i32, i32* %total_in_lo321046, align 4
  %inc1047 = add i32 %i428, 1
  store i32 %inc1047, i32* %total_in_lo321046, align 4
  %strm1048 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i429 = load %struct.bz_stream*, %struct.bz_stream** %strm1048, align 8
  %total_in_lo321049 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i429, i32 0, i32 2
  %i430 = load i32, i32* %total_in_lo321049, align 4
  %cmp1050 = icmp eq i32 %i430, 0
  br i1 %cmp1050, label %if.then1052, label %if.end1056

if.then1052:                                      ; preds = %if.end1029
  %strm1053 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i431 = load %struct.bz_stream*, %struct.bz_stream** %strm1053, align 8
  %total_in_hi321054 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i431, i32 0, i32 3
  %i432 = load i32, i32* %total_in_hi321054, align 8
  %inc1055 = add i32 %i432, 1
  store i32 %inc1055, i32* %total_in_hi321054, align 8
  br label %if.end1056

if.end1056:                                       ; preds = %if.then1052, %if.end1029
  br label %while.body1009

while.end1057:                                    ; preds = %if.then1013
  %origPtr1058 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  %i433 = load i32, i32* %origPtr1058, align 8
  %shl1059 = shl i32 %i433, 8
  %conv1060 = zext i8 %conv1022 to i32
  %or1061 = or i32 %shl1059, %conv1060
  %origPtr1062 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  store i32 %or1061, i32* %origPtr1062, align 8
  %origPtr1063 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  %i434 = load i32, i32* %origPtr1063, align 8
  %cmp1064 = icmp slt i32 %i434, 0
  br i1 %cmp1064, label %if.then1066, label %if.end1067

if.then1066:                                      ; preds = %while.end1057
  br label %save_state_and_return

if.end1067:                                       ; preds = %while.end1057
  %origPtr1068 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  %i435 = load i32, i32* %origPtr1068, align 8
  %blockSize100k1069 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 9
  %i436 = load i32, i32* %blockSize100k1069, align 8
  %mul1070 = mul nsw i32 100000, %i436
  %add1071 = add nsw i32 10, %mul1070
  %cmp1072 = icmp sgt i32 %i435, %add1071
  br i1 %cmp1072, label %if.then1074, label %if.end1075

if.then1074:                                      ; preds = %if.end1067
  br label %save_state_and_return

if.end1075:                                       ; preds = %if.end1067
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end1075
  %i.0 = phi i32 [ %inc1138, %for.inc ], [ 0, %if.end1075 ]
  %cmp1076 = icmp slt i32 %i.0, 16
  br i1 %cmp1076, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %sw.bb1078

sw.bb1078:                                        ; preds = %for.body, %if.end
  %i.1 = phi i32 [ %i2, %if.end ], [ %i.0, %for.body ]
  %state1079 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 28, i32* %state1079, align 8
  br label %while.body1080

while.body1080:                                   ; preds = %if.end1127, %sw.bb1078
  %bsLive1081 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i437 = load i32, i32* %bsLive1081, align 4
  %cmp1082 = icmp sge i32 %i437, 1
  br i1 %cmp1082, label %if.then1084, label %if.end1094

if.then1084:                                      ; preds = %while.body1080
  %bsBuff1086 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i438 = load i32, i32* %bsBuff1086, align 8
  %bsLive1087 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i439 = load i32, i32* %bsLive1087, align 4
  %sub1088 = sub nsw i32 %i439, 1
  %shr1089 = lshr i32 %i438, %sub1088
  %and1090 = and i32 %shr1089, 1
  %bsLive1091 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i440 = load i32, i32* %bsLive1091, align 4
  %sub1092 = sub nsw i32 %i440, 1
  store i32 %sub1092, i32* %bsLive1091, align 4
  %conv1093 = trunc i32 %and1090 to i8
  br label %while.end1128

if.end1094:                                       ; preds = %while.body1080
  %strm1095 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i441 = load %struct.bz_stream*, %struct.bz_stream** %strm1095, align 8
  %avail_in1096 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i441, i32 0, i32 1
  %i442 = load i32, i32* %avail_in1096, align 8
  %cmp1097 = icmp eq i32 %i442, 0
  br i1 %cmp1097, label %if.then1099, label %if.end1100

if.then1099:                                      ; preds = %if.end1094
  br label %save_state_and_return

if.end1100:                                       ; preds = %if.end1094
  %bsBuff1101 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i443 = load i32, i32* %bsBuff1101, align 8
  %shl1102 = shl i32 %i443, 8
  %strm1103 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i444 = load %struct.bz_stream*, %struct.bz_stream** %strm1103, align 8
  %next_in1104 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i444, i32 0, i32 0
  %i445 = load i8*, i8** %next_in1104, align 8
  %i446 = load i8, i8* %i445, align 1
  %conv1105 = zext i8 %i446 to i32
  %or1106 = or i32 %shl1102, %conv1105
  %bsBuff1107 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or1106, i32* %bsBuff1107, align 8
  %bsLive1108 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i447 = load i32, i32* %bsLive1108, align 4
  %add1109 = add nsw i32 %i447, 8
  store i32 %add1109, i32* %bsLive1108, align 4
  %strm1110 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i448 = load %struct.bz_stream*, %struct.bz_stream** %strm1110, align 8
  %next_in1111 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i448, i32 0, i32 0
  %i449 = load i8*, i8** %next_in1111, align 8
  %incdec.ptr1112 = getelementptr inbounds i8, i8* %i449, i32 1
  store i8* %incdec.ptr1112, i8** %next_in1111, align 8
  %strm1113 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i450 = load %struct.bz_stream*, %struct.bz_stream** %strm1113, align 8
  %avail_in1114 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i450, i32 0, i32 1
  %i451 = load i32, i32* %avail_in1114, align 8
  %dec1115 = add i32 %i451, -1
  store i32 %dec1115, i32* %avail_in1114, align 8
  %strm1116 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i452 = load %struct.bz_stream*, %struct.bz_stream** %strm1116, align 8
  %total_in_lo321117 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i452, i32 0, i32 2
  %i453 = load i32, i32* %total_in_lo321117, align 4
  %inc1118 = add i32 %i453, 1
  store i32 %inc1118, i32* %total_in_lo321117, align 4
  %strm1119 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i454 = load %struct.bz_stream*, %struct.bz_stream** %strm1119, align 8
  %total_in_lo321120 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i454, i32 0, i32 2
  %i455 = load i32, i32* %total_in_lo321120, align 4
  %cmp1121 = icmp eq i32 %i455, 0
  br i1 %cmp1121, label %if.then1123, label %if.end1127

if.then1123:                                      ; preds = %if.end1100
  %strm1124 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i456 = load %struct.bz_stream*, %struct.bz_stream** %strm1124, align 8
  %total_in_hi321125 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i456, i32 0, i32 3
  %i457 = load i32, i32* %total_in_hi321125, align 8
  %inc1126 = add i32 %i457, 1
  store i32 %inc1126, i32* %total_in_hi321125, align 8
  br label %if.end1127

if.end1127:                                       ; preds = %if.then1123, %if.end1100
  br label %while.body1080

while.end1128:                                    ; preds = %if.then1084
  %conv1129 = zext i8 %conv1093 to i32
  %cmp1130 = icmp eq i32 %conv1129, 1
  br i1 %cmp1130, label %if.then1132, label %if.else1133

if.then1132:                                      ; preds = %while.end1128
  %inUse16 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 29
  %idxprom = sext i32 %i.1 to i64
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %idxprom
  store i8 1, i8* %arrayidx, align 1
  br label %if.end1137

if.else1133:                                      ; preds = %while.end1128
  %inUse161134 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 29
  %idxprom1135 = sext i32 %i.1 to i64
  %arrayidx1136 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse161134, i64 0, i64 %idxprom1135
  store i8 0, i8* %arrayidx1136, align 1
  br label %if.end1137

if.end1137:                                       ; preds = %if.else1133, %if.then1132
  br label %for.inc

for.inc:                                          ; preds = %if.end1137
  %inc1138 = add nsw i32 %i.1, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.cond1139

for.cond1139:                                     ; preds = %for.inc1145, %for.end
  %i.2 = phi i32 [ 0, %for.end ], [ %inc1146, %for.inc1145 ]
  %cmp1140 = icmp slt i32 %i.2, 256
  br i1 %cmp1140, label %for.body1142, label %for.end1147

for.body1142:                                     ; preds = %for.cond1139
  %inUse = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 28
  %idxprom1143 = sext i32 %i.2 to i64
  %arrayidx1144 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom1143
  store i8 0, i8* %arrayidx1144, align 1
  br label %for.inc1145

for.inc1145:                                      ; preds = %for.body1142
  %inc1146 = add nsw i32 %i.2, 1
  br label %for.cond1139

for.end1147:                                      ; preds = %for.cond1139
  br label %for.cond1148

for.cond1148:                                     ; preds = %for.inc1226, %for.end1147
  %j.0 = phi i32 [ %j.3, %for.inc1226 ], [ %i3, %for.end1147 ]
  %i.3 = phi i32 [ %inc1227, %for.inc1226 ], [ 0, %for.end1147 ]
  %cmp1149 = icmp slt i32 %i.3, 16
  br i1 %cmp1149, label %for.body1151, label %for.end1228

for.body1151:                                     ; preds = %for.cond1148
  %inUse161152 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 29
  %idxprom1153 = sext i32 %i.3 to i64
  %arrayidx1154 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse161152, i64 0, i64 %idxprom1153
  %i458 = load i8, i8* %arrayidx1154, align 1
  %tobool1155 = icmp ne i8 %i458, 0
  br i1 %tobool1155, label %if.then1156, label %if.end1225

if.then1156:                                      ; preds = %for.body1151
  br label %for.cond1157

for.cond1157:                                     ; preds = %for.inc1222, %if.then1156
  %j.1 = phi i32 [ %inc1223, %for.inc1222 ], [ 0, %if.then1156 ]
  %i.4 = phi i32 [ %i.5, %for.inc1222 ], [ %i.3, %if.then1156 ]
  %cmp1158 = icmp slt i32 %j.1, 16
  br i1 %cmp1158, label %for.body1160, label %for.end1224

for.body1160:                                     ; preds = %for.cond1157
  br label %sw.bb1161

sw.bb1161:                                        ; preds = %for.body1160, %if.end
  %j.2 = phi i32 [ %i3, %if.end ], [ %j.1, %for.body1160 ]
  %i.5 = phi i32 [ %i2, %if.end ], [ %i.4, %for.body1160 ]
  %state1162 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 29, i32* %state1162, align 8
  br label %while.body1163

while.body1163:                                   ; preds = %if.end1210, %sw.bb1161
  %bsLive1164 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i459 = load i32, i32* %bsLive1164, align 4
  %cmp1165 = icmp sge i32 %i459, 1
  br i1 %cmp1165, label %if.then1167, label %if.end1177

if.then1167:                                      ; preds = %while.body1163
  %bsBuff1169 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i460 = load i32, i32* %bsBuff1169, align 8
  %bsLive1170 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i461 = load i32, i32* %bsLive1170, align 4
  %sub1171 = sub nsw i32 %i461, 1
  %shr1172 = lshr i32 %i460, %sub1171
  %and1173 = and i32 %shr1172, 1
  %bsLive1174 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i462 = load i32, i32* %bsLive1174, align 4
  %sub1175 = sub nsw i32 %i462, 1
  store i32 %sub1175, i32* %bsLive1174, align 4
  %conv1176 = trunc i32 %and1173 to i8
  br label %while.end1211

if.end1177:                                       ; preds = %while.body1163
  %strm1178 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i463 = load %struct.bz_stream*, %struct.bz_stream** %strm1178, align 8
  %avail_in1179 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i463, i32 0, i32 1
  %i464 = load i32, i32* %avail_in1179, align 8
  %cmp1180 = icmp eq i32 %i464, 0
  br i1 %cmp1180, label %if.then1182, label %if.end1183

if.then1182:                                      ; preds = %if.end1177
  br label %save_state_and_return

if.end1183:                                       ; preds = %if.end1177
  %bsBuff1184 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i465 = load i32, i32* %bsBuff1184, align 8
  %shl1185 = shl i32 %i465, 8
  %strm1186 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i466 = load %struct.bz_stream*, %struct.bz_stream** %strm1186, align 8
  %next_in1187 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i466, i32 0, i32 0
  %i467 = load i8*, i8** %next_in1187, align 8
  %i468 = load i8, i8* %i467, align 1
  %conv1188 = zext i8 %i468 to i32
  %or1189 = or i32 %shl1185, %conv1188
  %bsBuff1190 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or1189, i32* %bsBuff1190, align 8
  %bsLive1191 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i469 = load i32, i32* %bsLive1191, align 4
  %add1192 = add nsw i32 %i469, 8
  store i32 %add1192, i32* %bsLive1191, align 4
  %strm1193 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i470 = load %struct.bz_stream*, %struct.bz_stream** %strm1193, align 8
  %next_in1194 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i470, i32 0, i32 0
  %i471 = load i8*, i8** %next_in1194, align 8
  %incdec.ptr1195 = getelementptr inbounds i8, i8* %i471, i32 1
  store i8* %incdec.ptr1195, i8** %next_in1194, align 8
  %strm1196 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i472 = load %struct.bz_stream*, %struct.bz_stream** %strm1196, align 8
  %avail_in1197 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i472, i32 0, i32 1
  %i473 = load i32, i32* %avail_in1197, align 8
  %dec1198 = add i32 %i473, -1
  store i32 %dec1198, i32* %avail_in1197, align 8
  %strm1199 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i474 = load %struct.bz_stream*, %struct.bz_stream** %strm1199, align 8
  %total_in_lo321200 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i474, i32 0, i32 2
  %i475 = load i32, i32* %total_in_lo321200, align 4
  %inc1201 = add i32 %i475, 1
  store i32 %inc1201, i32* %total_in_lo321200, align 4
  %strm1202 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i476 = load %struct.bz_stream*, %struct.bz_stream** %strm1202, align 8
  %total_in_lo321203 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i476, i32 0, i32 2
  %i477 = load i32, i32* %total_in_lo321203, align 4
  %cmp1204 = icmp eq i32 %i477, 0
  br i1 %cmp1204, label %if.then1206, label %if.end1210

if.then1206:                                      ; preds = %if.end1183
  %strm1207 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i478 = load %struct.bz_stream*, %struct.bz_stream** %strm1207, align 8
  %total_in_hi321208 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i478, i32 0, i32 3
  %i479 = load i32, i32* %total_in_hi321208, align 8
  %inc1209 = add i32 %i479, 1
  store i32 %inc1209, i32* %total_in_hi321208, align 8
  br label %if.end1210

if.end1210:                                       ; preds = %if.then1206, %if.end1183
  br label %while.body1163

while.end1211:                                    ; preds = %if.then1167
  %conv1212 = zext i8 %conv1176 to i32
  %cmp1213 = icmp eq i32 %conv1212, 1
  br i1 %cmp1213, label %if.then1215, label %if.end1221

if.then1215:                                      ; preds = %while.end1211
  %inUse1216 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 28
  %mul1217 = mul nsw i32 %i.5, 16
  %add1218 = add nsw i32 %mul1217, %j.2
  %idxprom1219 = sext i32 %add1218 to i64
  %arrayidx1220 = getelementptr inbounds [256 x i8], [256 x i8]* %inUse1216, i64 0, i64 %idxprom1219
  store i8 1, i8* %arrayidx1220, align 1
  br label %if.end1221

if.end1221:                                       ; preds = %if.then1215, %while.end1211
  br label %for.inc1222

for.inc1222:                                      ; preds = %if.end1221
  %inc1223 = add nsw i32 %j.2, 1
  br label %for.cond1157

for.end1224:                                      ; preds = %for.cond1157
  br label %if.end1225

if.end1225:                                       ; preds = %for.end1224, %for.body1151
  %j.3 = phi i32 [ %j.1, %for.end1224 ], [ %j.0, %for.body1151 ]
  %i.6 = phi i32 [ %i.4, %for.end1224 ], [ %i.3, %for.body1151 ]
  br label %for.inc1226

for.inc1226:                                      ; preds = %if.end1225
  %inc1227 = add nsw i32 %i.6, 1
  br label %for.cond1148

for.end1228:                                      ; preds = %for.cond1148
  call void @makeMaps_d(%struct.DState* %s)
  %nInUse = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 27
  %i480 = load i32, i32* %nInUse, align 8
  %cmp1229 = icmp eq i32 %i480, 0
  br i1 %cmp1229, label %if.then1231, label %if.end1232

if.then1231:                                      ; preds = %for.end1228
  br label %save_state_and_return

if.end1232:                                       ; preds = %for.end1228
  %nInUse1233 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 27
  %i481 = load i32, i32* %nInUse1233, align 8
  %add1234 = add nsw i32 %i481, 2
  br label %sw.bb1235

sw.bb1235:                                        ; preds = %if.end1232, %if.end
  %alphaSize.0 = phi i32 [ %i5, %if.end ], [ %add1234, %if.end1232 ]
  %j.4 = phi i32 [ %i3, %if.end ], [ %j.0, %if.end1232 ]
  %i.7 = phi i32 [ %i2, %if.end ], [ %i.3, %if.end1232 ]
  %state1236 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 30, i32* %state1236, align 8
  br label %while.body1237

while.body1237:                                   ; preds = %if.end1283, %sw.bb1235
  %bsLive1238 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i482 = load i32, i32* %bsLive1238, align 4
  %cmp1239 = icmp sge i32 %i482, 3
  br i1 %cmp1239, label %if.then1241, label %if.end1250

if.then1241:                                      ; preds = %while.body1237
  %bsBuff1243 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i483 = load i32, i32* %bsBuff1243, align 8
  %bsLive1244 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i484 = load i32, i32* %bsLive1244, align 4
  %sub1245 = sub nsw i32 %i484, 3
  %shr1246 = lshr i32 %i483, %sub1245
  %and1247 = and i32 %shr1246, 7
  %bsLive1248 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i485 = load i32, i32* %bsLive1248, align 4
  %sub1249 = sub nsw i32 %i485, 3
  store i32 %sub1249, i32* %bsLive1248, align 4
  br label %while.end1284

if.end1250:                                       ; preds = %while.body1237
  %strm1251 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i486 = load %struct.bz_stream*, %struct.bz_stream** %strm1251, align 8
  %avail_in1252 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i486, i32 0, i32 1
  %i487 = load i32, i32* %avail_in1252, align 8
  %cmp1253 = icmp eq i32 %i487, 0
  br i1 %cmp1253, label %if.then1255, label %if.end1256

if.then1255:                                      ; preds = %if.end1250
  br label %save_state_and_return

if.end1256:                                       ; preds = %if.end1250
  %bsBuff1257 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i488 = load i32, i32* %bsBuff1257, align 8
  %shl1258 = shl i32 %i488, 8
  %strm1259 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i489 = load %struct.bz_stream*, %struct.bz_stream** %strm1259, align 8
  %next_in1260 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i489, i32 0, i32 0
  %i490 = load i8*, i8** %next_in1260, align 8
  %i491 = load i8, i8* %i490, align 1
  %conv1261 = zext i8 %i491 to i32
  %or1262 = or i32 %shl1258, %conv1261
  %bsBuff1263 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or1262, i32* %bsBuff1263, align 8
  %bsLive1264 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i492 = load i32, i32* %bsLive1264, align 4
  %add1265 = add nsw i32 %i492, 8
  store i32 %add1265, i32* %bsLive1264, align 4
  %strm1266 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i493 = load %struct.bz_stream*, %struct.bz_stream** %strm1266, align 8
  %next_in1267 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i493, i32 0, i32 0
  %i494 = load i8*, i8** %next_in1267, align 8
  %incdec.ptr1268 = getelementptr inbounds i8, i8* %i494, i32 1
  store i8* %incdec.ptr1268, i8** %next_in1267, align 8
  %strm1269 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i495 = load %struct.bz_stream*, %struct.bz_stream** %strm1269, align 8
  %avail_in1270 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i495, i32 0, i32 1
  %i496 = load i32, i32* %avail_in1270, align 8
  %dec1271 = add i32 %i496, -1
  store i32 %dec1271, i32* %avail_in1270, align 8
  %strm1272 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i497 = load %struct.bz_stream*, %struct.bz_stream** %strm1272, align 8
  %total_in_lo321273 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i497, i32 0, i32 2
  %i498 = load i32, i32* %total_in_lo321273, align 4
  %inc1274 = add i32 %i498, 1
  store i32 %inc1274, i32* %total_in_lo321273, align 4
  %strm1275 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i499 = load %struct.bz_stream*, %struct.bz_stream** %strm1275, align 8
  %total_in_lo321276 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i499, i32 0, i32 2
  %i500 = load i32, i32* %total_in_lo321276, align 4
  %cmp1277 = icmp eq i32 %i500, 0
  br i1 %cmp1277, label %if.then1279, label %if.end1283

if.then1279:                                      ; preds = %if.end1256
  %strm1280 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i501 = load %struct.bz_stream*, %struct.bz_stream** %strm1280, align 8
  %total_in_hi321281 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i501, i32 0, i32 3
  %i502 = load i32, i32* %total_in_hi321281, align 8
  %inc1282 = add i32 %i502, 1
  store i32 %inc1282, i32* %total_in_hi321281, align 8
  br label %if.end1283

if.end1283:                                       ; preds = %if.then1279, %if.end1256
  br label %while.body1237

while.end1284:                                    ; preds = %if.then1241
  %cmp1285 = icmp slt i32 %and1247, 2
  br i1 %cmp1285, label %if.then1290, label %lor.lhs.false1287

lor.lhs.false1287:                                ; preds = %while.end1284
  %cmp1288 = icmp sgt i32 %and1247, 6
  br i1 %cmp1288, label %if.then1290, label %if.end1291

if.then1290:                                      ; preds = %lor.lhs.false1287, %while.end1284
  br label %save_state_and_return

if.end1291:                                       ; preds = %lor.lhs.false1287
  br label %sw.bb1292

sw.bb1292:                                        ; preds = %if.end1291, %if.end
  %nGroups.0 = phi i32 [ %i6, %if.end ], [ %and1247, %if.end1291 ]
  %alphaSize.1 = phi i32 [ %i5, %if.end ], [ %alphaSize.0, %if.end1291 ]
  %j.5 = phi i32 [ %i3, %if.end ], [ %j.4, %if.end1291 ]
  %i.8 = phi i32 [ %i2, %if.end ], [ %i.7, %if.end1291 ]
  %state1293 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 31, i32* %state1293, align 8
  br label %while.body1294

while.body1294:                                   ; preds = %if.end1340, %sw.bb1292
  %bsLive1295 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i503 = load i32, i32* %bsLive1295, align 4
  %cmp1296 = icmp sge i32 %i503, 15
  br i1 %cmp1296, label %if.then1298, label %if.end1307

if.then1298:                                      ; preds = %while.body1294
  %bsBuff1300 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i504 = load i32, i32* %bsBuff1300, align 8
  %bsLive1301 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i505 = load i32, i32* %bsLive1301, align 4
  %sub1302 = sub nsw i32 %i505, 15
  %shr1303 = lshr i32 %i504, %sub1302
  %and1304 = and i32 %shr1303, 32767
  %bsLive1305 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i506 = load i32, i32* %bsLive1305, align 4
  %sub1306 = sub nsw i32 %i506, 15
  store i32 %sub1306, i32* %bsLive1305, align 4
  br label %while.end1341

if.end1307:                                       ; preds = %while.body1294
  %strm1308 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i507 = load %struct.bz_stream*, %struct.bz_stream** %strm1308, align 8
  %avail_in1309 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i507, i32 0, i32 1
  %i508 = load i32, i32* %avail_in1309, align 8
  %cmp1310 = icmp eq i32 %i508, 0
  br i1 %cmp1310, label %if.then1312, label %if.end1313

if.then1312:                                      ; preds = %if.end1307
  br label %save_state_and_return

if.end1313:                                       ; preds = %if.end1307
  %bsBuff1314 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i509 = load i32, i32* %bsBuff1314, align 8
  %shl1315 = shl i32 %i509, 8
  %strm1316 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i510 = load %struct.bz_stream*, %struct.bz_stream** %strm1316, align 8
  %next_in1317 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i510, i32 0, i32 0
  %i511 = load i8*, i8** %next_in1317, align 8
  %i512 = load i8, i8* %i511, align 1
  %conv1318 = zext i8 %i512 to i32
  %or1319 = or i32 %shl1315, %conv1318
  %bsBuff1320 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or1319, i32* %bsBuff1320, align 8
  %bsLive1321 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i513 = load i32, i32* %bsLive1321, align 4
  %add1322 = add nsw i32 %i513, 8
  store i32 %add1322, i32* %bsLive1321, align 4
  %strm1323 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i514 = load %struct.bz_stream*, %struct.bz_stream** %strm1323, align 8
  %next_in1324 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i514, i32 0, i32 0
  %i515 = load i8*, i8** %next_in1324, align 8
  %incdec.ptr1325 = getelementptr inbounds i8, i8* %i515, i32 1
  store i8* %incdec.ptr1325, i8** %next_in1324, align 8
  %strm1326 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i516 = load %struct.bz_stream*, %struct.bz_stream** %strm1326, align 8
  %avail_in1327 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i516, i32 0, i32 1
  %i517 = load i32, i32* %avail_in1327, align 8
  %dec1328 = add i32 %i517, -1
  store i32 %dec1328, i32* %avail_in1327, align 8
  %strm1329 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i518 = load %struct.bz_stream*, %struct.bz_stream** %strm1329, align 8
  %total_in_lo321330 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i518, i32 0, i32 2
  %i519 = load i32, i32* %total_in_lo321330, align 4
  %inc1331 = add i32 %i519, 1
  store i32 %inc1331, i32* %total_in_lo321330, align 4
  %strm1332 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i520 = load %struct.bz_stream*, %struct.bz_stream** %strm1332, align 8
  %total_in_lo321333 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i520, i32 0, i32 2
  %i521 = load i32, i32* %total_in_lo321333, align 4
  %cmp1334 = icmp eq i32 %i521, 0
  br i1 %cmp1334, label %if.then1336, label %if.end1340

if.then1336:                                      ; preds = %if.end1313
  %strm1337 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i522 = load %struct.bz_stream*, %struct.bz_stream** %strm1337, align 8
  %total_in_hi321338 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i522, i32 0, i32 3
  %i523 = load i32, i32* %total_in_hi321338, align 8
  %inc1339 = add i32 %i523, 1
  store i32 %inc1339, i32* %total_in_hi321338, align 8
  br label %if.end1340

if.end1340:                                       ; preds = %if.then1336, %if.end1313
  br label %while.body1294

while.end1341:                                    ; preds = %if.then1298
  %cmp1342 = icmp slt i32 %and1304, 1
  br i1 %cmp1342, label %if.then1344, label %if.end1345

if.then1344:                                      ; preds = %while.end1341
  br label %save_state_and_return

if.end1345:                                       ; preds = %while.end1341
  br label %for.cond1346

for.cond1346:                                     ; preds = %for.inc1417, %if.end1345
  %nSelectors.0 = phi i32 [ %nSelectors.2, %for.inc1417 ], [ %and1304, %if.end1345 ]
  %nGroups.1 = phi i32 [ %nGroups.3, %for.inc1417 ], [ %nGroups.0, %if.end1345 ]
  %alphaSize.2 = phi i32 [ %alphaSize.4, %for.inc1417 ], [ %alphaSize.1, %if.end1345 ]
  %j.6 = phi i32 [ %j.8, %for.inc1417 ], [ %j.5, %if.end1345 ]
  %i.9 = phi i32 [ %inc1418, %for.inc1417 ], [ 0, %if.end1345 ]
  %cmp1347 = icmp slt i32 %i.9, %nSelectors.0
  br i1 %cmp1347, label %for.body1349, label %for.end1419

for.body1349:                                     ; preds = %for.cond1346
  br label %while.body1350

while.body1350:                                   ; preds = %if.end1412, %for.body1349
  %nSelectors.1 = phi i32 [ %nSelectors.0, %for.body1349 ], [ %nSelectors.2, %if.end1412 ]
  %nGroups.2 = phi i32 [ %nGroups.1, %for.body1349 ], [ %nGroups.3, %if.end1412 ]
  %alphaSize.3 = phi i32 [ %alphaSize.2, %for.body1349 ], [ %alphaSize.4, %if.end1412 ]
  %j.7 = phi i32 [ 0, %for.body1349 ], [ %inc1408, %if.end1412 ]
  %i.10 = phi i32 [ %i.9, %for.body1349 ], [ %i.11, %if.end1412 ]
  br label %sw.bb1351

sw.bb1351:                                        ; preds = %while.body1350, %if.end
  %nSelectors.2 = phi i32 [ %i7, %if.end ], [ %nSelectors.1, %while.body1350 ]
  %nGroups.3 = phi i32 [ %i6, %if.end ], [ %nGroups.2, %while.body1350 ]
  %alphaSize.4 = phi i32 [ %i5, %if.end ], [ %alphaSize.3, %while.body1350 ]
  %j.8 = phi i32 [ %i3, %if.end ], [ %j.7, %while.body1350 ]
  %i.11 = phi i32 [ %i2, %if.end ], [ %i.10, %while.body1350 ]
  %state1352 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 32, i32* %state1352, align 8
  br label %while.body1354

while.body1354:                                   ; preds = %if.end1401, %sw.bb1351
  %bsLive1355 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i524 = load i32, i32* %bsLive1355, align 4
  %cmp1356 = icmp sge i32 %i524, 1
  br i1 %cmp1356, label %if.then1358, label %if.end1368

if.then1358:                                      ; preds = %while.body1354
  %bsBuff1360 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i525 = load i32, i32* %bsBuff1360, align 8
  %bsLive1361 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i526 = load i32, i32* %bsLive1361, align 4
  %sub1362 = sub nsw i32 %i526, 1
  %shr1363 = lshr i32 %i525, %sub1362
  %and1364 = and i32 %shr1363, 1
  %bsLive1365 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i527 = load i32, i32* %bsLive1365, align 4
  %sub1366 = sub nsw i32 %i527, 1
  store i32 %sub1366, i32* %bsLive1365, align 4
  %conv1367 = trunc i32 %and1364 to i8
  br label %while.end1402

if.end1368:                                       ; preds = %while.body1354
  %strm1369 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i528 = load %struct.bz_stream*, %struct.bz_stream** %strm1369, align 8
  %avail_in1370 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i528, i32 0, i32 1
  %i529 = load i32, i32* %avail_in1370, align 8
  %cmp1371 = icmp eq i32 %i529, 0
  br i1 %cmp1371, label %if.then1373, label %if.end1374

if.then1373:                                      ; preds = %if.end1368
  br label %save_state_and_return

if.end1374:                                       ; preds = %if.end1368
  %bsBuff1375 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i530 = load i32, i32* %bsBuff1375, align 8
  %shl1376 = shl i32 %i530, 8
  %strm1377 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i531 = load %struct.bz_stream*, %struct.bz_stream** %strm1377, align 8
  %next_in1378 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i531, i32 0, i32 0
  %i532 = load i8*, i8** %next_in1378, align 8
  %i533 = load i8, i8* %i532, align 1
  %conv1379 = zext i8 %i533 to i32
  %or1380 = or i32 %shl1376, %conv1379
  %bsBuff1381 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or1380, i32* %bsBuff1381, align 8
  %bsLive1382 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i534 = load i32, i32* %bsLive1382, align 4
  %add1383 = add nsw i32 %i534, 8
  store i32 %add1383, i32* %bsLive1382, align 4
  %strm1384 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i535 = load %struct.bz_stream*, %struct.bz_stream** %strm1384, align 8
  %next_in1385 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i535, i32 0, i32 0
  %i536 = load i8*, i8** %next_in1385, align 8
  %incdec.ptr1386 = getelementptr inbounds i8, i8* %i536, i32 1
  store i8* %incdec.ptr1386, i8** %next_in1385, align 8
  %strm1387 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i537 = load %struct.bz_stream*, %struct.bz_stream** %strm1387, align 8
  %avail_in1388 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i537, i32 0, i32 1
  %i538 = load i32, i32* %avail_in1388, align 8
  %dec1389 = add i32 %i538, -1
  store i32 %dec1389, i32* %avail_in1388, align 8
  %strm1390 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i539 = load %struct.bz_stream*, %struct.bz_stream** %strm1390, align 8
  %total_in_lo321391 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i539, i32 0, i32 2
  %i540 = load i32, i32* %total_in_lo321391, align 4
  %inc1392 = add i32 %i540, 1
  store i32 %inc1392, i32* %total_in_lo321391, align 4
  %strm1393 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i541 = load %struct.bz_stream*, %struct.bz_stream** %strm1393, align 8
  %total_in_lo321394 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i541, i32 0, i32 2
  %i542 = load i32, i32* %total_in_lo321394, align 4
  %cmp1395 = icmp eq i32 %i542, 0
  br i1 %cmp1395, label %if.then1397, label %if.end1401

if.then1397:                                      ; preds = %if.end1374
  %strm1398 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i543 = load %struct.bz_stream*, %struct.bz_stream** %strm1398, align 8
  %total_in_hi321399 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i543, i32 0, i32 3
  %i544 = load i32, i32* %total_in_hi321399, align 8
  %inc1400 = add i32 %i544, 1
  store i32 %inc1400, i32* %total_in_hi321399, align 8
  br label %if.end1401

if.end1401:                                       ; preds = %if.then1397, %if.end1374
  br label %while.body1354

while.end1402:                                    ; preds = %if.then1358
  %conv1403 = zext i8 %conv1367 to i32
  %cmp1404 = icmp eq i32 %conv1403, 0
  br i1 %cmp1404, label %if.then1406, label %if.end1407

if.then1406:                                      ; preds = %while.end1402
  br label %while.end1413

if.end1407:                                       ; preds = %while.end1402
  %inc1408 = add nsw i32 %j.8, 1
  %cmp1409 = icmp sge i32 %inc1408, %nGroups.3
  br i1 %cmp1409, label %if.then1411, label %if.end1412

if.then1411:                                      ; preds = %if.end1407
  br label %save_state_and_return

if.end1412:                                       ; preds = %if.end1407
  br label %while.body1350

while.end1413:                                    ; preds = %if.then1406
  %conv1414 = trunc i32 %j.8 to i8
  %selectorMtf = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 34
  %idxprom1415 = sext i32 %i.11 to i64
  %arrayidx1416 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selectorMtf, i64 0, i64 %idxprom1415
  store i8 %conv1414, i8* %arrayidx1416, align 1
  br label %for.inc1417

for.inc1417:                                      ; preds = %while.end1413
  %inc1418 = add nsw i32 %i.11, 1
  br label %for.cond1346

for.end1419:                                      ; preds = %for.cond1346
  br label %for.cond1421

for.cond1421:                                     ; preds = %for.inc1428, %for.end1419
  %v1420.0 = phi i8 [ 0, %for.end1419 ], [ %inc1429, %for.inc1428 ]
  %conv1422 = zext i8 %v1420.0 to i32
  %cmp1423 = icmp slt i32 %conv1422, %nGroups.1
  br i1 %cmp1423, label %for.body1425, label %for.end1430

for.body1425:                                     ; preds = %for.cond1421
  %idxprom1426 = zext i8 %v1420.0 to i64
  %arrayidx1427 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1426
  store i8 %v1420.0, i8* %arrayidx1427, align 1
  br label %for.inc1428

for.inc1428:                                      ; preds = %for.body1425
  %inc1429 = add i8 %v1420.0, 1
  br label %for.cond1421

for.end1430:                                      ; preds = %for.cond1421
  br label %for.cond1431

for.cond1431:                                     ; preds = %for.inc1455, %for.end1430
  %i.12 = phi i32 [ 0, %for.end1430 ], [ %inc1456, %for.inc1455 ]
  %cmp1432 = icmp slt i32 %i.12, %nSelectors.0
  br i1 %cmp1432, label %for.body1434, label %for.end1457

for.body1434:                                     ; preds = %for.cond1431
  %selectorMtf1435 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 34
  %idxprom1436 = sext i32 %i.12 to i64
  %arrayidx1437 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selectorMtf1435, i64 0, i64 %idxprom1436
  %i545 = load i8, i8* %arrayidx1437, align 1
  %idxprom1438 = zext i8 %i545 to i64
  %arrayidx1439 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1438
  %i546 = load i8, i8* %arrayidx1439, align 1
  br label %while.cond

while.cond:                                       ; preds = %while.body1443, %for.body1434
  %v1420.1 = phi i8 [ %i545, %for.body1434 ], [ %dec1450, %while.body1443 ]
  %conv1440 = zext i8 %v1420.1 to i32
  %cmp1441 = icmp sgt i32 %conv1440, 0
  br i1 %cmp1441, label %while.body1443, label %while.end1451

while.body1443:                                   ; preds = %while.cond
  %conv1444 = zext i8 %v1420.1 to i32
  %sub1445 = sub nsw i32 %conv1444, 1
  %idxprom1446 = sext i32 %sub1445 to i64
  %arrayidx1447 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1446
  %i547 = load i8, i8* %arrayidx1447, align 1
  %idxprom1448 = zext i8 %v1420.1 to i64
  %arrayidx1449 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1448
  store i8 %i547, i8* %arrayidx1449, align 1
  %dec1450 = add i8 %v1420.1, -1
  br label %while.cond

while.end1451:                                    ; preds = %while.cond
  %arrayidx1452 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 0
  store i8 %i546, i8* %arrayidx1452, align 1
  %selector = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 33
  %idxprom1453 = sext i32 %i.12 to i64
  %arrayidx1454 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector, i64 0, i64 %idxprom1453
  store i8 %i546, i8* %arrayidx1454, align 1
  br label %for.inc1455

for.inc1455:                                      ; preds = %while.end1451
  %inc1456 = add nsw i32 %i.12, 1
  br label %for.cond1431

for.end1457:                                      ; preds = %for.cond1431
  br label %for.cond1458

for.cond1458:                                     ; preds = %for.inc1652, %for.end1457
  %curr.0 = phi i32 [ %curr.2, %for.inc1652 ], [ %i16, %for.end1457 ]
  %nSelectors.3 = phi i32 [ %nSelectors.5, %for.inc1652 ], [ %nSelectors.0, %for.end1457 ]
  %nGroups.4 = phi i32 [ %nGroups.6, %for.inc1652 ], [ %nGroups.1, %for.end1457 ]
  %alphaSize.5 = phi i32 [ %alphaSize.7, %for.inc1652 ], [ %alphaSize.2, %for.end1457 ]
  %t.0 = phi i32 [ %inc1653, %for.inc1652 ], [ 0, %for.end1457 ]
  %j.9 = phi i32 [ %j.11, %for.inc1652 ], [ %j.6, %for.end1457 ]
  %i.13 = phi i32 [ %i.15, %for.inc1652 ], [ %i.12, %for.end1457 ]
  %cmp1459 = icmp slt i32 %t.0, %nGroups.4
  br i1 %cmp1459, label %for.body1461, label %for.end1654

for.body1461:                                     ; preds = %for.cond1458
  br label %sw.bb1462

sw.bb1462:                                        ; preds = %for.body1461, %if.end
  %curr.1 = phi i32 [ %curr.0, %for.body1461 ], [ %i16, %if.end ]
  %nSelectors.4 = phi i32 [ %nSelectors.3, %for.body1461 ], [ %i7, %if.end ]
  %nGroups.5 = phi i32 [ %nGroups.4, %for.body1461 ], [ %i6, %if.end ]
  %alphaSize.6 = phi i32 [ %alphaSize.5, %for.body1461 ], [ %i5, %if.end ]
  %t.1 = phi i32 [ %t.0, %for.body1461 ], [ %i4, %if.end ]
  %j.10 = phi i32 [ %j.9, %for.body1461 ], [ %i3, %if.end ]
  %i.14 = phi i32 [ %i.13, %for.body1461 ], [ %i2, %if.end ]
  %state1463 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 33, i32* %state1463, align 8
  br label %while.body1465

while.body1465:                                   ; preds = %if.end1511, %sw.bb1462
  %bsLive1466 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i548 = load i32, i32* %bsLive1466, align 4
  %cmp1467 = icmp sge i32 %i548, 5
  br i1 %cmp1467, label %if.then1469, label %if.end1478

if.then1469:                                      ; preds = %while.body1465
  %bsBuff1471 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i549 = load i32, i32* %bsBuff1471, align 8
  %bsLive1472 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i550 = load i32, i32* %bsLive1472, align 4
  %sub1473 = sub nsw i32 %i550, 5
  %shr1474 = lshr i32 %i549, %sub1473
  %and1475 = and i32 %shr1474, 31
  %bsLive1476 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i551 = load i32, i32* %bsLive1476, align 4
  %sub1477 = sub nsw i32 %i551, 5
  store i32 %sub1477, i32* %bsLive1476, align 4
  br label %while.end1512

if.end1478:                                       ; preds = %while.body1465
  %strm1479 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i552 = load %struct.bz_stream*, %struct.bz_stream** %strm1479, align 8
  %avail_in1480 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i552, i32 0, i32 1
  %i553 = load i32, i32* %avail_in1480, align 8
  %cmp1481 = icmp eq i32 %i553, 0
  br i1 %cmp1481, label %if.then1483, label %if.end1484

if.then1483:                                      ; preds = %if.end1478
  br label %save_state_and_return

if.end1484:                                       ; preds = %if.end1478
  %bsBuff1485 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i554 = load i32, i32* %bsBuff1485, align 8
  %shl1486 = shl i32 %i554, 8
  %strm1487 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i555 = load %struct.bz_stream*, %struct.bz_stream** %strm1487, align 8
  %next_in1488 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i555, i32 0, i32 0
  %i556 = load i8*, i8** %next_in1488, align 8
  %i557 = load i8, i8* %i556, align 1
  %conv1489 = zext i8 %i557 to i32
  %or1490 = or i32 %shl1486, %conv1489
  %bsBuff1491 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or1490, i32* %bsBuff1491, align 8
  %bsLive1492 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i558 = load i32, i32* %bsLive1492, align 4
  %add1493 = add nsw i32 %i558, 8
  store i32 %add1493, i32* %bsLive1492, align 4
  %strm1494 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i559 = load %struct.bz_stream*, %struct.bz_stream** %strm1494, align 8
  %next_in1495 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i559, i32 0, i32 0
  %i560 = load i8*, i8** %next_in1495, align 8
  %incdec.ptr1496 = getelementptr inbounds i8, i8* %i560, i32 1
  store i8* %incdec.ptr1496, i8** %next_in1495, align 8
  %strm1497 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i561 = load %struct.bz_stream*, %struct.bz_stream** %strm1497, align 8
  %avail_in1498 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i561, i32 0, i32 1
  %i562 = load i32, i32* %avail_in1498, align 8
  %dec1499 = add i32 %i562, -1
  store i32 %dec1499, i32* %avail_in1498, align 8
  %strm1500 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i563 = load %struct.bz_stream*, %struct.bz_stream** %strm1500, align 8
  %total_in_lo321501 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i563, i32 0, i32 2
  %i564 = load i32, i32* %total_in_lo321501, align 4
  %inc1502 = add i32 %i564, 1
  store i32 %inc1502, i32* %total_in_lo321501, align 4
  %strm1503 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i565 = load %struct.bz_stream*, %struct.bz_stream** %strm1503, align 8
  %total_in_lo321504 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i565, i32 0, i32 2
  %i566 = load i32, i32* %total_in_lo321504, align 4
  %cmp1505 = icmp eq i32 %i566, 0
  br i1 %cmp1505, label %if.then1507, label %if.end1511

if.then1507:                                      ; preds = %if.end1484
  %strm1508 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i567 = load %struct.bz_stream*, %struct.bz_stream** %strm1508, align 8
  %total_in_hi321509 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i567, i32 0, i32 3
  %i568 = load i32, i32* %total_in_hi321509, align 8
  %inc1510 = add i32 %i568, 1
  store i32 %inc1510, i32* %total_in_hi321509, align 8
  br label %if.end1511

if.end1511:                                       ; preds = %if.then1507, %if.end1484
  br label %while.body1465

while.end1512:                                    ; preds = %if.then1469
  br label %for.cond1513

for.cond1513:                                     ; preds = %for.inc1649, %while.end1512
  %curr.2 = phi i32 [ %curr.4, %for.inc1649 ], [ %and1475, %while.end1512 ]
  %nSelectors.5 = phi i32 [ %nSelectors.7, %for.inc1649 ], [ %nSelectors.4, %while.end1512 ]
  %nGroups.6 = phi i32 [ %nGroups.8, %for.inc1649 ], [ %nGroups.5, %while.end1512 ]
  %alphaSize.7 = phi i32 [ %alphaSize.9, %for.inc1649 ], [ %alphaSize.6, %while.end1512 ]
  %t.2 = phi i32 [ %t.4, %for.inc1649 ], [ %t.1, %while.end1512 ]
  %j.11 = phi i32 [ %j.13, %for.inc1649 ], [ %j.10, %while.end1512 ]
  %i.15 = phi i32 [ %inc1650, %for.inc1649 ], [ 0, %while.end1512 ]
  %cmp1514 = icmp slt i32 %i.15, %alphaSize.7
  br i1 %cmp1514, label %for.body1516, label %for.end1651

for.body1516:                                     ; preds = %for.cond1513
  br label %while.body1518

while.body1518:                                   ; preds = %if.end1642, %for.body1516
  %curr.3 = phi i32 [ %curr.6, %if.end1642 ], [ %curr.2, %for.body1516 ]
  %nSelectors.6 = phi i32 [ %nSelectors.8, %if.end1642 ], [ %nSelectors.5, %for.body1516 ]
  %nGroups.7 = phi i32 [ %nGroups.9, %if.end1642 ], [ %nGroups.6, %for.body1516 ]
  %alphaSize.8 = phi i32 [ %alphaSize.10, %if.end1642 ], [ %alphaSize.7, %for.body1516 ]
  %t.3 = phi i32 [ %t.5, %if.end1642 ], [ %t.2, %for.body1516 ]
  %j.12 = phi i32 [ %j.14, %if.end1642 ], [ %j.11, %for.body1516 ]
  %i.16 = phi i32 [ %i.18, %if.end1642 ], [ %i.15, %for.body1516 ]
  %cmp1519 = icmp slt i32 %curr.3, 1
  br i1 %cmp1519, label %if.then1524, label %lor.lhs.false1521

lor.lhs.false1521:                                ; preds = %while.body1518
  %cmp1522 = icmp sgt i32 %curr.3, 20
  br i1 %cmp1522, label %if.then1524, label %if.end1525

if.then1524:                                      ; preds = %lor.lhs.false1521, %while.body1518
  br label %save_state_and_return

if.end1525:                                       ; preds = %lor.lhs.false1521
  br label %sw.bb1526

sw.bb1526:                                        ; preds = %if.end1525, %if.end
  %curr.4 = phi i32 [ %curr.3, %if.end1525 ], [ %i16, %if.end ]
  %nSelectors.7 = phi i32 [ %nSelectors.6, %if.end1525 ], [ %i7, %if.end ]
  %nGroups.8 = phi i32 [ %nGroups.7, %if.end1525 ], [ %i6, %if.end ]
  %alphaSize.9 = phi i32 [ %alphaSize.8, %if.end1525 ], [ %i5, %if.end ]
  %t.4 = phi i32 [ %t.3, %if.end1525 ], [ %i4, %if.end ]
  %j.13 = phi i32 [ %j.12, %if.end1525 ], [ %i3, %if.end ]
  %i.17 = phi i32 [ %i.16, %if.end1525 ], [ %i2, %if.end ]
  %state1527 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 34, i32* %state1527, align 8
  br label %while.body1529

while.body1529:                                   ; preds = %if.end1576, %sw.bb1526
  %bsLive1530 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i569 = load i32, i32* %bsLive1530, align 4
  %cmp1531 = icmp sge i32 %i569, 1
  br i1 %cmp1531, label %if.then1533, label %if.end1543

if.then1533:                                      ; preds = %while.body1529
  %bsBuff1535 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i570 = load i32, i32* %bsBuff1535, align 8
  %bsLive1536 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i571 = load i32, i32* %bsLive1536, align 4
  %sub1537 = sub nsw i32 %i571, 1
  %shr1538 = lshr i32 %i570, %sub1537
  %and1539 = and i32 %shr1538, 1
  %bsLive1540 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i572 = load i32, i32* %bsLive1540, align 4
  %sub1541 = sub nsw i32 %i572, 1
  store i32 %sub1541, i32* %bsLive1540, align 4
  %conv1542 = trunc i32 %and1539 to i8
  br label %while.end1577

if.end1543:                                       ; preds = %while.body1529
  %strm1544 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i573 = load %struct.bz_stream*, %struct.bz_stream** %strm1544, align 8
  %avail_in1545 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i573, i32 0, i32 1
  %i574 = load i32, i32* %avail_in1545, align 8
  %cmp1546 = icmp eq i32 %i574, 0
  br i1 %cmp1546, label %if.then1548, label %if.end1549

if.then1548:                                      ; preds = %if.end1543
  br label %save_state_and_return

if.end1549:                                       ; preds = %if.end1543
  %bsBuff1550 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i575 = load i32, i32* %bsBuff1550, align 8
  %shl1551 = shl i32 %i575, 8
  %strm1552 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i576 = load %struct.bz_stream*, %struct.bz_stream** %strm1552, align 8
  %next_in1553 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i576, i32 0, i32 0
  %i577 = load i8*, i8** %next_in1553, align 8
  %i578 = load i8, i8* %i577, align 1
  %conv1554 = zext i8 %i578 to i32
  %or1555 = or i32 %shl1551, %conv1554
  %bsBuff1556 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or1555, i32* %bsBuff1556, align 8
  %bsLive1557 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i579 = load i32, i32* %bsLive1557, align 4
  %add1558 = add nsw i32 %i579, 8
  store i32 %add1558, i32* %bsLive1557, align 4
  %strm1559 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i580 = load %struct.bz_stream*, %struct.bz_stream** %strm1559, align 8
  %next_in1560 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i580, i32 0, i32 0
  %i581 = load i8*, i8** %next_in1560, align 8
  %incdec.ptr1561 = getelementptr inbounds i8, i8* %i581, i32 1
  store i8* %incdec.ptr1561, i8** %next_in1560, align 8
  %strm1562 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i582 = load %struct.bz_stream*, %struct.bz_stream** %strm1562, align 8
  %avail_in1563 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i582, i32 0, i32 1
  %i583 = load i32, i32* %avail_in1563, align 8
  %dec1564 = add i32 %i583, -1
  store i32 %dec1564, i32* %avail_in1563, align 8
  %strm1565 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i584 = load %struct.bz_stream*, %struct.bz_stream** %strm1565, align 8
  %total_in_lo321566 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i584, i32 0, i32 2
  %i585 = load i32, i32* %total_in_lo321566, align 4
  %inc1567 = add i32 %i585, 1
  store i32 %inc1567, i32* %total_in_lo321566, align 4
  %strm1568 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i586 = load %struct.bz_stream*, %struct.bz_stream** %strm1568, align 8
  %total_in_lo321569 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i586, i32 0, i32 2
  %i587 = load i32, i32* %total_in_lo321569, align 4
  %cmp1570 = icmp eq i32 %i587, 0
  br i1 %cmp1570, label %if.then1572, label %if.end1576

if.then1572:                                      ; preds = %if.end1549
  %strm1573 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i588 = load %struct.bz_stream*, %struct.bz_stream** %strm1573, align 8
  %total_in_hi321574 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i588, i32 0, i32 3
  %i589 = load i32, i32* %total_in_hi321574, align 8
  %inc1575 = add i32 %i589, 1
  store i32 %inc1575, i32* %total_in_hi321574, align 8
  br label %if.end1576

if.end1576:                                       ; preds = %if.then1572, %if.end1549
  br label %while.body1529

while.end1577:                                    ; preds = %if.then1533
  %conv1578 = zext i8 %conv1542 to i32
  %cmp1579 = icmp eq i32 %conv1578, 0
  br i1 %cmp1579, label %if.then1581, label %if.end1582

if.then1581:                                      ; preds = %while.end1577
  br label %while.end1643

if.end1582:                                       ; preds = %while.end1577
  br label %sw.bb1583

sw.bb1583:                                        ; preds = %if.end1582, %if.end
  %curr.5 = phi i32 [ %i16, %if.end ], [ %curr.4, %if.end1582 ]
  %nSelectors.8 = phi i32 [ %i7, %if.end ], [ %nSelectors.7, %if.end1582 ]
  %nGroups.9 = phi i32 [ %i6, %if.end ], [ %nGroups.8, %if.end1582 ]
  %alphaSize.10 = phi i32 [ %i5, %if.end ], [ %alphaSize.9, %if.end1582 ]
  %t.5 = phi i32 [ %i4, %if.end ], [ %t.4, %if.end1582 ]
  %j.14 = phi i32 [ %i3, %if.end ], [ %j.13, %if.end1582 ]
  %i.18 = phi i32 [ %i2, %if.end ], [ %i.17, %if.end1582 ]
  %state1584 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 35, i32* %state1584, align 8
  br label %while.body1586

while.body1586:                                   ; preds = %if.end1633, %sw.bb1583
  %bsLive1587 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i590 = load i32, i32* %bsLive1587, align 4
  %cmp1588 = icmp sge i32 %i590, 1
  br i1 %cmp1588, label %if.then1590, label %if.end1600

if.then1590:                                      ; preds = %while.body1586
  %bsBuff1592 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i591 = load i32, i32* %bsBuff1592, align 8
  %bsLive1593 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i592 = load i32, i32* %bsLive1593, align 4
  %sub1594 = sub nsw i32 %i592, 1
  %shr1595 = lshr i32 %i591, %sub1594
  %and1596 = and i32 %shr1595, 1
  %bsLive1597 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i593 = load i32, i32* %bsLive1597, align 4
  %sub1598 = sub nsw i32 %i593, 1
  store i32 %sub1598, i32* %bsLive1597, align 4
  %conv1599 = trunc i32 %and1596 to i8
  br label %while.end1634

if.end1600:                                       ; preds = %while.body1586
  %strm1601 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i594 = load %struct.bz_stream*, %struct.bz_stream** %strm1601, align 8
  %avail_in1602 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i594, i32 0, i32 1
  %i595 = load i32, i32* %avail_in1602, align 8
  %cmp1603 = icmp eq i32 %i595, 0
  br i1 %cmp1603, label %if.then1605, label %if.end1606

if.then1605:                                      ; preds = %if.end1600
  br label %save_state_and_return

if.end1606:                                       ; preds = %if.end1600
  %bsBuff1607 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i596 = load i32, i32* %bsBuff1607, align 8
  %shl1608 = shl i32 %i596, 8
  %strm1609 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i597 = load %struct.bz_stream*, %struct.bz_stream** %strm1609, align 8
  %next_in1610 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i597, i32 0, i32 0
  %i598 = load i8*, i8** %next_in1610, align 8
  %i599 = load i8, i8* %i598, align 1
  %conv1611 = zext i8 %i599 to i32
  %or1612 = or i32 %shl1608, %conv1611
  %bsBuff1613 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or1612, i32* %bsBuff1613, align 8
  %bsLive1614 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i600 = load i32, i32* %bsLive1614, align 4
  %add1615 = add nsw i32 %i600, 8
  store i32 %add1615, i32* %bsLive1614, align 4
  %strm1616 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i601 = load %struct.bz_stream*, %struct.bz_stream** %strm1616, align 8
  %next_in1617 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i601, i32 0, i32 0
  %i602 = load i8*, i8** %next_in1617, align 8
  %incdec.ptr1618 = getelementptr inbounds i8, i8* %i602, i32 1
  store i8* %incdec.ptr1618, i8** %next_in1617, align 8
  %strm1619 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i603 = load %struct.bz_stream*, %struct.bz_stream** %strm1619, align 8
  %avail_in1620 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i603, i32 0, i32 1
  %i604 = load i32, i32* %avail_in1620, align 8
  %dec1621 = add i32 %i604, -1
  store i32 %dec1621, i32* %avail_in1620, align 8
  %strm1622 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i605 = load %struct.bz_stream*, %struct.bz_stream** %strm1622, align 8
  %total_in_lo321623 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i605, i32 0, i32 2
  %i606 = load i32, i32* %total_in_lo321623, align 4
  %inc1624 = add i32 %i606, 1
  store i32 %inc1624, i32* %total_in_lo321623, align 4
  %strm1625 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i607 = load %struct.bz_stream*, %struct.bz_stream** %strm1625, align 8
  %total_in_lo321626 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i607, i32 0, i32 2
  %i608 = load i32, i32* %total_in_lo321626, align 4
  %cmp1627 = icmp eq i32 %i608, 0
  br i1 %cmp1627, label %if.then1629, label %if.end1633

if.then1629:                                      ; preds = %if.end1606
  %strm1630 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i609 = load %struct.bz_stream*, %struct.bz_stream** %strm1630, align 8
  %total_in_hi321631 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i609, i32 0, i32 3
  %i610 = load i32, i32* %total_in_hi321631, align 8
  %inc1632 = add i32 %i610, 1
  store i32 %inc1632, i32* %total_in_hi321631, align 8
  br label %if.end1633

if.end1633:                                       ; preds = %if.then1629, %if.end1606
  br label %while.body1586

while.end1634:                                    ; preds = %if.then1590
  %conv1635 = zext i8 %conv1599 to i32
  %cmp1636 = icmp eq i32 %conv1635, 0
  br i1 %cmp1636, label %if.then1638, label %if.else1640

if.then1638:                                      ; preds = %while.end1634
  %inc1639 = add nsw i32 %curr.5, 1
  br label %if.end1642

if.else1640:                                      ; preds = %while.end1634
  %dec1641 = add nsw i32 %curr.5, -1
  br label %if.end1642

if.end1642:                                       ; preds = %if.else1640, %if.then1638
  %curr.6 = phi i32 [ %inc1639, %if.then1638 ], [ %dec1641, %if.else1640 ]
  br label %while.body1518

while.end1643:                                    ; preds = %if.then1581
  %conv1644 = trunc i32 %curr.4 to i8
  %len = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 35
  %idxprom1645 = sext i32 %t.4 to i64
  %arrayidx1646 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len, i64 0, i64 %idxprom1645
  %idxprom1647 = sext i32 %i.17 to i64
  %arrayidx1648 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1646, i64 0, i64 %idxprom1647
  store i8 %conv1644, i8* %arrayidx1648, align 1
  br label %for.inc1649

for.inc1649:                                      ; preds = %while.end1643
  %inc1650 = add nsw i32 %i.17, 1
  br label %for.cond1513

for.end1651:                                      ; preds = %for.cond1513
  br label %for.inc1652

for.inc1652:                                      ; preds = %for.end1651
  %inc1653 = add nsw i32 %t.2, 1
  br label %for.cond1458

for.end1654:                                      ; preds = %for.cond1458
  br label %for.cond1655

for.cond1655:                                     ; preds = %for.inc1713, %for.end1654
  %t.6 = phi i32 [ 0, %for.end1654 ], [ %inc1714, %for.inc1713 ]
  %cmp1656 = icmp slt i32 %t.6, %nGroups.4
  br i1 %cmp1656, label %for.body1658, label %for.end1715

for.body1658:                                     ; preds = %for.cond1655
  br label %for.cond1659

for.cond1659:                                     ; preds = %for.inc1695, %for.body1658
  %i.19 = phi i32 [ 0, %for.body1658 ], [ %inc1696, %for.inc1695 ]
  %maxLen.0 = phi i32 [ 0, %for.body1658 ], [ %maxLen.1, %for.inc1695 ]
  %minLen.0 = phi i32 [ 32, %for.body1658 ], [ %minLen.1, %for.inc1695 ]
  %cmp1660 = icmp slt i32 %i.19, %alphaSize.5
  br i1 %cmp1660, label %for.body1662, label %for.end1697

for.body1662:                                     ; preds = %for.cond1659
  %len1663 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 35
  %idxprom1664 = sext i32 %t.6 to i64
  %arrayidx1665 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1663, i64 0, i64 %idxprom1664
  %idxprom1666 = sext i32 %i.19 to i64
  %arrayidx1667 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1665, i64 0, i64 %idxprom1666
  %i611 = load i8, i8* %arrayidx1667, align 1
  %conv1668 = zext i8 %i611 to i32
  %cmp1669 = icmp sgt i32 %conv1668, %maxLen.0
  br i1 %cmp1669, label %if.then1671, label %if.end1678

if.then1671:                                      ; preds = %for.body1662
  %len1672 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 35
  %idxprom1673 = sext i32 %t.6 to i64
  %arrayidx1674 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1672, i64 0, i64 %idxprom1673
  %idxprom1675 = sext i32 %i.19 to i64
  %arrayidx1676 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1674, i64 0, i64 %idxprom1675
  %i612 = load i8, i8* %arrayidx1676, align 1
  %conv1677 = zext i8 %i612 to i32
  br label %if.end1678

if.end1678:                                       ; preds = %if.then1671, %for.body1662
  %maxLen.1 = phi i32 [ %conv1677, %if.then1671 ], [ %maxLen.0, %for.body1662 ]
  %len1679 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 35
  %idxprom1680 = sext i32 %t.6 to i64
  %arrayidx1681 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1679, i64 0, i64 %idxprom1680
  %idxprom1682 = sext i32 %i.19 to i64
  %arrayidx1683 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1681, i64 0, i64 %idxprom1682
  %i613 = load i8, i8* %arrayidx1683, align 1
  %conv1684 = zext i8 %i613 to i32
  %cmp1685 = icmp slt i32 %conv1684, %minLen.0
  br i1 %cmp1685, label %if.then1687, label %if.end1694

if.then1687:                                      ; preds = %if.end1678
  %len1688 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 35
  %idxprom1689 = sext i32 %t.6 to i64
  %arrayidx1690 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1688, i64 0, i64 %idxprom1689
  %idxprom1691 = sext i32 %i.19 to i64
  %arrayidx1692 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1690, i64 0, i64 %idxprom1691
  %i614 = load i8, i8* %arrayidx1692, align 1
  %conv1693 = zext i8 %i614 to i32
  br label %if.end1694

if.end1694:                                       ; preds = %if.then1687, %if.end1678
  %minLen.1 = phi i32 [ %conv1693, %if.then1687 ], [ %minLen.0, %if.end1678 ]
  br label %for.inc1695

for.inc1695:                                      ; preds = %if.end1694
  %inc1696 = add nsw i32 %i.19, 1
  br label %for.cond1659

for.end1697:                                      ; preds = %for.cond1659
  %limit = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 36
  %idxprom1698 = sext i32 %t.6 to i64
  %arrayidx1699 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %limit, i64 0, i64 %idxprom1698
  %arrayidx1700 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1699, i64 0, i64 0
  %base = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 37
  %idxprom1701 = sext i32 %t.6 to i64
  %arrayidx1702 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %base, i64 0, i64 %idxprom1701
  %arrayidx1703 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1702, i64 0, i64 0
  %perm = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 38
  %idxprom1704 = sext i32 %t.6 to i64
  %arrayidx1705 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %perm, i64 0, i64 %idxprom1704
  %arrayidx1706 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1705, i64 0, i64 0
  %len1707 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 35
  %idxprom1708 = sext i32 %t.6 to i64
  %arrayidx1709 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %len1707, i64 0, i64 %idxprom1708
  %arrayidx1710 = getelementptr inbounds [258 x i8], [258 x i8]* %arrayidx1709, i64 0, i64 0
  call void @BZ2_hbCreateDecodeTables(i32* %arrayidx1700, i32* %arrayidx1703, i32* %arrayidx1706, i8* %arrayidx1710, i32 %minLen.0, i32 %maxLen.0, i32 %alphaSize.5)
  %minLens = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 39
  %idxprom1711 = sext i32 %t.6 to i64
  %arrayidx1712 = getelementptr inbounds [6 x i32], [6 x i32]* %minLens, i64 0, i64 %idxprom1711
  store i32 %minLen.0, i32* %arrayidx1712, align 4
  br label %for.inc1713

for.inc1713:                                      ; preds = %for.end1697
  %inc1714 = add nsw i32 %t.6, 1
  br label %for.cond1655

for.end1715:                                      ; preds = %for.cond1655
  %nInUse1716 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 27
  %i615 = load i32, i32* %nInUse1716, align 8
  %add1717 = add nsw i32 %i615, 1
  %blockSize100k1718 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 9
  %i616 = load i32, i32* %blockSize100k1718, align 8
  %mul1719 = mul nsw i32 100000, %i616
  br label %for.cond1720

for.cond1720:                                     ; preds = %for.inc1726, %for.end1715
  %i.20 = phi i32 [ 0, %for.end1715 ], [ %inc1727, %for.inc1726 ]
  %cmp1721 = icmp sle i32 %i.20, 255
  br i1 %cmp1721, label %for.body1723, label %for.end1728

for.body1723:                                     ; preds = %for.cond1720
  %unzftab = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 16
  %idxprom1724 = sext i32 %i.20 to i64
  %arrayidx1725 = getelementptr inbounds [256 x i32], [256 x i32]* %unzftab, i64 0, i64 %idxprom1724
  store i32 0, i32* %arrayidx1725, align 4
  br label %for.inc1726

for.inc1726:                                      ; preds = %for.body1723
  %inc1727 = add nsw i32 %i.20, 1
  br label %for.cond1720

for.end1728:                                      ; preds = %for.cond1720
  br label %for.cond1729

for.cond1729:                                     ; preds = %for.inc1749, %for.end1728
  %ii.0 = phi i32 [ 15, %for.end1728 ], [ %dec1750, %for.inc1749 ]
  %kk.0 = phi i32 [ 4095, %for.end1728 ], [ %kk.1, %for.inc1749 ]
  %cmp1730 = icmp sge i32 %ii.0, 0
  br i1 %cmp1730, label %for.body1732, label %for.end1751

for.body1732:                                     ; preds = %for.cond1729
  br label %for.cond1733

for.cond1733:                                     ; preds = %for.inc1743, %for.body1732
  %jj.0 = phi i32 [ 15, %for.body1732 ], [ %dec1744, %for.inc1743 ]
  %kk.1 = phi i32 [ %kk.0, %for.body1732 ], [ %dec1742, %for.inc1743 ]
  %cmp1734 = icmp sge i32 %jj.0, 0
  br i1 %cmp1734, label %for.body1736, label %for.end1745

for.body1736:                                     ; preds = %for.cond1733
  %mul1737 = mul nsw i32 %ii.0, 16
  %add1738 = add nsw i32 %mul1737, %jj.0
  %conv1739 = trunc i32 %add1738 to i8
  %mtfa = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %idxprom1740 = sext i32 %kk.1 to i64
  %arrayidx1741 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa, i64 0, i64 %idxprom1740
  store i8 %conv1739, i8* %arrayidx1741, align 1
  %dec1742 = add nsw i32 %kk.1, -1
  br label %for.inc1743

for.inc1743:                                      ; preds = %for.body1736
  %dec1744 = add nsw i32 %jj.0, -1
  br label %for.cond1733

for.end1745:                                      ; preds = %for.cond1733
  %add1746 = add nsw i32 %kk.1, 1
  %mtfbase = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %idxprom1747 = sext i32 %ii.0 to i64
  %arrayidx1748 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase, i64 0, i64 %idxprom1747
  store i32 %add1746, i32* %arrayidx1748, align 4
  br label %for.inc1749

for.inc1749:                                      ; preds = %for.end1745
  %dec1750 = add nsw i32 %ii.0, -1
  br label %for.cond1729

for.end1751:                                      ; preds = %for.cond1729
  %cmp1752 = icmp eq i32 0, 0
  br i1 %cmp1752, label %if.then1754, label %if.end1779

if.then1754:                                      ; preds = %for.end1751
  %inc1755 = add nsw i32 -1, 1
  %cmp1756 = icmp sge i32 %inc1755, %nSelectors.3
  br i1 %cmp1756, label %if.then1758, label %if.end1759

if.then1758:                                      ; preds = %if.then1754
  br label %save_state_and_return

if.end1759:                                       ; preds = %if.then1754
  %selector1760 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 33
  %idxprom1761 = sext i32 %inc1755 to i64
  %arrayidx1762 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector1760, i64 0, i64 %idxprom1761
  %i617 = load i8, i8* %arrayidx1762, align 1
  %conv1763 = zext i8 %i617 to i32
  %minLens1764 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 39
  %idxprom1765 = sext i32 %conv1763 to i64
  %arrayidx1766 = getelementptr inbounds [6 x i32], [6 x i32]* %minLens1764, i64 0, i64 %idxprom1765
  %i618 = load i32, i32* %arrayidx1766, align 4
  %limit1767 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 36
  %idxprom1768 = sext i32 %conv1763 to i64
  %arrayidx1769 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %limit1767, i64 0, i64 %idxprom1768
  %arrayidx1770 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1769, i64 0, i64 0
  %perm1771 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 38
  %idxprom1772 = sext i32 %conv1763 to i64
  %arrayidx1773 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %perm1771, i64 0, i64 %idxprom1772
  %arrayidx1774 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1773, i64 0, i64 0
  %base1775 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 37
  %idxprom1776 = sext i32 %conv1763 to i64
  %arrayidx1777 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %base1775, i64 0, i64 %idxprom1776
  %arrayidx1778 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1777, i64 0, i64 0
  br label %if.end1779

if.end1779:                                       ; preds = %if.end1759, %for.end1751
  %gPerm.0 = phi i32* [ %arrayidx1774, %if.end1759 ], [ %i25, %for.end1751 ]
  %gBase.0 = phi i32* [ %arrayidx1778, %if.end1759 ], [ %i24, %for.end1751 ]
  %gLimit.0 = phi i32* [ %arrayidx1770, %if.end1759 ], [ %i23, %for.end1751 ]
  %gMinlen.0 = phi i32 [ %i618, %if.end1759 ], [ %i22, %for.end1751 ]
  %gSel.0 = phi i32 [ %conv1763, %if.end1759 ], [ %i21, %for.end1751 ]
  %groupPos.0 = phi i32 [ 50, %if.end1759 ], [ 0, %for.end1751 ]
  %groupNo.0 = phi i32 [ %inc1755, %if.end1759 ], [ -1, %for.end1751 ]
  %dec1780 = add nsw i32 %groupPos.0, -1
  br label %sw.bb1781

sw.bb1781:                                        ; preds = %if.end1779, %if.end
  %gPerm.1 = phi i32* [ %i25, %if.end ], [ %gPerm.0, %if.end1779 ]
  %gBase.1 = phi i32* [ %i24, %if.end ], [ %gBase.0, %if.end1779 ]
  %gLimit.1 = phi i32* [ %i23, %if.end ], [ %gLimit.0, %if.end1779 ]
  %gMinlen.1 = phi i32 [ %i22, %if.end ], [ %gMinlen.0, %if.end1779 ]
  %gSel.1 = phi i32 [ %i21, %if.end ], [ %gSel.0, %if.end1779 ]
  %zn.0 = phi i32 [ %i18, %if.end ], [ %gMinlen.0, %if.end1779 ]
  %curr.7 = phi i32 [ %i16, %if.end ], [ %curr.0, %if.end1779 ]
  %nblock.0 = phi i32 [ %i13, %if.end ], [ 0, %if.end1779 ]
  %nblockMAX.0 = phi i32 [ %i12, %if.end ], [ %mul1719, %if.end1779 ]
  %groupPos.1 = phi i32 [ %i10, %if.end ], [ %dec1780, %if.end1779 ]
  %groupNo.1 = phi i32 [ %i9, %if.end ], [ %groupNo.0, %if.end1779 ]
  %EOB.0 = phi i32 [ %i8, %if.end ], [ %add1717, %if.end1779 ]
  %nSelectors.9 = phi i32 [ %i7, %if.end ], [ %nSelectors.3, %if.end1779 ]
  %nGroups.10 = phi i32 [ %i6, %if.end ], [ %nGroups.4, %if.end1779 ]
  %alphaSize.11 = phi i32 [ %i5, %if.end ], [ %alphaSize.5, %if.end1779 ]
  %t.7 = phi i32 [ %i4, %if.end ], [ %t.6, %if.end1779 ]
  %j.15 = phi i32 [ %i3, %if.end ], [ %j.9, %if.end1779 ]
  %i.21 = phi i32 [ %i2, %if.end ], [ %i.20, %if.end1779 ]
  %state1782 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 36, i32* %state1782, align 8
  br label %while.body1784

while.body1784:                                   ; preds = %if.end1832, %sw.bb1781
  %bsLive1785 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i619 = load i32, i32* %bsLive1785, align 4
  %cmp1786 = icmp sge i32 %i619, %zn.0
  br i1 %cmp1786, label %if.then1788, label %if.end1799

if.then1788:                                      ; preds = %while.body1784
  %bsBuff1790 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i620 = load i32, i32* %bsBuff1790, align 8
  %bsLive1791 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i621 = load i32, i32* %bsLive1791, align 4
  %sub1792 = sub nsw i32 %i621, %zn.0
  %shr1793 = lshr i32 %i620, %sub1792
  %shl1794 = shl i32 1, %zn.0
  %sub1795 = sub nsw i32 %shl1794, 1
  %and1796 = and i32 %shr1793, %sub1795
  %bsLive1797 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i622 = load i32, i32* %bsLive1797, align 4
  %sub1798 = sub nsw i32 %i622, %zn.0
  store i32 %sub1798, i32* %bsLive1797, align 4
  br label %while.end1833

if.end1799:                                       ; preds = %while.body1784
  %strm1800 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i623 = load %struct.bz_stream*, %struct.bz_stream** %strm1800, align 8
  %avail_in1801 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i623, i32 0, i32 1
  %i624 = load i32, i32* %avail_in1801, align 8
  %cmp1802 = icmp eq i32 %i624, 0
  br i1 %cmp1802, label %if.then1804, label %if.end1805

if.then1804:                                      ; preds = %if.end1799
  br label %save_state_and_return

if.end1805:                                       ; preds = %if.end1799
  %bsBuff1806 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i625 = load i32, i32* %bsBuff1806, align 8
  %shl1807 = shl i32 %i625, 8
  %strm1808 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i626 = load %struct.bz_stream*, %struct.bz_stream** %strm1808, align 8
  %next_in1809 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i626, i32 0, i32 0
  %i627 = load i8*, i8** %next_in1809, align 8
  %i628 = load i8, i8* %i627, align 1
  %conv1810 = zext i8 %i628 to i32
  %or1811 = or i32 %shl1807, %conv1810
  %bsBuff1812 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or1811, i32* %bsBuff1812, align 8
  %bsLive1813 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i629 = load i32, i32* %bsLive1813, align 4
  %add1814 = add nsw i32 %i629, 8
  store i32 %add1814, i32* %bsLive1813, align 4
  %strm1815 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i630 = load %struct.bz_stream*, %struct.bz_stream** %strm1815, align 8
  %next_in1816 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i630, i32 0, i32 0
  %i631 = load i8*, i8** %next_in1816, align 8
  %incdec.ptr1817 = getelementptr inbounds i8, i8* %i631, i32 1
  store i8* %incdec.ptr1817, i8** %next_in1816, align 8
  %strm1818 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i632 = load %struct.bz_stream*, %struct.bz_stream** %strm1818, align 8
  %avail_in1819 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i632, i32 0, i32 1
  %i633 = load i32, i32* %avail_in1819, align 8
  %dec1820 = add i32 %i633, -1
  store i32 %dec1820, i32* %avail_in1819, align 8
  %strm1821 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i634 = load %struct.bz_stream*, %struct.bz_stream** %strm1821, align 8
  %total_in_lo321822 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i634, i32 0, i32 2
  %i635 = load i32, i32* %total_in_lo321822, align 4
  %inc1823 = add i32 %i635, 1
  store i32 %inc1823, i32* %total_in_lo321822, align 4
  %strm1824 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i636 = load %struct.bz_stream*, %struct.bz_stream** %strm1824, align 8
  %total_in_lo321825 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i636, i32 0, i32 2
  %i637 = load i32, i32* %total_in_lo321825, align 4
  %cmp1826 = icmp eq i32 %i637, 0
  br i1 %cmp1826, label %if.then1828, label %if.end1832

if.then1828:                                      ; preds = %if.end1805
  %strm1829 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i638 = load %struct.bz_stream*, %struct.bz_stream** %strm1829, align 8
  %total_in_hi321830 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i638, i32 0, i32 3
  %i639 = load i32, i32* %total_in_hi321830, align 8
  %inc1831 = add i32 %i639, 1
  store i32 %inc1831, i32* %total_in_hi321830, align 8
  br label %if.end1832

if.end1832:                                       ; preds = %if.then1828, %if.end1805
  br label %while.body1784

while.end1833:                                    ; preds = %if.then1788
  br label %while.body1835

while.body1835:                                   ; preds = %while.end1897, %while.end1833
  %gPerm.2 = phi i32* [ %gPerm.3, %while.end1897 ], [ %gPerm.1, %while.end1833 ]
  %gBase.2 = phi i32* [ %gBase.3, %while.end1897 ], [ %gBase.1, %while.end1833 ]
  %gLimit.2 = phi i32* [ %gLimit.3, %while.end1897 ], [ %gLimit.1, %while.end1833 ]
  %gMinlen.2 = phi i32 [ %gMinlen.3, %while.end1897 ], [ %gMinlen.1, %while.end1833 ]
  %gSel.2 = phi i32 [ %gSel.3, %while.end1897 ], [ %gSel.1, %while.end1833 ]
  %zj.0 = phi i32 [ %and1860, %while.end1897 ], [ %i20, %while.end1833 ]
  %zvec.0 = phi i32 [ %or1899, %while.end1897 ], [ %and1796, %while.end1833 ]
  %zn.1 = phi i32 [ %zn.2, %while.end1897 ], [ %zn.0, %while.end1833 ]
  %curr.8 = phi i32 [ %curr.9, %while.end1897 ], [ %curr.7, %while.end1833 ]
  %nblock.1 = phi i32 [ %nblock.2, %while.end1897 ], [ %nblock.0, %while.end1833 ]
  %nblockMAX.1 = phi i32 [ %nblockMAX.2, %while.end1897 ], [ %nblockMAX.0, %while.end1833 ]
  %groupPos.2 = phi i32 [ %groupPos.3, %while.end1897 ], [ %groupPos.1, %while.end1833 ]
  %groupNo.2 = phi i32 [ %groupNo.3, %while.end1897 ], [ %groupNo.1, %while.end1833 ]
  %EOB.1 = phi i32 [ %EOB.2, %while.end1897 ], [ %EOB.0, %while.end1833 ]
  %nSelectors.10 = phi i32 [ %nSelectors.11, %while.end1897 ], [ %nSelectors.9, %while.end1833 ]
  %nGroups.11 = phi i32 [ %nGroups.12, %while.end1897 ], [ %nGroups.10, %while.end1833 ]
  %alphaSize.12 = phi i32 [ %alphaSize.13, %while.end1897 ], [ %alphaSize.11, %while.end1833 ]
  %t.8 = phi i32 [ %t.9, %while.end1897 ], [ %t.7, %while.end1833 ]
  %j.16 = phi i32 [ %j.17, %while.end1897 ], [ %j.15, %while.end1833 ]
  %i.22 = phi i32 [ %i.23, %while.end1897 ], [ %i.21, %while.end1833 ]
  %cmp1836 = icmp sgt i32 %zn.1, 20
  br i1 %cmp1836, label %if.then1838, label %if.end1839

if.then1838:                                      ; preds = %while.body1835
  br label %save_state_and_return

if.end1839:                                       ; preds = %while.body1835
  %idxprom1840 = sext i32 %zn.1 to i64
  %arrayidx1841 = getelementptr inbounds i32, i32* %gLimit.2, i64 %idxprom1840
  %i640 = load i32, i32* %arrayidx1841, align 4
  %cmp1842 = icmp sle i32 %zvec.0, %i640
  br i1 %cmp1842, label %if.then1844, label %if.end1845

if.then1844:                                      ; preds = %if.end1839
  br label %while.end1900

if.end1845:                                       ; preds = %if.end1839
  %inc1846 = add nsw i32 %zn.1, 1
  br label %sw.bb1847

sw.bb1847:                                        ; preds = %if.end1845, %if.end
  %gPerm.3 = phi i32* [ %i25, %if.end ], [ %gPerm.2, %if.end1845 ]
  %gBase.3 = phi i32* [ %i24, %if.end ], [ %gBase.2, %if.end1845 ]
  %gLimit.3 = phi i32* [ %i23, %if.end ], [ %gLimit.2, %if.end1845 ]
  %gMinlen.3 = phi i32 [ %i22, %if.end ], [ %gMinlen.2, %if.end1845 ]
  %gSel.3 = phi i32 [ %i21, %if.end ], [ %gSel.2, %if.end1845 ]
  %zj.1 = phi i32 [ %i20, %if.end ], [ %zj.0, %if.end1845 ]
  %zvec.1 = phi i32 [ %i19, %if.end ], [ %zvec.0, %if.end1845 ]
  %zn.2 = phi i32 [ %i18, %if.end ], [ %inc1846, %if.end1845 ]
  %curr.9 = phi i32 [ %i16, %if.end ], [ %curr.8, %if.end1845 ]
  %nblock.2 = phi i32 [ %i13, %if.end ], [ %nblock.1, %if.end1845 ]
  %nblockMAX.2 = phi i32 [ %i12, %if.end ], [ %nblockMAX.1, %if.end1845 ]
  %groupPos.3 = phi i32 [ %i10, %if.end ], [ %groupPos.2, %if.end1845 ]
  %groupNo.3 = phi i32 [ %i9, %if.end ], [ %groupNo.2, %if.end1845 ]
  %EOB.2 = phi i32 [ %i8, %if.end ], [ %EOB.1, %if.end1845 ]
  %nSelectors.11 = phi i32 [ %i7, %if.end ], [ %nSelectors.10, %if.end1845 ]
  %nGroups.12 = phi i32 [ %i6, %if.end ], [ %nGroups.11, %if.end1845 ]
  %alphaSize.13 = phi i32 [ %i5, %if.end ], [ %alphaSize.12, %if.end1845 ]
  %t.9 = phi i32 [ %i4, %if.end ], [ %t.8, %if.end1845 ]
  %j.17 = phi i32 [ %i3, %if.end ], [ %j.16, %if.end1845 ]
  %i.23 = phi i32 [ %i2, %if.end ], [ %i.22, %if.end1845 ]
  %state1848 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 37, i32* %state1848, align 8
  br label %while.body1850

while.body1850:                                   ; preds = %if.end1896, %sw.bb1847
  %bsLive1851 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i641 = load i32, i32* %bsLive1851, align 4
  %cmp1852 = icmp sge i32 %i641, 1
  br i1 %cmp1852, label %if.then1854, label %if.end1863

if.then1854:                                      ; preds = %while.body1850
  %bsBuff1856 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i642 = load i32, i32* %bsBuff1856, align 8
  %bsLive1857 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i643 = load i32, i32* %bsLive1857, align 4
  %sub1858 = sub nsw i32 %i643, 1
  %shr1859 = lshr i32 %i642, %sub1858
  %and1860 = and i32 %shr1859, 1
  %bsLive1861 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i644 = load i32, i32* %bsLive1861, align 4
  %sub1862 = sub nsw i32 %i644, 1
  store i32 %sub1862, i32* %bsLive1861, align 4
  br label %while.end1897

if.end1863:                                       ; preds = %while.body1850
  %strm1864 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i645 = load %struct.bz_stream*, %struct.bz_stream** %strm1864, align 8
  %avail_in1865 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i645, i32 0, i32 1
  %i646 = load i32, i32* %avail_in1865, align 8
  %cmp1866 = icmp eq i32 %i646, 0
  br i1 %cmp1866, label %if.then1868, label %if.end1869

if.then1868:                                      ; preds = %if.end1863
  br label %save_state_and_return

if.end1869:                                       ; preds = %if.end1863
  %bsBuff1870 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i647 = load i32, i32* %bsBuff1870, align 8
  %shl1871 = shl i32 %i647, 8
  %strm1872 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i648 = load %struct.bz_stream*, %struct.bz_stream** %strm1872, align 8
  %next_in1873 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i648, i32 0, i32 0
  %i649 = load i8*, i8** %next_in1873, align 8
  %i650 = load i8, i8* %i649, align 1
  %conv1874 = zext i8 %i650 to i32
  %or1875 = or i32 %shl1871, %conv1874
  %bsBuff1876 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or1875, i32* %bsBuff1876, align 8
  %bsLive1877 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i651 = load i32, i32* %bsLive1877, align 4
  %add1878 = add nsw i32 %i651, 8
  store i32 %add1878, i32* %bsLive1877, align 4
  %strm1879 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i652 = load %struct.bz_stream*, %struct.bz_stream** %strm1879, align 8
  %next_in1880 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i652, i32 0, i32 0
  %i653 = load i8*, i8** %next_in1880, align 8
  %incdec.ptr1881 = getelementptr inbounds i8, i8* %i653, i32 1
  store i8* %incdec.ptr1881, i8** %next_in1880, align 8
  %strm1882 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i654 = load %struct.bz_stream*, %struct.bz_stream** %strm1882, align 8
  %avail_in1883 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i654, i32 0, i32 1
  %i655 = load i32, i32* %avail_in1883, align 8
  %dec1884 = add i32 %i655, -1
  store i32 %dec1884, i32* %avail_in1883, align 8
  %strm1885 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i656 = load %struct.bz_stream*, %struct.bz_stream** %strm1885, align 8
  %total_in_lo321886 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i656, i32 0, i32 2
  %i657 = load i32, i32* %total_in_lo321886, align 4
  %inc1887 = add i32 %i657, 1
  store i32 %inc1887, i32* %total_in_lo321886, align 4
  %strm1888 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i658 = load %struct.bz_stream*, %struct.bz_stream** %strm1888, align 8
  %total_in_lo321889 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i658, i32 0, i32 2
  %i659 = load i32, i32* %total_in_lo321889, align 4
  %cmp1890 = icmp eq i32 %i659, 0
  br i1 %cmp1890, label %if.then1892, label %if.end1896

if.then1892:                                      ; preds = %if.end1869
  %strm1893 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i660 = load %struct.bz_stream*, %struct.bz_stream** %strm1893, align 8
  %total_in_hi321894 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i660, i32 0, i32 3
  %i661 = load i32, i32* %total_in_hi321894, align 8
  %inc1895 = add i32 %i661, 1
  store i32 %inc1895, i32* %total_in_hi321894, align 8
  br label %if.end1896

if.end1896:                                       ; preds = %if.then1892, %if.end1869
  br label %while.body1850

while.end1897:                                    ; preds = %if.then1854
  %shl1898 = shl i32 %zvec.1, 1
  %or1899 = or i32 %shl1898, %and1860
  br label %while.body1835

while.end1900:                                    ; preds = %if.then1844
  %idxprom1901 = sext i32 %zn.1 to i64
  %arrayidx1902 = getelementptr inbounds i32, i32* %gBase.2, i64 %idxprom1901
  %i662 = load i32, i32* %arrayidx1902, align 4
  %sub1903 = sub nsw i32 %zvec.0, %i662
  %cmp1904 = icmp slt i32 %sub1903, 0
  br i1 %cmp1904, label %if.then1912, label %lor.lhs.false1906

lor.lhs.false1906:                                ; preds = %while.end1900
  %idxprom1907 = sext i32 %zn.1 to i64
  %arrayidx1908 = getelementptr inbounds i32, i32* %gBase.2, i64 %idxprom1907
  %i663 = load i32, i32* %arrayidx1908, align 4
  %sub1909 = sub nsw i32 %zvec.0, %i663
  %cmp1910 = icmp sge i32 %sub1909, 258
  br i1 %cmp1910, label %if.then1912, label %if.end1913

if.then1912:                                      ; preds = %lor.lhs.false1906, %while.end1900
  br label %save_state_and_return

if.end1913:                                       ; preds = %lor.lhs.false1906
  %idxprom1914 = sext i32 %zn.1 to i64
  %arrayidx1915 = getelementptr inbounds i32, i32* %gBase.2, i64 %idxprom1914
  %i664 = load i32, i32* %arrayidx1915, align 4
  %sub1916 = sub nsw i32 %zvec.0, %i664
  %idxprom1917 = sext i32 %sub1916 to i64
  %arrayidx1918 = getelementptr inbounds i32, i32* %gPerm.2, i64 %idxprom1917
  %i665 = load i32, i32* %arrayidx1918, align 4
  br label %while.body1920

while.body1920:                                   ; preds = %if.end2522, %if.end2162, %if.end1913
  %gPerm.4 = phi i32* [ %gPerm.12, %if.end2522 ], [ %gPerm.8, %if.end2162 ], [ %gPerm.2, %if.end1913 ]
  %gBase.4 = phi i32* [ %gBase.12, %if.end2522 ], [ %gBase.8, %if.end2162 ], [ %gBase.2, %if.end1913 ]
  %gLimit.4 = phi i32* [ %gLimit.12, %if.end2522 ], [ %gLimit.8, %if.end2162 ], [ %gLimit.2, %if.end1913 ]
  %gMinlen.4 = phi i32 [ %gMinlen.12, %if.end2522 ], [ %gMinlen.8, %if.end2162 ], [ %gMinlen.2, %if.end1913 ]
  %gSel.4 = phi i32 [ %gSel.12, %if.end2522 ], [ %gSel.8, %if.end2162 ], [ %gSel.2, %if.end1913 ]
  %zj.2 = phi i32 [ %zj.8, %if.end2522 ], [ %zj.5, %if.end2162 ], [ %zj.0, %if.end1913 ]
  %zvec.2 = phi i32 [ %zvec.8, %if.end2522 ], [ %zvec.5, %if.end2162 ], [ %zvec.0, %if.end1913 ]
  %zn.3 = phi i32 [ %zn.9, %if.end2522 ], [ %zn.6, %if.end2162 ], [ %zn.1, %if.end1913 ]
  %curr.10 = phi i32 [ %curr.16, %if.end2522 ], [ %curr.13, %if.end2162 ], [ %curr.8, %if.end1913 ]
  %N.0 = phi i32 [ %N.6, %if.end2522 ], [ %N.3, %if.end2162 ], [ %i15, %if.end1913 ]
  %es.0 = phi i32 [ %es.11, %if.end2522 ], [ %es.9, %if.end2162 ], [ %i14, %if.end1913 ]
  %nblock.3 = phi i32 [ %nblock.12, %if.end2522 ], [ %nblock.10, %if.end2162 ], [ %nblock.1, %if.end1913 ]
  %nblockMAX.3 = phi i32 [ %nblockMAX.9, %if.end2522 ], [ %nblockMAX.6, %if.end2162 ], [ %nblockMAX.1, %if.end1913 ]
  %nextSym.0 = phi i32 [ %i799, %if.end2522 ], [ %i714, %if.end2162 ], [ %i665, %if.end1913 ]
  %groupPos.4 = phi i32 [ %groupPos.12, %if.end2522 ], [ %groupPos.8, %if.end2162 ], [ %groupPos.2, %if.end1913 ]
  %groupNo.4 = phi i32 [ %groupNo.12, %if.end2522 ], [ %groupNo.8, %if.end2162 ], [ %groupNo.2, %if.end1913 ]
  %EOB.3 = phi i32 [ %EOB.9, %if.end2522 ], [ %EOB.6, %if.end2162 ], [ %EOB.1, %if.end1913 ]
  %nSelectors.12 = phi i32 [ %nSelectors.18, %if.end2522 ], [ %nSelectors.15, %if.end2162 ], [ %nSelectors.10, %if.end1913 ]
  %nGroups.13 = phi i32 [ %nGroups.19, %if.end2522 ], [ %nGroups.16, %if.end2162 ], [ %nGroups.11, %if.end1913 ]
  %alphaSize.14 = phi i32 [ %alphaSize.20, %if.end2522 ], [ %alphaSize.17, %if.end2162 ], [ %alphaSize.12, %if.end1913 ]
  %t.10 = phi i32 [ %t.16, %if.end2522 ], [ %t.13, %if.end2162 ], [ %t.8, %if.end1913 ]
  %j.18 = phi i32 [ %j.24, %if.end2522 ], [ %j.21, %if.end2162 ], [ %j.16, %if.end1913 ]
  %i.24 = phi i32 [ %i.30, %if.end2522 ], [ %i.27, %if.end2162 ], [ %i.22, %if.end1913 ]
  %cmp1921 = icmp eq i32 %nextSym.0, %EOB.3
  br i1 %cmp1921, label %if.then1923, label %if.end1924

if.then1923:                                      ; preds = %while.body1920
  br label %while.end2528

if.end1924:                                       ; preds = %while.body1920
  %cmp1925 = icmp eq i32 %nextSym.0, 0
  br i1 %cmp1925, label %if.then1930, label %lor.lhs.false1927

lor.lhs.false1927:                                ; preds = %if.end1924
  %cmp1928 = icmp eq i32 %nextSym.0, 1
  br i1 %cmp1928, label %if.then1930, label %if.else2163

if.then1930:                                      ; preds = %lor.lhs.false1927, %if.end1924
  br label %do.body

do.body:                                          ; preds = %lor.end, %if.then1930
  %gPerm.5 = phi i32* [ %gPerm.4, %if.then1930 ], [ %gPerm.8, %lor.end ]
  %gBase.5 = phi i32* [ %gBase.4, %if.then1930 ], [ %gBase.8, %lor.end ]
  %gLimit.5 = phi i32* [ %gLimit.4, %if.then1930 ], [ %gLimit.8, %lor.end ]
  %gMinlen.5 = phi i32 [ %gMinlen.4, %if.then1930 ], [ %gMinlen.8, %lor.end ]
  %gSel.5 = phi i32 [ %gSel.4, %if.then1930 ], [ %gSel.8, %lor.end ]
  %zj.3 = phi i32 [ %zj.2, %if.then1930 ], [ %zj.5, %lor.end ]
  %zvec.3 = phi i32 [ %zvec.2, %if.then1930 ], [ %zvec.5, %lor.end ]
  %zn.4 = phi i32 [ %zn.3, %if.then1930 ], [ %zn.6, %lor.end ]
  %curr.11 = phi i32 [ %curr.10, %if.then1930 ], [ %curr.13, %lor.end ]
  %N.1 = phi i32 [ 1, %if.then1930 ], [ %N.3, %lor.end ]
  %es.1 = phi i32 [ -1, %if.then1930 ], [ %es.5, %lor.end ]
  %nblock.4 = phi i32 [ %nblock.3, %if.then1930 ], [ %nblock.6, %lor.end ]
  %nblockMAX.4 = phi i32 [ %nblockMAX.3, %if.then1930 ], [ %nblockMAX.6, %lor.end ]
  %nextSym.1 = phi i32 [ %nextSym.0, %if.then1930 ], [ %i714, %lor.end ]
  %groupPos.5 = phi i32 [ %groupPos.4, %if.then1930 ], [ %groupPos.8, %lor.end ]
  %groupNo.5 = phi i32 [ %groupNo.4, %if.then1930 ], [ %groupNo.8, %lor.end ]
  %EOB.4 = phi i32 [ %EOB.3, %if.then1930 ], [ %EOB.6, %lor.end ]
  %nSelectors.13 = phi i32 [ %nSelectors.12, %if.then1930 ], [ %nSelectors.15, %lor.end ]
  %nGroups.14 = phi i32 [ %nGroups.13, %if.then1930 ], [ %nGroups.16, %lor.end ]
  %alphaSize.15 = phi i32 [ %alphaSize.14, %if.then1930 ], [ %alphaSize.17, %lor.end ]
  %t.11 = phi i32 [ %t.10, %if.then1930 ], [ %t.13, %lor.end ]
  %j.19 = phi i32 [ %j.18, %if.then1930 ], [ %j.21, %lor.end ]
  %i.25 = phi i32 [ %i.24, %if.then1930 ], [ %i.27, %lor.end ]
  %cmp1931 = icmp eq i32 %nextSym.1, 0
  br i1 %cmp1931, label %if.then1933, label %if.else1936

if.then1933:                                      ; preds = %do.body
  %mul1934 = mul nsw i32 1, %N.1
  %add1935 = add nsw i32 %es.1, %mul1934
  br label %if.end1943

if.else1936:                                      ; preds = %do.body
  %cmp1937 = icmp eq i32 %nextSym.1, 1
  br i1 %cmp1937, label %if.then1939, label %if.end1942

if.then1939:                                      ; preds = %if.else1936
  %mul1940 = mul nsw i32 2, %N.1
  %add1941 = add nsw i32 %es.1, %mul1940
  br label %if.end1942

if.end1942:                                       ; preds = %if.then1939, %if.else1936
  %es.2 = phi i32 [ %add1941, %if.then1939 ], [ %es.1, %if.else1936 ]
  br label %if.end1943

if.end1943:                                       ; preds = %if.end1942, %if.then1933
  %es.3 = phi i32 [ %add1935, %if.then1933 ], [ %es.2, %if.end1942 ]
  %mul1944 = mul nsw i32 %N.1, 2
  %cmp1945 = icmp eq i32 %groupPos.5, 0
  br i1 %cmp1945, label %if.then1947, label %if.end1972

if.then1947:                                      ; preds = %if.end1943
  %inc1948 = add nsw i32 %groupNo.5, 1
  %cmp1949 = icmp sge i32 %inc1948, %nSelectors.13
  br i1 %cmp1949, label %if.then1951, label %if.end1952

if.then1951:                                      ; preds = %if.then1947
  br label %save_state_and_return

if.end1952:                                       ; preds = %if.then1947
  %selector1953 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 33
  %idxprom1954 = sext i32 %inc1948 to i64
  %arrayidx1955 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector1953, i64 0, i64 %idxprom1954
  %i666 = load i8, i8* %arrayidx1955, align 1
  %conv1956 = zext i8 %i666 to i32
  %minLens1957 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 39
  %idxprom1958 = sext i32 %conv1956 to i64
  %arrayidx1959 = getelementptr inbounds [6 x i32], [6 x i32]* %minLens1957, i64 0, i64 %idxprom1958
  %i667 = load i32, i32* %arrayidx1959, align 4
  %limit1960 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 36
  %idxprom1961 = sext i32 %conv1956 to i64
  %arrayidx1962 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %limit1960, i64 0, i64 %idxprom1961
  %arrayidx1963 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1962, i64 0, i64 0
  %perm1964 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 38
  %idxprom1965 = sext i32 %conv1956 to i64
  %arrayidx1966 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %perm1964, i64 0, i64 %idxprom1965
  %arrayidx1967 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1966, i64 0, i64 0
  %base1968 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 37
  %idxprom1969 = sext i32 %conv1956 to i64
  %arrayidx1970 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %base1968, i64 0, i64 %idxprom1969
  %arrayidx1971 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx1970, i64 0, i64 0
  br label %if.end1972

if.end1972:                                       ; preds = %if.end1952, %if.end1943
  %gPerm.6 = phi i32* [ %arrayidx1967, %if.end1952 ], [ %gPerm.5, %if.end1943 ]
  %gBase.6 = phi i32* [ %arrayidx1971, %if.end1952 ], [ %gBase.5, %if.end1943 ]
  %gLimit.6 = phi i32* [ %arrayidx1963, %if.end1952 ], [ %gLimit.5, %if.end1943 ]
  %gMinlen.6 = phi i32 [ %i667, %if.end1952 ], [ %gMinlen.5, %if.end1943 ]
  %gSel.6 = phi i32 [ %conv1956, %if.end1952 ], [ %gSel.5, %if.end1943 ]
  %groupPos.6 = phi i32 [ 50, %if.end1952 ], [ %groupPos.5, %if.end1943 ]
  %groupNo.6 = phi i32 [ %inc1948, %if.end1952 ], [ %groupNo.5, %if.end1943 ]
  %dec1973 = add nsw i32 %groupPos.6, -1
  br label %sw.bb1974

sw.bb1974:                                        ; preds = %if.end1972, %if.end
  %gPerm.7 = phi i32* [ %gPerm.6, %if.end1972 ], [ %i25, %if.end ]
  %gBase.7 = phi i32* [ %gBase.6, %if.end1972 ], [ %i24, %if.end ]
  %gLimit.7 = phi i32* [ %gLimit.6, %if.end1972 ], [ %i23, %if.end ]
  %gMinlen.7 = phi i32 [ %gMinlen.6, %if.end1972 ], [ %i22, %if.end ]
  %gSel.7 = phi i32 [ %gSel.6, %if.end1972 ], [ %i21, %if.end ]
  %zj.4 = phi i32 [ %zj.3, %if.end1972 ], [ %i20, %if.end ]
  %zvec.4 = phi i32 [ %zvec.3, %if.end1972 ], [ %i19, %if.end ]
  %zn.5 = phi i32 [ %gMinlen.6, %if.end1972 ], [ %i18, %if.end ]
  %curr.12 = phi i32 [ %curr.11, %if.end1972 ], [ %i16, %if.end ]
  %N.2 = phi i32 [ %mul1944, %if.end1972 ], [ %i15, %if.end ]
  %es.4 = phi i32 [ %es.3, %if.end1972 ], [ %i14, %if.end ]
  %nblock.5 = phi i32 [ %nblock.4, %if.end1972 ], [ %i13, %if.end ]
  %nblockMAX.5 = phi i32 [ %nblockMAX.4, %if.end1972 ], [ %i12, %if.end ]
  %nextSym.2 = phi i32 [ %nextSym.1, %if.end1972 ], [ %i11, %if.end ]
  %groupPos.7 = phi i32 [ %dec1973, %if.end1972 ], [ %i10, %if.end ]
  %groupNo.7 = phi i32 [ %groupNo.6, %if.end1972 ], [ %i9, %if.end ]
  %EOB.5 = phi i32 [ %EOB.4, %if.end1972 ], [ %i8, %if.end ]
  %nSelectors.14 = phi i32 [ %nSelectors.13, %if.end1972 ], [ %i7, %if.end ]
  %nGroups.15 = phi i32 [ %nGroups.14, %if.end1972 ], [ %i6, %if.end ]
  %alphaSize.16 = phi i32 [ %alphaSize.15, %if.end1972 ], [ %i5, %if.end ]
  %t.12 = phi i32 [ %t.11, %if.end1972 ], [ %i4, %if.end ]
  %j.20 = phi i32 [ %j.19, %if.end1972 ], [ %i3, %if.end ]
  %i.26 = phi i32 [ %i.25, %if.end1972 ], [ %i2, %if.end ]
  %state1975 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 38, i32* %state1975, align 8
  br label %while.body1977

while.body1977:                                   ; preds = %if.end2025, %sw.bb1974
  %bsLive1978 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i668 = load i32, i32* %bsLive1978, align 4
  %cmp1979 = icmp sge i32 %i668, %zn.5
  br i1 %cmp1979, label %if.then1981, label %if.end1992

if.then1981:                                      ; preds = %while.body1977
  %bsBuff1983 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i669 = load i32, i32* %bsBuff1983, align 8
  %bsLive1984 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i670 = load i32, i32* %bsLive1984, align 4
  %sub1985 = sub nsw i32 %i670, %zn.5
  %shr1986 = lshr i32 %i669, %sub1985
  %shl1987 = shl i32 1, %zn.5
  %sub1988 = sub nsw i32 %shl1987, 1
  %and1989 = and i32 %shr1986, %sub1988
  %bsLive1990 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i671 = load i32, i32* %bsLive1990, align 4
  %sub1991 = sub nsw i32 %i671, %zn.5
  store i32 %sub1991, i32* %bsLive1990, align 4
  br label %while.end2026

if.end1992:                                       ; preds = %while.body1977
  %strm1993 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i672 = load %struct.bz_stream*, %struct.bz_stream** %strm1993, align 8
  %avail_in1994 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i672, i32 0, i32 1
  %i673 = load i32, i32* %avail_in1994, align 8
  %cmp1995 = icmp eq i32 %i673, 0
  br i1 %cmp1995, label %if.then1997, label %if.end1998

if.then1997:                                      ; preds = %if.end1992
  br label %save_state_and_return

if.end1998:                                       ; preds = %if.end1992
  %bsBuff1999 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i674 = load i32, i32* %bsBuff1999, align 8
  %shl2000 = shl i32 %i674, 8
  %strm2001 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i675 = load %struct.bz_stream*, %struct.bz_stream** %strm2001, align 8
  %next_in2002 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i675, i32 0, i32 0
  %i676 = load i8*, i8** %next_in2002, align 8
  %i677 = load i8, i8* %i676, align 1
  %conv2003 = zext i8 %i677 to i32
  %or2004 = or i32 %shl2000, %conv2003
  %bsBuff2005 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or2004, i32* %bsBuff2005, align 8
  %bsLive2006 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i678 = load i32, i32* %bsLive2006, align 4
  %add2007 = add nsw i32 %i678, 8
  store i32 %add2007, i32* %bsLive2006, align 4
  %strm2008 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i679 = load %struct.bz_stream*, %struct.bz_stream** %strm2008, align 8
  %next_in2009 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i679, i32 0, i32 0
  %i680 = load i8*, i8** %next_in2009, align 8
  %incdec.ptr2010 = getelementptr inbounds i8, i8* %i680, i32 1
  store i8* %incdec.ptr2010, i8** %next_in2009, align 8
  %strm2011 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i681 = load %struct.bz_stream*, %struct.bz_stream** %strm2011, align 8
  %avail_in2012 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i681, i32 0, i32 1
  %i682 = load i32, i32* %avail_in2012, align 8
  %dec2013 = add i32 %i682, -1
  store i32 %dec2013, i32* %avail_in2012, align 8
  %strm2014 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i683 = load %struct.bz_stream*, %struct.bz_stream** %strm2014, align 8
  %total_in_lo322015 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i683, i32 0, i32 2
  %i684 = load i32, i32* %total_in_lo322015, align 4
  %inc2016 = add i32 %i684, 1
  store i32 %inc2016, i32* %total_in_lo322015, align 4
  %strm2017 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i685 = load %struct.bz_stream*, %struct.bz_stream** %strm2017, align 8
  %total_in_lo322018 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i685, i32 0, i32 2
  %i686 = load i32, i32* %total_in_lo322018, align 4
  %cmp2019 = icmp eq i32 %i686, 0
  br i1 %cmp2019, label %if.then2021, label %if.end2025

if.then2021:                                      ; preds = %if.end1998
  %strm2022 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i687 = load %struct.bz_stream*, %struct.bz_stream** %strm2022, align 8
  %total_in_hi322023 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i687, i32 0, i32 3
  %i688 = load i32, i32* %total_in_hi322023, align 8
  %inc2024 = add i32 %i688, 1
  store i32 %inc2024, i32* %total_in_hi322023, align 8
  br label %if.end2025

if.end2025:                                       ; preds = %if.then2021, %if.end1998
  br label %while.body1977

while.end2026:                                    ; preds = %if.then1981
  br label %while.body2028

while.body2028:                                   ; preds = %while.end2090, %while.end2026
  %gPerm.8 = phi i32* [ %gPerm.7, %while.end2026 ], [ %gPerm.9, %while.end2090 ]
  %gBase.8 = phi i32* [ %gBase.7, %while.end2026 ], [ %gBase.9, %while.end2090 ]
  %gLimit.8 = phi i32* [ %gLimit.7, %while.end2026 ], [ %gLimit.9, %while.end2090 ]
  %gMinlen.8 = phi i32 [ %gMinlen.7, %while.end2026 ], [ %gMinlen.9, %while.end2090 ]
  %gSel.8 = phi i32 [ %gSel.7, %while.end2026 ], [ %gSel.9, %while.end2090 ]
  %zj.5 = phi i32 [ %zj.4, %while.end2026 ], [ %and2053, %while.end2090 ]
  %zvec.5 = phi i32 [ %and1989, %while.end2026 ], [ %or2092, %while.end2090 ]
  %zn.6 = phi i32 [ %zn.5, %while.end2026 ], [ %zn.7, %while.end2090 ]
  %curr.13 = phi i32 [ %curr.12, %while.end2026 ], [ %curr.14, %while.end2090 ]
  %N.3 = phi i32 [ %N.2, %while.end2026 ], [ %N.4, %while.end2090 ]
  %es.5 = phi i32 [ %es.4, %while.end2026 ], [ %es.6, %while.end2090 ]
  %nblock.6 = phi i32 [ %nblock.5, %while.end2026 ], [ %nblock.7, %while.end2090 ]
  %nblockMAX.6 = phi i32 [ %nblockMAX.5, %while.end2026 ], [ %nblockMAX.7, %while.end2090 ]
  %nextSym.3 = phi i32 [ %nextSym.2, %while.end2026 ], [ %nextSym.4, %while.end2090 ]
  %groupPos.8 = phi i32 [ %groupPos.7, %while.end2026 ], [ %groupPos.9, %while.end2090 ]
  %groupNo.8 = phi i32 [ %groupNo.7, %while.end2026 ], [ %groupNo.9, %while.end2090 ]
  %EOB.6 = phi i32 [ %EOB.5, %while.end2026 ], [ %EOB.7, %while.end2090 ]
  %nSelectors.15 = phi i32 [ %nSelectors.14, %while.end2026 ], [ %nSelectors.16, %while.end2090 ]
  %nGroups.16 = phi i32 [ %nGroups.15, %while.end2026 ], [ %nGroups.17, %while.end2090 ]
  %alphaSize.17 = phi i32 [ %alphaSize.16, %while.end2026 ], [ %alphaSize.18, %while.end2090 ]
  %t.13 = phi i32 [ %t.12, %while.end2026 ], [ %t.14, %while.end2090 ]
  %j.21 = phi i32 [ %j.20, %while.end2026 ], [ %j.22, %while.end2090 ]
  %i.27 = phi i32 [ %i.26, %while.end2026 ], [ %i.28, %while.end2090 ]
  %cmp2029 = icmp sgt i32 %zn.6, 20
  br i1 %cmp2029, label %if.then2031, label %if.end2032

if.then2031:                                      ; preds = %while.body2028
  br label %save_state_and_return

if.end2032:                                       ; preds = %while.body2028
  %idxprom2033 = sext i32 %zn.6 to i64
  %arrayidx2034 = getelementptr inbounds i32, i32* %gLimit.8, i64 %idxprom2033
  %i689 = load i32, i32* %arrayidx2034, align 4
  %cmp2035 = icmp sle i32 %zvec.5, %i689
  br i1 %cmp2035, label %if.then2037, label %if.end2038

if.then2037:                                      ; preds = %if.end2032
  br label %while.end2093

if.end2038:                                       ; preds = %if.end2032
  %inc2039 = add nsw i32 %zn.6, 1
  br label %sw.bb2040

sw.bb2040:                                        ; preds = %if.end2038, %if.end
  %gPerm.9 = phi i32* [ %gPerm.8, %if.end2038 ], [ %i25, %if.end ]
  %gBase.9 = phi i32* [ %gBase.8, %if.end2038 ], [ %i24, %if.end ]
  %gLimit.9 = phi i32* [ %gLimit.8, %if.end2038 ], [ %i23, %if.end ]
  %gMinlen.9 = phi i32 [ %gMinlen.8, %if.end2038 ], [ %i22, %if.end ]
  %gSel.9 = phi i32 [ %gSel.8, %if.end2038 ], [ %i21, %if.end ]
  %zj.6 = phi i32 [ %zj.5, %if.end2038 ], [ %i20, %if.end ]
  %zvec.6 = phi i32 [ %zvec.5, %if.end2038 ], [ %i19, %if.end ]
  %zn.7 = phi i32 [ %inc2039, %if.end2038 ], [ %i18, %if.end ]
  %curr.14 = phi i32 [ %curr.13, %if.end2038 ], [ %i16, %if.end ]
  %N.4 = phi i32 [ %N.3, %if.end2038 ], [ %i15, %if.end ]
  %es.6 = phi i32 [ %es.5, %if.end2038 ], [ %i14, %if.end ]
  %nblock.7 = phi i32 [ %nblock.6, %if.end2038 ], [ %i13, %if.end ]
  %nblockMAX.7 = phi i32 [ %nblockMAX.6, %if.end2038 ], [ %i12, %if.end ]
  %nextSym.4 = phi i32 [ %nextSym.3, %if.end2038 ], [ %i11, %if.end ]
  %groupPos.9 = phi i32 [ %groupPos.8, %if.end2038 ], [ %i10, %if.end ]
  %groupNo.9 = phi i32 [ %groupNo.8, %if.end2038 ], [ %i9, %if.end ]
  %EOB.7 = phi i32 [ %EOB.6, %if.end2038 ], [ %i8, %if.end ]
  %nSelectors.16 = phi i32 [ %nSelectors.15, %if.end2038 ], [ %i7, %if.end ]
  %nGroups.17 = phi i32 [ %nGroups.16, %if.end2038 ], [ %i6, %if.end ]
  %alphaSize.18 = phi i32 [ %alphaSize.17, %if.end2038 ], [ %i5, %if.end ]
  %t.14 = phi i32 [ %t.13, %if.end2038 ], [ %i4, %if.end ]
  %j.22 = phi i32 [ %j.21, %if.end2038 ], [ %i3, %if.end ]
  %i.28 = phi i32 [ %i.27, %if.end2038 ], [ %i2, %if.end ]
  %state2041 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 39, i32* %state2041, align 8
  br label %while.body2043

while.body2043:                                   ; preds = %if.end2089, %sw.bb2040
  %bsLive2044 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i690 = load i32, i32* %bsLive2044, align 4
  %cmp2045 = icmp sge i32 %i690, 1
  br i1 %cmp2045, label %if.then2047, label %if.end2056

if.then2047:                                      ; preds = %while.body2043
  %bsBuff2049 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i691 = load i32, i32* %bsBuff2049, align 8
  %bsLive2050 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i692 = load i32, i32* %bsLive2050, align 4
  %sub2051 = sub nsw i32 %i692, 1
  %shr2052 = lshr i32 %i691, %sub2051
  %and2053 = and i32 %shr2052, 1
  %bsLive2054 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i693 = load i32, i32* %bsLive2054, align 4
  %sub2055 = sub nsw i32 %i693, 1
  store i32 %sub2055, i32* %bsLive2054, align 4
  br label %while.end2090

if.end2056:                                       ; preds = %while.body2043
  %strm2057 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i694 = load %struct.bz_stream*, %struct.bz_stream** %strm2057, align 8
  %avail_in2058 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i694, i32 0, i32 1
  %i695 = load i32, i32* %avail_in2058, align 8
  %cmp2059 = icmp eq i32 %i695, 0
  br i1 %cmp2059, label %if.then2061, label %if.end2062

if.then2061:                                      ; preds = %if.end2056
  br label %save_state_and_return

if.end2062:                                       ; preds = %if.end2056
  %bsBuff2063 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i696 = load i32, i32* %bsBuff2063, align 8
  %shl2064 = shl i32 %i696, 8
  %strm2065 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i697 = load %struct.bz_stream*, %struct.bz_stream** %strm2065, align 8
  %next_in2066 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i697, i32 0, i32 0
  %i698 = load i8*, i8** %next_in2066, align 8
  %i699 = load i8, i8* %i698, align 1
  %conv2067 = zext i8 %i699 to i32
  %or2068 = or i32 %shl2064, %conv2067
  %bsBuff2069 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or2068, i32* %bsBuff2069, align 8
  %bsLive2070 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i700 = load i32, i32* %bsLive2070, align 4
  %add2071 = add nsw i32 %i700, 8
  store i32 %add2071, i32* %bsLive2070, align 4
  %strm2072 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i701 = load %struct.bz_stream*, %struct.bz_stream** %strm2072, align 8
  %next_in2073 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i701, i32 0, i32 0
  %i702 = load i8*, i8** %next_in2073, align 8
  %incdec.ptr2074 = getelementptr inbounds i8, i8* %i702, i32 1
  store i8* %incdec.ptr2074, i8** %next_in2073, align 8
  %strm2075 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i703 = load %struct.bz_stream*, %struct.bz_stream** %strm2075, align 8
  %avail_in2076 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i703, i32 0, i32 1
  %i704 = load i32, i32* %avail_in2076, align 8
  %dec2077 = add i32 %i704, -1
  store i32 %dec2077, i32* %avail_in2076, align 8
  %strm2078 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i705 = load %struct.bz_stream*, %struct.bz_stream** %strm2078, align 8
  %total_in_lo322079 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i705, i32 0, i32 2
  %i706 = load i32, i32* %total_in_lo322079, align 4
  %inc2080 = add i32 %i706, 1
  store i32 %inc2080, i32* %total_in_lo322079, align 4
  %strm2081 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i707 = load %struct.bz_stream*, %struct.bz_stream** %strm2081, align 8
  %total_in_lo322082 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i707, i32 0, i32 2
  %i708 = load i32, i32* %total_in_lo322082, align 4
  %cmp2083 = icmp eq i32 %i708, 0
  br i1 %cmp2083, label %if.then2085, label %if.end2089

if.then2085:                                      ; preds = %if.end2062
  %strm2086 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i709 = load %struct.bz_stream*, %struct.bz_stream** %strm2086, align 8
  %total_in_hi322087 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i709, i32 0, i32 3
  %i710 = load i32, i32* %total_in_hi322087, align 8
  %inc2088 = add i32 %i710, 1
  store i32 %inc2088, i32* %total_in_hi322087, align 8
  br label %if.end2089

if.end2089:                                       ; preds = %if.then2085, %if.end2062
  br label %while.body2043

while.end2090:                                    ; preds = %if.then2047
  %shl2091 = shl i32 %zvec.6, 1
  %or2092 = or i32 %shl2091, %and2053
  br label %while.body2028

while.end2093:                                    ; preds = %if.then2037
  %idxprom2094 = sext i32 %zn.6 to i64
  %arrayidx2095 = getelementptr inbounds i32, i32* %gBase.8, i64 %idxprom2094
  %i711 = load i32, i32* %arrayidx2095, align 4
  %sub2096 = sub nsw i32 %zvec.5, %i711
  %cmp2097 = icmp slt i32 %sub2096, 0
  br i1 %cmp2097, label %if.then2105, label %lor.lhs.false2099

lor.lhs.false2099:                                ; preds = %while.end2093
  %idxprom2100 = sext i32 %zn.6 to i64
  %arrayidx2101 = getelementptr inbounds i32, i32* %gBase.8, i64 %idxprom2100
  %i712 = load i32, i32* %arrayidx2101, align 4
  %sub2102 = sub nsw i32 %zvec.5, %i712
  %cmp2103 = icmp sge i32 %sub2102, 258
  br i1 %cmp2103, label %if.then2105, label %if.end2106

if.then2105:                                      ; preds = %lor.lhs.false2099, %while.end2093
  br label %save_state_and_return

if.end2106:                                       ; preds = %lor.lhs.false2099
  %idxprom2107 = sext i32 %zn.6 to i64
  %arrayidx2108 = getelementptr inbounds i32, i32* %gBase.8, i64 %idxprom2107
  %i713 = load i32, i32* %arrayidx2108, align 4
  %sub2109 = sub nsw i32 %zvec.5, %i713
  %idxprom2110 = sext i32 %sub2109 to i64
  %arrayidx2111 = getelementptr inbounds i32, i32* %gPerm.8, i64 %idxprom2110
  %i714 = load i32, i32* %arrayidx2111, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end2106
  %cmp2112 = icmp eq i32 %i714, 0
  br i1 %cmp2112, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %do.cond
  %cmp2114 = icmp eq i32 %i714, 1
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %i715 = phi i1 [ true, %do.cond ], [ %cmp2114, %lor.rhs ]
  br i1 %i715, label %do.body, label %do.end

do.end:                                           ; preds = %lor.end
  %inc2116 = add nsw i32 %es.5, 1
  %seqToUnseq = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 30
  %mtfa2117 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %mtfbase2118 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %arrayidx2119 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2118, i64 0, i64 0
  %i716 = load i32, i32* %arrayidx2119, align 4
  %idxprom2120 = sext i32 %i716 to i64
  %arrayidx2121 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2117, i64 0, i64 %idxprom2120
  %i717 = load i8, i8* %arrayidx2121, align 1
  %idxprom2122 = zext i8 %i717 to i64
  %arrayidx2123 = getelementptr inbounds [256 x i8], [256 x i8]* %seqToUnseq, i64 0, i64 %idxprom2122
  %i718 = load i8, i8* %arrayidx2123, align 1
  %unzftab2124 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 16
  %idxprom2125 = zext i8 %i718 to i64
  %arrayidx2126 = getelementptr inbounds [256 x i32], [256 x i32]* %unzftab2124, i64 0, i64 %idxprom2125
  %i719 = load i32, i32* %arrayidx2126, align 4
  %add2127 = add nsw i32 %i719, %inc2116
  store i32 %add2127, i32* %arrayidx2126, align 4
  %smallDecompress2128 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 10
  %i720 = load i8, i8* %smallDecompress2128, align 4
  %tobool2129 = icmp ne i8 %i720, 0
  br i1 %tobool2129, label %if.then2130, label %if.else2146

if.then2130:                                      ; preds = %do.end
  br label %while.cond2131

while.cond2131:                                   ; preds = %if.end2138, %if.then2130
  %es.7 = phi i32 [ %inc2116, %if.then2130 ], [ %dec2144, %if.end2138 ]
  %nblock.8 = phi i32 [ %nblock.6, %if.then2130 ], [ %inc2143, %if.end2138 ]
  %cmp2132 = icmp sgt i32 %es.7, 0
  br i1 %cmp2132, label %while.body2134, label %while.end2145

while.body2134:                                   ; preds = %while.cond2131
  %cmp2135 = icmp sge i32 %nblock.8, %nblockMAX.6
  br i1 %cmp2135, label %if.then2137, label %if.end2138

if.then2137:                                      ; preds = %while.body2134
  br label %save_state_and_return

if.end2138:                                       ; preds = %while.body2134
  %conv2139 = zext i8 %i718 to i16
  %ll162140 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i721 = load i16*, i16** %ll162140, align 8
  %idxprom2141 = sext i32 %nblock.8 to i64
  %arrayidx2142 = getelementptr inbounds i16, i16* %i721, i64 %idxprom2141
  store i16 %conv2139, i16* %arrayidx2142, align 2
  %inc2143 = add nsw i32 %nblock.8, 1
  %dec2144 = add nsw i32 %es.7, -1
  br label %while.cond2131

while.end2145:                                    ; preds = %while.cond2131
  br label %if.end2162

if.else2146:                                      ; preds = %do.end
  br label %while.cond2147

while.cond2147:                                   ; preds = %if.end2154, %if.else2146
  %es.8 = phi i32 [ %inc2116, %if.else2146 ], [ %dec2160, %if.end2154 ]
  %nblock.9 = phi i32 [ %nblock.6, %if.else2146 ], [ %inc2159, %if.end2154 ]
  %cmp2148 = icmp sgt i32 %es.8, 0
  br i1 %cmp2148, label %while.body2150, label %while.end2161

while.body2150:                                   ; preds = %while.cond2147
  %cmp2151 = icmp sge i32 %nblock.9, %nblockMAX.6
  br i1 %cmp2151, label %if.then2153, label %if.end2154

if.then2153:                                      ; preds = %while.body2150
  br label %save_state_and_return

if.end2154:                                       ; preds = %while.body2150
  %conv2155 = zext i8 %i718 to i32
  %tt2156 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i722 = load i32*, i32** %tt2156, align 8
  %idxprom2157 = sext i32 %nblock.9 to i64
  %arrayidx2158 = getelementptr inbounds i32, i32* %i722, i64 %idxprom2157
  store i32 %conv2155, i32* %arrayidx2158, align 4
  %inc2159 = add nsw i32 %nblock.9, 1
  %dec2160 = add nsw i32 %es.8, -1
  br label %while.cond2147

while.end2161:                                    ; preds = %while.cond2147
  br label %if.end2162

if.end2162:                                       ; preds = %while.end2161, %while.end2145
  %es.9 = phi i32 [ %es.7, %while.end2145 ], [ %es.8, %while.end2161 ]
  %nblock.10 = phi i32 [ %nblock.8, %while.end2145 ], [ %nblock.9, %while.end2161 ]
  br label %while.body1920

if.else2163:                                      ; preds = %lor.lhs.false1927
  %cmp2164 = icmp sge i32 %nblock.3, %nblockMAX.3
  br i1 %cmp2164, label %if.then2166, label %if.end2167

if.then2166:                                      ; preds = %if.else2163
  br label %save_state_and_return

if.end2167:                                       ; preds = %if.else2163
  %sub2171 = sub nsw i32 %nextSym.0, 1
  %cmp2172 = icmp ult i32 %sub2171, 16
  br i1 %cmp2172, label %if.then2174, label %if.else2237

if.then2174:                                      ; preds = %if.end2167
  %mtfbase2175 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %arrayidx2176 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2175, i64 0, i64 0
  %i723 = load i32, i32* %arrayidx2176, align 4
  %mtfa2177 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %add2178 = add i32 %i723, %sub2171
  %idxprom2179 = zext i32 %add2178 to i64
  %arrayidx2180 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2177, i64 0, i64 %idxprom2179
  %i724 = load i8, i8* %arrayidx2180, align 1
  br label %while.cond2181

while.cond2181:                                   ; preds = %while.body2184, %if.then2174
  %nn.0 = phi i32 [ %sub2171, %if.then2174 ], [ %sub2217, %while.body2184 ]
  %cmp2182 = icmp ugt i32 %nn.0, 3
  br i1 %cmp2182, label %while.body2184, label %while.end2218

while.body2184:                                   ; preds = %while.cond2181
  %add2185 = add i32 %i723, %nn.0
  %mtfa2186 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %sub2187 = sub nsw i32 %add2185, 1
  %idxprom2188 = sext i32 %sub2187 to i64
  %arrayidx2189 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2186, i64 0, i64 %idxprom2188
  %i725 = load i8, i8* %arrayidx2189, align 1
  %mtfa2190 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %idxprom2191 = sext i32 %add2185 to i64
  %arrayidx2192 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2190, i64 0, i64 %idxprom2191
  store i8 %i725, i8* %arrayidx2192, align 1
  %mtfa2193 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %sub2194 = sub nsw i32 %add2185, 2
  %idxprom2195 = sext i32 %sub2194 to i64
  %arrayidx2196 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2193, i64 0, i64 %idxprom2195
  %i726 = load i8, i8* %arrayidx2196, align 1
  %mtfa2197 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %sub2198 = sub nsw i32 %add2185, 1
  %idxprom2199 = sext i32 %sub2198 to i64
  %arrayidx2200 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2197, i64 0, i64 %idxprom2199
  store i8 %i726, i8* %arrayidx2200, align 1
  %mtfa2201 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %sub2202 = sub nsw i32 %add2185, 3
  %idxprom2203 = sext i32 %sub2202 to i64
  %arrayidx2204 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2201, i64 0, i64 %idxprom2203
  %i727 = load i8, i8* %arrayidx2204, align 1
  %mtfa2205 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %sub2206 = sub nsw i32 %add2185, 2
  %idxprom2207 = sext i32 %sub2206 to i64
  %arrayidx2208 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2205, i64 0, i64 %idxprom2207
  store i8 %i727, i8* %arrayidx2208, align 1
  %mtfa2209 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %sub2210 = sub nsw i32 %add2185, 4
  %idxprom2211 = sext i32 %sub2210 to i64
  %arrayidx2212 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2209, i64 0, i64 %idxprom2211
  %i728 = load i8, i8* %arrayidx2212, align 1
  %mtfa2213 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %sub2214 = sub nsw i32 %add2185, 3
  %idxprom2215 = sext i32 %sub2214 to i64
  %arrayidx2216 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2213, i64 0, i64 %idxprom2215
  store i8 %i728, i8* %arrayidx2216, align 1
  %sub2217 = sub i32 %nn.0, 4
  br label %while.cond2181

while.end2218:                                    ; preds = %while.cond2181
  br label %while.cond2219

while.cond2219:                                   ; preds = %while.body2222, %while.end2218
  %nn.1 = phi i32 [ %nn.0, %while.end2218 ], [ %dec2232, %while.body2222 ]
  %cmp2220 = icmp ugt i32 %nn.1, 0
  br i1 %cmp2220, label %while.body2222, label %while.end2233

while.body2222:                                   ; preds = %while.cond2219
  %mtfa2223 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %add2224 = add i32 %i723, %nn.1
  %sub2225 = sub i32 %add2224, 1
  %idxprom2226 = zext i32 %sub2225 to i64
  %arrayidx2227 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2223, i64 0, i64 %idxprom2226
  %i729 = load i8, i8* %arrayidx2227, align 1
  %mtfa2228 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %add2229 = add i32 %i723, %nn.1
  %idxprom2230 = zext i32 %add2229 to i64
  %arrayidx2231 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2228, i64 0, i64 %idxprom2230
  store i8 %i729, i8* %arrayidx2231, align 1
  %dec2232 = add i32 %nn.1, -1
  br label %while.cond2219

while.end2233:                                    ; preds = %while.cond2219
  %mtfa2234 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %idxprom2235 = sext i32 %i723 to i64
  %arrayidx2236 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2234, i64 0, i64 %idxprom2235
  store i8 %i724, i8* %arrayidx2236, align 1
  br label %if.end2333

if.else2237:                                      ; preds = %if.end2167
  %div = udiv i32 %sub2171, 16
  %rem = urem i32 %sub2171, 16
  %mtfbase2238 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %idxprom2239 = sext i32 %div to i64
  %arrayidx2240 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2238, i64 0, i64 %idxprom2239
  %i730 = load i32, i32* %arrayidx2240, align 4
  %add2241 = add nsw i32 %i730, %rem
  %mtfa2242 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %idxprom2243 = sext i32 %add2241 to i64
  %arrayidx2244 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2242, i64 0, i64 %idxprom2243
  %i731 = load i8, i8* %arrayidx2244, align 1
  br label %while.cond2245

while.cond2245:                                   ; preds = %while.body2251, %if.else2237
  %pp.0 = phi i32 [ %add2241, %if.else2237 ], [ %dec2259, %while.body2251 ]
  %mtfbase2246 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %idxprom2247 = sext i32 %div to i64
  %arrayidx2248 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2246, i64 0, i64 %idxprom2247
  %i732 = load i32, i32* %arrayidx2248, align 4
  %cmp2249 = icmp sgt i32 %pp.0, %i732
  br i1 %cmp2249, label %while.body2251, label %while.end2260

while.body2251:                                   ; preds = %while.cond2245
  %mtfa2252 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %sub2253 = sub nsw i32 %pp.0, 1
  %idxprom2254 = sext i32 %sub2253 to i64
  %arrayidx2255 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2252, i64 0, i64 %idxprom2254
  %i733 = load i8, i8* %arrayidx2255, align 1
  %mtfa2256 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %idxprom2257 = sext i32 %pp.0 to i64
  %arrayidx2258 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2256, i64 0, i64 %idxprom2257
  store i8 %i733, i8* %arrayidx2258, align 1
  %dec2259 = add nsw i32 %pp.0, -1
  br label %while.cond2245

while.end2260:                                    ; preds = %while.cond2245
  %mtfbase2261 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %idxprom2262 = sext i32 %div to i64
  %arrayidx2263 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2261, i64 0, i64 %idxprom2262
  %i734 = load i32, i32* %arrayidx2263, align 4
  %inc2264 = add nsw i32 %i734, 1
  store i32 %inc2264, i32* %arrayidx2263, align 4
  br label %while.cond2265

while.cond2265:                                   ; preds = %while.body2268, %while.end2260
  %lno.0 = phi i32 [ %div, %while.end2260 ], [ %dec2288, %while.body2268 ]
  %cmp2266 = icmp sgt i32 %lno.0, 0
  br i1 %cmp2266, label %while.body2268, label %while.end2289

while.body2268:                                   ; preds = %while.cond2265
  %mtfbase2269 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %idxprom2270 = sext i32 %lno.0 to i64
  %arrayidx2271 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2269, i64 0, i64 %idxprom2270
  %i735 = load i32, i32* %arrayidx2271, align 4
  %dec2272 = add nsw i32 %i735, -1
  store i32 %dec2272, i32* %arrayidx2271, align 4
  %mtfa2273 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %mtfbase2274 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %sub2275 = sub nsw i32 %lno.0, 1
  %idxprom2276 = sext i32 %sub2275 to i64
  %arrayidx2277 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2274, i64 0, i64 %idxprom2276
  %i736 = load i32, i32* %arrayidx2277, align 4
  %add2278 = add nsw i32 %i736, 16
  %sub2279 = sub nsw i32 %add2278, 1
  %idxprom2280 = sext i32 %sub2279 to i64
  %arrayidx2281 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2273, i64 0, i64 %idxprom2280
  %i737 = load i8, i8* %arrayidx2281, align 1
  %mtfa2282 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %mtfbase2283 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %idxprom2284 = sext i32 %lno.0 to i64
  %arrayidx2285 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2283, i64 0, i64 %idxprom2284
  %i738 = load i32, i32* %arrayidx2285, align 4
  %idxprom2286 = sext i32 %i738 to i64
  %arrayidx2287 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2282, i64 0, i64 %idxprom2286
  store i8 %i737, i8* %arrayidx2287, align 1
  %dec2288 = add nsw i32 %lno.0, -1
  br label %while.cond2265

while.end2289:                                    ; preds = %while.cond2265
  %mtfbase2290 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %arrayidx2291 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2290, i64 0, i64 0
  %i739 = load i32, i32* %arrayidx2291, align 4
  %dec2292 = add nsw i32 %i739, -1
  store i32 %dec2292, i32* %arrayidx2291, align 4
  %mtfa2293 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %mtfbase2294 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %arrayidx2295 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2294, i64 0, i64 0
  %i740 = load i32, i32* %arrayidx2295, align 4
  %idxprom2296 = sext i32 %i740 to i64
  %arrayidx2297 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2293, i64 0, i64 %idxprom2296
  store i8 %i731, i8* %arrayidx2297, align 1
  %mtfbase2298 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %arrayidx2299 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2298, i64 0, i64 0
  %i741 = load i32, i32* %arrayidx2299, align 4
  %cmp2300 = icmp eq i32 %i741, 0
  br i1 %cmp2300, label %if.then2302, label %if.end2332

if.then2302:                                      ; preds = %while.end2289
  br label %for.cond2303

for.cond2303:                                     ; preds = %for.inc2329, %if.then2302
  %ii2168.0 = phi i32 [ 15, %if.then2302 ], [ %dec2330, %for.inc2329 ]
  %kk2170.0 = phi i32 [ 4095, %if.then2302 ], [ %kk2170.1, %for.inc2329 ]
  %cmp2304 = icmp sge i32 %ii2168.0, 0
  br i1 %cmp2304, label %for.body2306, label %for.end2331

for.body2306:                                     ; preds = %for.cond2303
  br label %for.cond2307

for.cond2307:                                     ; preds = %for.inc2322, %for.body2306
  %jj2169.0 = phi i32 [ 15, %for.body2306 ], [ %dec2323, %for.inc2322 ]
  %kk2170.1 = phi i32 [ %kk2170.0, %for.body2306 ], [ %dec2321, %for.inc2322 ]
  %cmp2308 = icmp sge i32 %jj2169.0, 0
  br i1 %cmp2308, label %for.body2310, label %for.end2324

for.body2310:                                     ; preds = %for.cond2307
  %mtfa2311 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %mtfbase2312 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %idxprom2313 = sext i32 %ii2168.0 to i64
  %arrayidx2314 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2312, i64 0, i64 %idxprom2313
  %i742 = load i32, i32* %arrayidx2314, align 4
  %add2315 = add nsw i32 %i742, %jj2169.0
  %idxprom2316 = sext i32 %add2315 to i64
  %arrayidx2317 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2311, i64 0, i64 %idxprom2316
  %i743 = load i8, i8* %arrayidx2317, align 1
  %mtfa2318 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 31
  %idxprom2319 = sext i32 %kk2170.1 to i64
  %arrayidx2320 = getelementptr inbounds [4096 x i8], [4096 x i8]* %mtfa2318, i64 0, i64 %idxprom2319
  store i8 %i743, i8* %arrayidx2320, align 1
  %dec2321 = add nsw i32 %kk2170.1, -1
  br label %for.inc2322

for.inc2322:                                      ; preds = %for.body2310
  %dec2323 = add nsw i32 %jj2169.0, -1
  br label %for.cond2307

for.end2324:                                      ; preds = %for.cond2307
  %add2325 = add nsw i32 %kk2170.1, 1
  %mtfbase2326 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 32
  %idxprom2327 = sext i32 %ii2168.0 to i64
  %arrayidx2328 = getelementptr inbounds [16 x i32], [16 x i32]* %mtfbase2326, i64 0, i64 %idxprom2327
  store i32 %add2325, i32* %arrayidx2328, align 4
  br label %for.inc2329

for.inc2329:                                      ; preds = %for.end2324
  %dec2330 = add nsw i32 %ii2168.0, -1
  br label %for.cond2303

for.end2331:                                      ; preds = %for.cond2303
  br label %if.end2332

if.end2332:                                       ; preds = %for.end2331, %while.end2289
  br label %if.end2333

if.end2333:                                       ; preds = %if.end2332, %while.end2233
  %uc.0 = phi i8 [ %i724, %while.end2233 ], [ %i731, %if.end2332 ]
  %unzftab2334 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 16
  %seqToUnseq2335 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 30
  %idxprom2336 = zext i8 %uc.0 to i64
  %arrayidx2337 = getelementptr inbounds [256 x i8], [256 x i8]* %seqToUnseq2335, i64 0, i64 %idxprom2336
  %i744 = load i8, i8* %arrayidx2337, align 1
  %idxprom2338 = zext i8 %i744 to i64
  %arrayidx2339 = getelementptr inbounds [256 x i32], [256 x i32]* %unzftab2334, i64 0, i64 %idxprom2338
  %i745 = load i32, i32* %arrayidx2339, align 4
  %inc2340 = add nsw i32 %i745, 1
  store i32 %inc2340, i32* %arrayidx2339, align 4
  %smallDecompress2341 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 10
  %i746 = load i8, i8* %smallDecompress2341, align 4
  %tobool2342 = icmp ne i8 %i746, 0
  br i1 %tobool2342, label %if.then2343, label %if.else2351

if.then2343:                                      ; preds = %if.end2333
  %seqToUnseq2344 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 30
  %idxprom2345 = zext i8 %uc.0 to i64
  %arrayidx2346 = getelementptr inbounds [256 x i8], [256 x i8]* %seqToUnseq2344, i64 0, i64 %idxprom2345
  %i747 = load i8, i8* %arrayidx2346, align 1
  %conv2347 = zext i8 %i747 to i16
  %ll162348 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i748 = load i16*, i16** %ll162348, align 8
  %idxprom2349 = sext i32 %nblock.3 to i64
  %arrayidx2350 = getelementptr inbounds i16, i16* %i748, i64 %idxprom2349
  store i16 %conv2347, i16* %arrayidx2350, align 2
  br label %if.end2359

if.else2351:                                      ; preds = %if.end2333
  %seqToUnseq2352 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 30
  %idxprom2353 = zext i8 %uc.0 to i64
  %arrayidx2354 = getelementptr inbounds [256 x i8], [256 x i8]* %seqToUnseq2352, i64 0, i64 %idxprom2353
  %i749 = load i8, i8* %arrayidx2354, align 1
  %conv2355 = zext i8 %i749 to i32
  %tt2356 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i750 = load i32*, i32** %tt2356, align 8
  %idxprom2357 = sext i32 %nblock.3 to i64
  %arrayidx2358 = getelementptr inbounds i32, i32* %i750, i64 %idxprom2357
  store i32 %conv2355, i32* %arrayidx2358, align 4
  br label %if.end2359

if.end2359:                                       ; preds = %if.else2351, %if.then2343
  %inc2360 = add nsw i32 %nblock.3, 1
  %cmp2361 = icmp eq i32 %groupPos.4, 0
  br i1 %cmp2361, label %if.then2363, label %if.end2388

if.then2363:                                      ; preds = %if.end2359
  %inc2364 = add nsw i32 %groupNo.4, 1
  %cmp2365 = icmp sge i32 %inc2364, %nSelectors.12
  br i1 %cmp2365, label %if.then2367, label %if.end2368

if.then2367:                                      ; preds = %if.then2363
  br label %save_state_and_return

if.end2368:                                       ; preds = %if.then2363
  %selector2369 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 33
  %idxprom2370 = sext i32 %inc2364 to i64
  %arrayidx2371 = getelementptr inbounds [18002 x i8], [18002 x i8]* %selector2369, i64 0, i64 %idxprom2370
  %i751 = load i8, i8* %arrayidx2371, align 1
  %conv2372 = zext i8 %i751 to i32
  %minLens2373 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 39
  %idxprom2374 = sext i32 %conv2372 to i64
  %arrayidx2375 = getelementptr inbounds [6 x i32], [6 x i32]* %minLens2373, i64 0, i64 %idxprom2374
  %i752 = load i32, i32* %arrayidx2375, align 4
  %limit2376 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 36
  %idxprom2377 = sext i32 %conv2372 to i64
  %arrayidx2378 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %limit2376, i64 0, i64 %idxprom2377
  %arrayidx2379 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx2378, i64 0, i64 0
  %perm2380 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 38
  %idxprom2381 = sext i32 %conv2372 to i64
  %arrayidx2382 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %perm2380, i64 0, i64 %idxprom2381
  %arrayidx2383 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx2382, i64 0, i64 0
  %base2384 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 37
  %idxprom2385 = sext i32 %conv2372 to i64
  %arrayidx2386 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %base2384, i64 0, i64 %idxprom2385
  %arrayidx2387 = getelementptr inbounds [258 x i32], [258 x i32]* %arrayidx2386, i64 0, i64 0
  br label %if.end2388

if.end2388:                                       ; preds = %if.end2368, %if.end2359
  %gPerm.10 = phi i32* [ %arrayidx2383, %if.end2368 ], [ %gPerm.4, %if.end2359 ]
  %gBase.10 = phi i32* [ %arrayidx2387, %if.end2368 ], [ %gBase.4, %if.end2359 ]
  %gLimit.10 = phi i32* [ %arrayidx2379, %if.end2368 ], [ %gLimit.4, %if.end2359 ]
  %gMinlen.10 = phi i32 [ %i752, %if.end2368 ], [ %gMinlen.4, %if.end2359 ]
  %gSel.10 = phi i32 [ %conv2372, %if.end2368 ], [ %gSel.4, %if.end2359 ]
  %groupPos.10 = phi i32 [ 50, %if.end2368 ], [ %groupPos.4, %if.end2359 ]
  %groupNo.10 = phi i32 [ %inc2364, %if.end2368 ], [ %groupNo.4, %if.end2359 ]
  %dec2389 = add nsw i32 %groupPos.10, -1
  br label %sw.bb2390

sw.bb2390:                                        ; preds = %if.end2388, %if.end
  %gPerm.11 = phi i32* [ %gPerm.10, %if.end2388 ], [ %i25, %if.end ]
  %gBase.11 = phi i32* [ %gBase.10, %if.end2388 ], [ %i24, %if.end ]
  %gLimit.11 = phi i32* [ %gLimit.10, %if.end2388 ], [ %i23, %if.end ]
  %gMinlen.11 = phi i32 [ %gMinlen.10, %if.end2388 ], [ %i22, %if.end ]
  %gSel.11 = phi i32 [ %gSel.10, %if.end2388 ], [ %i21, %if.end ]
  %zj.7 = phi i32 [ %zj.2, %if.end2388 ], [ %i20, %if.end ]
  %zvec.7 = phi i32 [ %zvec.2, %if.end2388 ], [ %i19, %if.end ]
  %zn.8 = phi i32 [ %gMinlen.10, %if.end2388 ], [ %i18, %if.end ]
  %curr.15 = phi i32 [ %curr.10, %if.end2388 ], [ %i16, %if.end ]
  %N.5 = phi i32 [ %N.0, %if.end2388 ], [ %i15, %if.end ]
  %es.10 = phi i32 [ %es.0, %if.end2388 ], [ %i14, %if.end ]
  %nblock.11 = phi i32 [ %inc2360, %if.end2388 ], [ %i13, %if.end ]
  %nblockMAX.8 = phi i32 [ %nblockMAX.3, %if.end2388 ], [ %i12, %if.end ]
  %nextSym.5 = phi i32 [ %nextSym.0, %if.end2388 ], [ %i11, %if.end ]
  %groupPos.11 = phi i32 [ %dec2389, %if.end2388 ], [ %i10, %if.end ]
  %groupNo.11 = phi i32 [ %groupNo.10, %if.end2388 ], [ %i9, %if.end ]
  %EOB.8 = phi i32 [ %EOB.3, %if.end2388 ], [ %i8, %if.end ]
  %nSelectors.17 = phi i32 [ %nSelectors.12, %if.end2388 ], [ %i7, %if.end ]
  %nGroups.18 = phi i32 [ %nGroups.13, %if.end2388 ], [ %i6, %if.end ]
  %alphaSize.19 = phi i32 [ %alphaSize.14, %if.end2388 ], [ %i5, %if.end ]
  %t.15 = phi i32 [ %t.10, %if.end2388 ], [ %i4, %if.end ]
  %j.23 = phi i32 [ %j.18, %if.end2388 ], [ %i3, %if.end ]
  %i.29 = phi i32 [ %i.24, %if.end2388 ], [ %i2, %if.end ]
  %state2391 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 40, i32* %state2391, align 8
  br label %while.body2393

while.body2393:                                   ; preds = %if.end2441, %sw.bb2390
  %bsLive2394 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i753 = load i32, i32* %bsLive2394, align 4
  %cmp2395 = icmp sge i32 %i753, %zn.8
  br i1 %cmp2395, label %if.then2397, label %if.end2408

if.then2397:                                      ; preds = %while.body2393
  %bsBuff2399 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i754 = load i32, i32* %bsBuff2399, align 8
  %bsLive2400 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i755 = load i32, i32* %bsLive2400, align 4
  %sub2401 = sub nsw i32 %i755, %zn.8
  %shr2402 = lshr i32 %i754, %sub2401
  %shl2403 = shl i32 1, %zn.8
  %sub2404 = sub nsw i32 %shl2403, 1
  %and2405 = and i32 %shr2402, %sub2404
  %bsLive2406 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i756 = load i32, i32* %bsLive2406, align 4
  %sub2407 = sub nsw i32 %i756, %zn.8
  store i32 %sub2407, i32* %bsLive2406, align 4
  br label %while.end2442

if.end2408:                                       ; preds = %while.body2393
  %strm2409 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i757 = load %struct.bz_stream*, %struct.bz_stream** %strm2409, align 8
  %avail_in2410 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i757, i32 0, i32 1
  %i758 = load i32, i32* %avail_in2410, align 8
  %cmp2411 = icmp eq i32 %i758, 0
  br i1 %cmp2411, label %if.then2413, label %if.end2414

if.then2413:                                      ; preds = %if.end2408
  br label %save_state_and_return

if.end2414:                                       ; preds = %if.end2408
  %bsBuff2415 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i759 = load i32, i32* %bsBuff2415, align 8
  %shl2416 = shl i32 %i759, 8
  %strm2417 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i760 = load %struct.bz_stream*, %struct.bz_stream** %strm2417, align 8
  %next_in2418 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i760, i32 0, i32 0
  %i761 = load i8*, i8** %next_in2418, align 8
  %i762 = load i8, i8* %i761, align 1
  %conv2419 = zext i8 %i762 to i32
  %or2420 = or i32 %shl2416, %conv2419
  %bsBuff2421 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or2420, i32* %bsBuff2421, align 8
  %bsLive2422 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i763 = load i32, i32* %bsLive2422, align 4
  %add2423 = add nsw i32 %i763, 8
  store i32 %add2423, i32* %bsLive2422, align 4
  %strm2424 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i764 = load %struct.bz_stream*, %struct.bz_stream** %strm2424, align 8
  %next_in2425 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i764, i32 0, i32 0
  %i765 = load i8*, i8** %next_in2425, align 8
  %incdec.ptr2426 = getelementptr inbounds i8, i8* %i765, i32 1
  store i8* %incdec.ptr2426, i8** %next_in2425, align 8
  %strm2427 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i766 = load %struct.bz_stream*, %struct.bz_stream** %strm2427, align 8
  %avail_in2428 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i766, i32 0, i32 1
  %i767 = load i32, i32* %avail_in2428, align 8
  %dec2429 = add i32 %i767, -1
  store i32 %dec2429, i32* %avail_in2428, align 8
  %strm2430 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i768 = load %struct.bz_stream*, %struct.bz_stream** %strm2430, align 8
  %total_in_lo322431 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i768, i32 0, i32 2
  %i769 = load i32, i32* %total_in_lo322431, align 4
  %inc2432 = add i32 %i769, 1
  store i32 %inc2432, i32* %total_in_lo322431, align 4
  %strm2433 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i770 = load %struct.bz_stream*, %struct.bz_stream** %strm2433, align 8
  %total_in_lo322434 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i770, i32 0, i32 2
  %i771 = load i32, i32* %total_in_lo322434, align 4
  %cmp2435 = icmp eq i32 %i771, 0
  br i1 %cmp2435, label %if.then2437, label %if.end2441

if.then2437:                                      ; preds = %if.end2414
  %strm2438 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i772 = load %struct.bz_stream*, %struct.bz_stream** %strm2438, align 8
  %total_in_hi322439 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i772, i32 0, i32 3
  %i773 = load i32, i32* %total_in_hi322439, align 8
  %inc2440 = add i32 %i773, 1
  store i32 %inc2440, i32* %total_in_hi322439, align 8
  br label %if.end2441

if.end2441:                                       ; preds = %if.then2437, %if.end2414
  br label %while.body2393

while.end2442:                                    ; preds = %if.then2397
  br label %while.body2444

while.body2444:                                   ; preds = %while.end2506, %while.end2442
  %gPerm.12 = phi i32* [ %gPerm.13, %while.end2506 ], [ %gPerm.11, %while.end2442 ]
  %gBase.12 = phi i32* [ %gBase.13, %while.end2506 ], [ %gBase.11, %while.end2442 ]
  %gLimit.12 = phi i32* [ %gLimit.13, %while.end2506 ], [ %gLimit.11, %while.end2442 ]
  %gMinlen.12 = phi i32 [ %gMinlen.13, %while.end2506 ], [ %gMinlen.11, %while.end2442 ]
  %gSel.12 = phi i32 [ %gSel.13, %while.end2506 ], [ %gSel.11, %while.end2442 ]
  %zj.8 = phi i32 [ %and2469, %while.end2506 ], [ %zj.7, %while.end2442 ]
  %zvec.8 = phi i32 [ %or2508, %while.end2506 ], [ %and2405, %while.end2442 ]
  %zn.9 = phi i32 [ %zn.10, %while.end2506 ], [ %zn.8, %while.end2442 ]
  %curr.16 = phi i32 [ %curr.17, %while.end2506 ], [ %curr.15, %while.end2442 ]
  %N.6 = phi i32 [ %N.7, %while.end2506 ], [ %N.5, %while.end2442 ]
  %es.11 = phi i32 [ %es.12, %while.end2506 ], [ %es.10, %while.end2442 ]
  %nblock.12 = phi i32 [ %nblock.13, %while.end2506 ], [ %nblock.11, %while.end2442 ]
  %nblockMAX.9 = phi i32 [ %nblockMAX.10, %while.end2506 ], [ %nblockMAX.8, %while.end2442 ]
  %nextSym.6 = phi i32 [ %nextSym.7, %while.end2506 ], [ %nextSym.5, %while.end2442 ]
  %groupPos.12 = phi i32 [ %groupPos.13, %while.end2506 ], [ %groupPos.11, %while.end2442 ]
  %groupNo.12 = phi i32 [ %groupNo.13, %while.end2506 ], [ %groupNo.11, %while.end2442 ]
  %EOB.9 = phi i32 [ %EOB.10, %while.end2506 ], [ %EOB.8, %while.end2442 ]
  %nSelectors.18 = phi i32 [ %nSelectors.19, %while.end2506 ], [ %nSelectors.17, %while.end2442 ]
  %nGroups.19 = phi i32 [ %nGroups.20, %while.end2506 ], [ %nGroups.18, %while.end2442 ]
  %alphaSize.20 = phi i32 [ %alphaSize.21, %while.end2506 ], [ %alphaSize.19, %while.end2442 ]
  %t.16 = phi i32 [ %t.17, %while.end2506 ], [ %t.15, %while.end2442 ]
  %j.24 = phi i32 [ %j.25, %while.end2506 ], [ %j.23, %while.end2442 ]
  %i.30 = phi i32 [ %i.31, %while.end2506 ], [ %i.29, %while.end2442 ]
  %cmp2445 = icmp sgt i32 %zn.9, 20
  br i1 %cmp2445, label %if.then2447, label %if.end2448

if.then2447:                                      ; preds = %while.body2444
  br label %save_state_and_return

if.end2448:                                       ; preds = %while.body2444
  %idxprom2449 = sext i32 %zn.9 to i64
  %arrayidx2450 = getelementptr inbounds i32, i32* %gLimit.12, i64 %idxprom2449
  %i774 = load i32, i32* %arrayidx2450, align 4
  %cmp2451 = icmp sle i32 %zvec.8, %i774
  br i1 %cmp2451, label %if.then2453, label %if.end2454

if.then2453:                                      ; preds = %if.end2448
  br label %while.end2509

if.end2454:                                       ; preds = %if.end2448
  %inc2455 = add nsw i32 %zn.9, 1
  br label %sw.bb2456

sw.bb2456:                                        ; preds = %if.end2454, %if.end
  %gPerm.13 = phi i32* [ %i25, %if.end ], [ %gPerm.12, %if.end2454 ]
  %gBase.13 = phi i32* [ %i24, %if.end ], [ %gBase.12, %if.end2454 ]
  %gLimit.13 = phi i32* [ %i23, %if.end ], [ %gLimit.12, %if.end2454 ]
  %gMinlen.13 = phi i32 [ %i22, %if.end ], [ %gMinlen.12, %if.end2454 ]
  %gSel.13 = phi i32 [ %i21, %if.end ], [ %gSel.12, %if.end2454 ]
  %zj.9 = phi i32 [ %i20, %if.end ], [ %zj.8, %if.end2454 ]
  %zvec.9 = phi i32 [ %i19, %if.end ], [ %zvec.8, %if.end2454 ]
  %zn.10 = phi i32 [ %i18, %if.end ], [ %inc2455, %if.end2454 ]
  %curr.17 = phi i32 [ %i16, %if.end ], [ %curr.16, %if.end2454 ]
  %N.7 = phi i32 [ %i15, %if.end ], [ %N.6, %if.end2454 ]
  %es.12 = phi i32 [ %i14, %if.end ], [ %es.11, %if.end2454 ]
  %nblock.13 = phi i32 [ %i13, %if.end ], [ %nblock.12, %if.end2454 ]
  %nblockMAX.10 = phi i32 [ %i12, %if.end ], [ %nblockMAX.9, %if.end2454 ]
  %nextSym.7 = phi i32 [ %i11, %if.end ], [ %nextSym.6, %if.end2454 ]
  %groupPos.13 = phi i32 [ %i10, %if.end ], [ %groupPos.12, %if.end2454 ]
  %groupNo.13 = phi i32 [ %i9, %if.end ], [ %groupNo.12, %if.end2454 ]
  %EOB.10 = phi i32 [ %i8, %if.end ], [ %EOB.9, %if.end2454 ]
  %nSelectors.19 = phi i32 [ %i7, %if.end ], [ %nSelectors.18, %if.end2454 ]
  %nGroups.20 = phi i32 [ %i6, %if.end ], [ %nGroups.19, %if.end2454 ]
  %alphaSize.21 = phi i32 [ %i5, %if.end ], [ %alphaSize.20, %if.end2454 ]
  %t.17 = phi i32 [ %i4, %if.end ], [ %t.16, %if.end2454 ]
  %j.25 = phi i32 [ %i3, %if.end ], [ %j.24, %if.end2454 ]
  %i.31 = phi i32 [ %i2, %if.end ], [ %i.30, %if.end2454 ]
  %state2457 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 41, i32* %state2457, align 8
  br label %while.body2459

while.body2459:                                   ; preds = %if.end2505, %sw.bb2456
  %bsLive2460 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i775 = load i32, i32* %bsLive2460, align 4
  %cmp2461 = icmp sge i32 %i775, 1
  br i1 %cmp2461, label %if.then2463, label %if.end2472

if.then2463:                                      ; preds = %while.body2459
  %bsBuff2465 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i776 = load i32, i32* %bsBuff2465, align 8
  %bsLive2466 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i777 = load i32, i32* %bsLive2466, align 4
  %sub2467 = sub nsw i32 %i777, 1
  %shr2468 = lshr i32 %i776, %sub2467
  %and2469 = and i32 %shr2468, 1
  %bsLive2470 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i778 = load i32, i32* %bsLive2470, align 4
  %sub2471 = sub nsw i32 %i778, 1
  store i32 %sub2471, i32* %bsLive2470, align 4
  br label %while.end2506

if.end2472:                                       ; preds = %while.body2459
  %strm2473 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i779 = load %struct.bz_stream*, %struct.bz_stream** %strm2473, align 8
  %avail_in2474 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i779, i32 0, i32 1
  %i780 = load i32, i32* %avail_in2474, align 8
  %cmp2475 = icmp eq i32 %i780, 0
  br i1 %cmp2475, label %if.then2477, label %if.end2478

if.then2477:                                      ; preds = %if.end2472
  br label %save_state_and_return

if.end2478:                                       ; preds = %if.end2472
  %bsBuff2479 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i781 = load i32, i32* %bsBuff2479, align 8
  %shl2480 = shl i32 %i781, 8
  %strm2481 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i782 = load %struct.bz_stream*, %struct.bz_stream** %strm2481, align 8
  %next_in2482 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i782, i32 0, i32 0
  %i783 = load i8*, i8** %next_in2482, align 8
  %i784 = load i8, i8* %i783, align 1
  %conv2483 = zext i8 %i784 to i32
  %or2484 = or i32 %shl2480, %conv2483
  %bsBuff2485 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or2484, i32* %bsBuff2485, align 8
  %bsLive2486 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i785 = load i32, i32* %bsLive2486, align 4
  %add2487 = add nsw i32 %i785, 8
  store i32 %add2487, i32* %bsLive2486, align 4
  %strm2488 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i786 = load %struct.bz_stream*, %struct.bz_stream** %strm2488, align 8
  %next_in2489 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i786, i32 0, i32 0
  %i787 = load i8*, i8** %next_in2489, align 8
  %incdec.ptr2490 = getelementptr inbounds i8, i8* %i787, i32 1
  store i8* %incdec.ptr2490, i8** %next_in2489, align 8
  %strm2491 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i788 = load %struct.bz_stream*, %struct.bz_stream** %strm2491, align 8
  %avail_in2492 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i788, i32 0, i32 1
  %i789 = load i32, i32* %avail_in2492, align 8
  %dec2493 = add i32 %i789, -1
  store i32 %dec2493, i32* %avail_in2492, align 8
  %strm2494 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i790 = load %struct.bz_stream*, %struct.bz_stream** %strm2494, align 8
  %total_in_lo322495 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i790, i32 0, i32 2
  %i791 = load i32, i32* %total_in_lo322495, align 4
  %inc2496 = add i32 %i791, 1
  store i32 %inc2496, i32* %total_in_lo322495, align 4
  %strm2497 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i792 = load %struct.bz_stream*, %struct.bz_stream** %strm2497, align 8
  %total_in_lo322498 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i792, i32 0, i32 2
  %i793 = load i32, i32* %total_in_lo322498, align 4
  %cmp2499 = icmp eq i32 %i793, 0
  br i1 %cmp2499, label %if.then2501, label %if.end2505

if.then2501:                                      ; preds = %if.end2478
  %strm2502 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i794 = load %struct.bz_stream*, %struct.bz_stream** %strm2502, align 8
  %total_in_hi322503 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i794, i32 0, i32 3
  %i795 = load i32, i32* %total_in_hi322503, align 8
  %inc2504 = add i32 %i795, 1
  store i32 %inc2504, i32* %total_in_hi322503, align 8
  br label %if.end2505

if.end2505:                                       ; preds = %if.then2501, %if.end2478
  br label %while.body2459

while.end2506:                                    ; preds = %if.then2463
  %shl2507 = shl i32 %zvec.9, 1
  %or2508 = or i32 %shl2507, %and2469
  br label %while.body2444

while.end2509:                                    ; preds = %if.then2453
  %idxprom2510 = sext i32 %zn.9 to i64
  %arrayidx2511 = getelementptr inbounds i32, i32* %gBase.12, i64 %idxprom2510
  %i796 = load i32, i32* %arrayidx2511, align 4
  %sub2512 = sub nsw i32 %zvec.8, %i796
  %cmp2513 = icmp slt i32 %sub2512, 0
  br i1 %cmp2513, label %if.then2521, label %lor.lhs.false2515

lor.lhs.false2515:                                ; preds = %while.end2509
  %idxprom2516 = sext i32 %zn.9 to i64
  %arrayidx2517 = getelementptr inbounds i32, i32* %gBase.12, i64 %idxprom2516
  %i797 = load i32, i32* %arrayidx2517, align 4
  %sub2518 = sub nsw i32 %zvec.8, %i797
  %cmp2519 = icmp sge i32 %sub2518, 258
  br i1 %cmp2519, label %if.then2521, label %if.end2522

if.then2521:                                      ; preds = %lor.lhs.false2515, %while.end2509
  br label %save_state_and_return

if.end2522:                                       ; preds = %lor.lhs.false2515
  %idxprom2523 = sext i32 %zn.9 to i64
  %arrayidx2524 = getelementptr inbounds i32, i32* %gBase.12, i64 %idxprom2523
  %i798 = load i32, i32* %arrayidx2524, align 4
  %sub2525 = sub nsw i32 %zvec.8, %i798
  %idxprom2526 = sext i32 %sub2525 to i64
  %arrayidx2527 = getelementptr inbounds i32, i32* %gPerm.12, i64 %idxprom2526
  %i799 = load i32, i32* %arrayidx2527, align 4
  br label %while.body1920

while.end2528:                                    ; preds = %if.then1923
  %origPtr2529 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  %i800 = load i32, i32* %origPtr2529, align 8
  %cmp2530 = icmp slt i32 %i800, 0
  br i1 %cmp2530, label %if.then2536, label %lor.lhs.false2532

lor.lhs.false2532:                                ; preds = %while.end2528
  %origPtr2533 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  %i801 = load i32, i32* %origPtr2533, align 8
  %cmp2534 = icmp sge i32 %i801, %nblock.3
  br i1 %cmp2534, label %if.then2536, label %if.end2537

if.then2536:                                      ; preds = %lor.lhs.false2532, %while.end2528
  br label %save_state_and_return

if.end2537:                                       ; preds = %lor.lhs.false2532
  %cftab = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arrayidx2538 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab, i64 0, i64 0
  store i32 0, i32* %arrayidx2538, align 8
  br label %for.cond2539

for.cond2539:                                     ; preds = %for.inc2550, %if.end2537
  %i.32 = phi i32 [ 1, %if.end2537 ], [ %inc2551, %for.inc2550 ]
  %cmp2540 = icmp sle i32 %i.32, 256
  br i1 %cmp2540, label %for.body2542, label %for.end2552

for.body2542:                                     ; preds = %for.cond2539
  %unzftab2543 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 16
  %sub2544 = sub nsw i32 %i.32, 1
  %idxprom2545 = sext i32 %sub2544 to i64
  %arrayidx2546 = getelementptr inbounds [256 x i32], [256 x i32]* %unzftab2543, i64 0, i64 %idxprom2545
  %i802 = load i32, i32* %arrayidx2546, align 4
  %cftab2547 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %idxprom2548 = sext i32 %i.32 to i64
  %arrayidx2549 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2547, i64 0, i64 %idxprom2548
  store i32 %i802, i32* %arrayidx2549, align 4
  br label %for.inc2550

for.inc2550:                                      ; preds = %for.body2542
  %inc2551 = add nsw i32 %i.32, 1
  br label %for.cond2539

for.end2552:                                      ; preds = %for.cond2539
  br label %for.cond2553

for.cond2553:                                     ; preds = %for.inc2565, %for.end2552
  %i.33 = phi i32 [ 1, %for.end2552 ], [ %inc2566, %for.inc2565 ]
  %cmp2554 = icmp sle i32 %i.33, 256
  br i1 %cmp2554, label %for.body2556, label %for.end2567

for.body2556:                                     ; preds = %for.cond2553
  %cftab2557 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %sub2558 = sub nsw i32 %i.33, 1
  %idxprom2559 = sext i32 %sub2558 to i64
  %arrayidx2560 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2557, i64 0, i64 %idxprom2559
  %i803 = load i32, i32* %arrayidx2560, align 4
  %cftab2561 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %idxprom2562 = sext i32 %i.33 to i64
  %arrayidx2563 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2561, i64 0, i64 %idxprom2562
  %i804 = load i32, i32* %arrayidx2563, align 4
  %add2564 = add nsw i32 %i804, %i803
  store i32 %add2564, i32* %arrayidx2563, align 4
  br label %for.inc2565

for.inc2565:                                      ; preds = %for.body2556
  %inc2566 = add nsw i32 %i.33, 1
  br label %for.cond2553

for.end2567:                                      ; preds = %for.cond2553
  br label %for.cond2568

for.cond2568:                                     ; preds = %for.inc2585, %for.end2567
  %i.34 = phi i32 [ 0, %for.end2567 ], [ %inc2586, %for.inc2585 ]
  %cmp2569 = icmp sle i32 %i.34, 256
  br i1 %cmp2569, label %for.body2571, label %for.end2587

for.body2571:                                     ; preds = %for.cond2568
  %cftab2572 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %idxprom2573 = sext i32 %i.34 to i64
  %arrayidx2574 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2572, i64 0, i64 %idxprom2573
  %i805 = load i32, i32* %arrayidx2574, align 4
  %cmp2575 = icmp slt i32 %i805, 0
  br i1 %cmp2575, label %if.then2583, label %lor.lhs.false2577

lor.lhs.false2577:                                ; preds = %for.body2571
  %cftab2578 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %idxprom2579 = sext i32 %i.34 to i64
  %arrayidx2580 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2578, i64 0, i64 %idxprom2579
  %i806 = load i32, i32* %arrayidx2580, align 4
  %cmp2581 = icmp sgt i32 %i806, %nblock.3
  br i1 %cmp2581, label %if.then2583, label %if.end2584

if.then2583:                                      ; preds = %lor.lhs.false2577, %for.body2571
  br label %save_state_and_return

if.end2584:                                       ; preds = %lor.lhs.false2577
  br label %for.inc2585

for.inc2585:                                      ; preds = %if.end2584
  %inc2586 = add nsw i32 %i.34, 1
  br label %for.cond2568

for.end2587:                                      ; preds = %for.cond2568
  %state_out_len = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 3
  store i32 0, i32* %state_out_len, align 8
  %state_out_ch = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 2
  store i8 0, i8* %state_out_ch, align 4
  %calculatedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 25
  store i32 -1, i32* %calculatedBlockCRC, align 8
  %state2588 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 2, i32* %state2588, align 8
  %verbosity2589 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 12
  %i807 = load i32, i32* %verbosity2589, align 4
  %cmp2590 = icmp sge i32 %i807, 2
  br i1 %cmp2590, label %if.then2592, label %if.end2594

if.then2592:                                      ; preds = %for.end2587
  %i808 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call2593 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %i808, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.129, i64 0, i64 0))
  br label %if.end2594

if.end2594:                                       ; preds = %if.then2592, %for.end2587
  %smallDecompress2595 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 10
  %i809 = load i8, i8* %smallDecompress2595, align 4
  %tobool2596 = icmp ne i8 %i809, 0
  br i1 %tobool2596, label %if.then2597, label %if.else2827

if.then2597:                                      ; preds = %if.end2594
  br label %for.cond2598

for.cond2598:                                     ; preds = %for.inc2607, %if.then2597
  %i.35 = phi i32 [ 0, %if.then2597 ], [ %inc2608, %for.inc2607 ]
  %cmp2599 = icmp sle i32 %i.35, 256
  br i1 %cmp2599, label %for.body2601, label %for.end2609

for.body2601:                                     ; preds = %for.cond2598
  %cftab2602 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %idxprom2603 = sext i32 %i.35 to i64
  %arrayidx2604 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2602, i64 0, i64 %idxprom2603
  %i810 = load i32, i32* %arrayidx2604, align 4
  %cftabCopy = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 19
  %idxprom2605 = sext i32 %i.35 to i64
  %arrayidx2606 = getelementptr inbounds [257 x i32], [257 x i32]* %cftabCopy, i64 0, i64 %idxprom2605
  store i32 %i810, i32* %arrayidx2606, align 4
  br label %for.inc2607

for.inc2607:                                      ; preds = %for.body2601
  %inc2608 = add nsw i32 %i.35, 1
  br label %for.cond2598

for.end2609:                                      ; preds = %for.cond2598
  br label %for.cond2610

for.cond2610:                                     ; preds = %for.inc2669, %for.end2609
  %i.36 = phi i32 [ 0, %for.end2609 ], [ %inc2670, %for.inc2669 ]
  %cmp2611 = icmp slt i32 %i.36, %nblock.3
  br i1 %cmp2611, label %for.body2613, label %for.end2671

for.body2613:                                     ; preds = %for.cond2610
  %ll162614 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i811 = load i16*, i16** %ll162614, align 8
  %idxprom2615 = sext i32 %i.36 to i64
  %arrayidx2616 = getelementptr inbounds i16, i16* %i811, i64 %idxprom2615
  %i812 = load i16, i16* %arrayidx2616, align 2
  %conv2617 = trunc i16 %i812 to i8
  %cftabCopy2618 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 19
  %idxprom2619 = zext i8 %conv2617 to i64
  %arrayidx2620 = getelementptr inbounds [257 x i32], [257 x i32]* %cftabCopy2618, i64 0, i64 %idxprom2619
  %i813 = load i32, i32* %arrayidx2620, align 4
  %and2621 = and i32 %i813, 65535
  %conv2622 = trunc i32 %and2621 to i16
  %ll162623 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i814 = load i16*, i16** %ll162623, align 8
  %idxprom2624 = sext i32 %i.36 to i64
  %arrayidx2625 = getelementptr inbounds i16, i16* %i814, i64 %idxprom2624
  store i16 %conv2622, i16* %arrayidx2625, align 2
  %and2626 = and i32 %i.36, 1
  %cmp2627 = icmp eq i32 %and2626, 0
  br i1 %cmp2627, label %if.then2629, label %if.else2646

if.then2629:                                      ; preds = %for.body2613
  %ll42630 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i815 = load i8*, i8** %ll42630, align 8
  %shr2631 = ashr i32 %i.36, 1
  %idxprom2632 = sext i32 %shr2631 to i64
  %arrayidx2633 = getelementptr inbounds i8, i8* %i815, i64 %idxprom2632
  %i816 = load i8, i8* %arrayidx2633, align 1
  %conv2634 = zext i8 %i816 to i32
  %and2635 = and i32 %conv2634, 240
  %cftabCopy2636 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 19
  %idxprom2637 = zext i8 %conv2617 to i64
  %arrayidx2638 = getelementptr inbounds [257 x i32], [257 x i32]* %cftabCopy2636, i64 0, i64 %idxprom2637
  %i817 = load i32, i32* %arrayidx2638, align 4
  %shr2639 = ashr i32 %i817, 16
  %or2640 = or i32 %and2635, %shr2639
  %conv2641 = trunc i32 %or2640 to i8
  %ll42642 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i818 = load i8*, i8** %ll42642, align 8
  %shr2643 = ashr i32 %i.36, 1
  %idxprom2644 = sext i32 %shr2643 to i64
  %arrayidx2645 = getelementptr inbounds i8, i8* %i818, i64 %idxprom2644
  store i8 %conv2641, i8* %arrayidx2645, align 1
  br label %if.end2664

if.else2646:                                      ; preds = %for.body2613
  %ll42647 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i819 = load i8*, i8** %ll42647, align 8
  %shr2648 = ashr i32 %i.36, 1
  %idxprom2649 = sext i32 %shr2648 to i64
  %arrayidx2650 = getelementptr inbounds i8, i8* %i819, i64 %idxprom2649
  %i820 = load i8, i8* %arrayidx2650, align 1
  %conv2651 = zext i8 %i820 to i32
  %and2652 = and i32 %conv2651, 15
  %cftabCopy2653 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 19
  %idxprom2654 = zext i8 %conv2617 to i64
  %arrayidx2655 = getelementptr inbounds [257 x i32], [257 x i32]* %cftabCopy2653, i64 0, i64 %idxprom2654
  %i821 = load i32, i32* %arrayidx2655, align 4
  %shr2656 = ashr i32 %i821, 16
  %shl2657 = shl i32 %shr2656, 4
  %or2658 = or i32 %and2652, %shl2657
  %conv2659 = trunc i32 %or2658 to i8
  %ll42660 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i822 = load i8*, i8** %ll42660, align 8
  %shr2661 = ashr i32 %i.36, 1
  %idxprom2662 = sext i32 %shr2661 to i64
  %arrayidx2663 = getelementptr inbounds i8, i8* %i822, i64 %idxprom2662
  store i8 %conv2659, i8* %arrayidx2663, align 1
  br label %if.end2664

if.end2664:                                       ; preds = %if.else2646, %if.then2629
  %cftabCopy2665 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 19
  %idxprom2666 = zext i8 %conv2617 to i64
  %arrayidx2667 = getelementptr inbounds [257 x i32], [257 x i32]* %cftabCopy2665, i64 0, i64 %idxprom2666
  %i823 = load i32, i32* %arrayidx2667, align 4
  %inc2668 = add nsw i32 %i823, 1
  store i32 %inc2668, i32* %arrayidx2667, align 4
  br label %for.inc2669

for.inc2669:                                      ; preds = %if.end2664
  %inc2670 = add nsw i32 %i.36, 1
  br label %for.cond2610

for.end2671:                                      ; preds = %for.cond2610
  %origPtr2672 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  %i824 = load i32, i32* %origPtr2672, align 8
  %ll162673 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i825 = load i16*, i16** %ll162673, align 8
  %idxprom2674 = sext i32 %i824 to i64
  %arrayidx2675 = getelementptr inbounds i16, i16* %i825, i64 %idxprom2674
  %i826 = load i16, i16* %arrayidx2675, align 2
  %conv2676 = zext i16 %i826 to i32
  %ll42677 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i827 = load i8*, i8** %ll42677, align 8
  %shr2678 = ashr i32 %i824, 1
  %idxprom2679 = sext i32 %shr2678 to i64
  %arrayidx2680 = getelementptr inbounds i8, i8* %i827, i64 %idxprom2679
  %i828 = load i8, i8* %arrayidx2680, align 1
  %conv2681 = zext i8 %i828 to i32
  %shl2682 = shl i32 %i824, 2
  %and2683 = and i32 %shl2682, 4
  %shr2684 = lshr i32 %conv2681, %and2683
  %and2685 = and i32 %shr2684, 15
  %shl2686 = shl i32 %and2685, 16
  %or2687 = or i32 %conv2676, %shl2686
  br label %do.body2688

do.body2688:                                      ; preds = %do.cond2743, %for.end2671
  %j.26 = phi i32 [ %or2687, %for.end2671 ], [ %or2704, %do.cond2743 ]
  %i.37 = phi i32 [ %i824, %for.end2671 ], [ %j.26, %do.cond2743 ]
  %ll162690 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i829 = load i16*, i16** %ll162690, align 8
  %idxprom2691 = sext i32 %j.26 to i64
  %arrayidx2692 = getelementptr inbounds i16, i16* %i829, i64 %idxprom2691
  %i830 = load i16, i16* %arrayidx2692, align 2
  %conv2693 = zext i16 %i830 to i32
  %ll42694 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i831 = load i8*, i8** %ll42694, align 8
  %shr2695 = ashr i32 %j.26, 1
  %idxprom2696 = sext i32 %shr2695 to i64
  %arrayidx2697 = getelementptr inbounds i8, i8* %i831, i64 %idxprom2696
  %i832 = load i8, i8* %arrayidx2697, align 1
  %conv2698 = zext i8 %i832 to i32
  %shl2699 = shl i32 %j.26, 2
  %and2700 = and i32 %shl2699, 4
  %shr2701 = lshr i32 %conv2698, %and2700
  %and2702 = and i32 %shr2701, 15
  %shl2703 = shl i32 %and2702, 16
  %or2704 = or i32 %conv2693, %shl2703
  %and2705 = and i32 %i.37, 65535
  %conv2706 = trunc i32 %and2705 to i16
  %ll162707 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i833 = load i16*, i16** %ll162707, align 8
  %idxprom2708 = sext i32 %j.26 to i64
  %arrayidx2709 = getelementptr inbounds i16, i16* %i833, i64 %idxprom2708
  store i16 %conv2706, i16* %arrayidx2709, align 2
  %and2710 = and i32 %j.26, 1
  %cmp2711 = icmp eq i32 %and2710, 0
  br i1 %cmp2711, label %if.then2713, label %if.else2727

if.then2713:                                      ; preds = %do.body2688
  %ll42714 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i834 = load i8*, i8** %ll42714, align 8
  %shr2715 = ashr i32 %j.26, 1
  %idxprom2716 = sext i32 %shr2715 to i64
  %arrayidx2717 = getelementptr inbounds i8, i8* %i834, i64 %idxprom2716
  %i835 = load i8, i8* %arrayidx2717, align 1
  %conv2718 = zext i8 %i835 to i32
  %and2719 = and i32 %conv2718, 240
  %shr2720 = ashr i32 %i.37, 16
  %or2721 = or i32 %and2719, %shr2720
  %conv2722 = trunc i32 %or2721 to i8
  %ll42723 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i836 = load i8*, i8** %ll42723, align 8
  %shr2724 = ashr i32 %j.26, 1
  %idxprom2725 = sext i32 %shr2724 to i64
  %arrayidx2726 = getelementptr inbounds i8, i8* %i836, i64 %idxprom2725
  store i8 %conv2722, i8* %arrayidx2726, align 1
  br label %if.end2742

if.else2727:                                      ; preds = %do.body2688
  %ll42728 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i837 = load i8*, i8** %ll42728, align 8
  %shr2729 = ashr i32 %j.26, 1
  %idxprom2730 = sext i32 %shr2729 to i64
  %arrayidx2731 = getelementptr inbounds i8, i8* %i837, i64 %idxprom2730
  %i838 = load i8, i8* %arrayidx2731, align 1
  %conv2732 = zext i8 %i838 to i32
  %and2733 = and i32 %conv2732, 15
  %shr2734 = ashr i32 %i.37, 16
  %shl2735 = shl i32 %shr2734, 4
  %or2736 = or i32 %and2733, %shl2735
  %conv2737 = trunc i32 %or2736 to i8
  %ll42738 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i839 = load i8*, i8** %ll42738, align 8
  %shr2739 = ashr i32 %j.26, 1
  %idxprom2740 = sext i32 %shr2739 to i64
  %arrayidx2741 = getelementptr inbounds i8, i8* %i839, i64 %idxprom2740
  store i8 %conv2737, i8* %arrayidx2741, align 1
  br label %if.end2742

if.end2742:                                       ; preds = %if.else2727, %if.then2713
  br label %do.cond2743

do.cond2743:                                      ; preds = %if.end2742
  %origPtr2744 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  %i840 = load i32, i32* %origPtr2744, align 8
  %cmp2745 = icmp ne i32 %j.26, %i840
  br i1 %cmp2745, label %do.body2688, label %do.end2747

do.end2747:                                       ; preds = %do.cond2743
  %origPtr2748 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  %i841 = load i32, i32* %origPtr2748, align 8
  %tPos = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %i841, i32* %tPos, align 4
  %nblock_used = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  store i32 0, i32* %nblock_used, align 4
  %blockRandomised2749 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 4
  %i842 = load i8, i8* %blockRandomised2749, align 4
  %tobool2750 = icmp ne i8 %i842, 0
  br i1 %tobool2750, label %if.then2751, label %if.else2799

if.then2751:                                      ; preds = %do.end2747
  %rNToGo = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 0, i32* %rNToGo, align 8
  %rTPos = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos, align 4
  %tPos2752 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i843 = load i32, i32* %tPos2752, align 4
  %cftab2753 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arraydecay = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2753, i64 0, i64 0
  %call2754 = call i32 @BZ2_indexIntoF(i32 %i843, i32* %arraydecay)
  %k0 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %call2754, i32* %k0, align 8
  %ll162755 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i844 = load i16*, i16** %ll162755, align 8
  %tPos2756 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i845 = load i32, i32* %tPos2756, align 4
  %idxprom2757 = zext i32 %i845 to i64
  %arrayidx2758 = getelementptr inbounds i16, i16* %i844, i64 %idxprom2757
  %i846 = load i16, i16* %arrayidx2758, align 2
  %conv2759 = zext i16 %i846 to i32
  %ll42760 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i847 = load i8*, i8** %ll42760, align 8
  %tPos2761 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i848 = load i32, i32* %tPos2761, align 4
  %shr2762 = lshr i32 %i848, 1
  %idxprom2763 = zext i32 %shr2762 to i64
  %arrayidx2764 = getelementptr inbounds i8, i8* %i847, i64 %idxprom2763
  %i849 = load i8, i8* %arrayidx2764, align 1
  %conv2765 = zext i8 %i849 to i32
  %tPos2766 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i850 = load i32, i32* %tPos2766, align 4
  %shl2767 = shl i32 %i850, 2
  %and2768 = and i32 %shl2767, 4
  %shr2769 = lshr i32 %conv2765, %and2768
  %and2770 = and i32 %shr2769, 15
  %shl2771 = shl i32 %and2770, 16
  %or2772 = or i32 %conv2759, %shl2771
  %tPos2773 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %or2772, i32* %tPos2773, align 4
  %nblock_used2774 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i851 = load i32, i32* %nblock_used2774, align 4
  %inc2775 = add nsw i32 %i851, 1
  store i32 %inc2775, i32* %nblock_used2774, align 4
  %rNToGo2776 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i852 = load i32, i32* %rNToGo2776, align 8
  %cmp2777 = icmp eq i32 %i852, 0
  br i1 %cmp2777, label %if.then2779, label %if.end2792

if.then2779:                                      ; preds = %if.then2751
  %rTPos2780 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i853 = load i32, i32* %rTPos2780, align 4
  %idxprom2781 = sext i32 %i853 to i64
  %arrayidx2782 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom2781
  %i854 = load i32, i32* %arrayidx2782, align 4
  %rNToGo2783 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 %i854, i32* %rNToGo2783, align 8
  %rTPos2784 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i855 = load i32, i32* %rTPos2784, align 4
  %inc2785 = add nsw i32 %i855, 1
  store i32 %inc2785, i32* %rTPos2784, align 4
  %rTPos2786 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i856 = load i32, i32* %rTPos2786, align 4
  %cmp2787 = icmp eq i32 %i856, 512
  br i1 %cmp2787, label %if.then2789, label %if.end2791

if.then2789:                                      ; preds = %if.then2779
  %rTPos2790 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos2790, align 4
  br label %if.end2791

if.end2791:                                       ; preds = %if.then2789, %if.then2779
  br label %if.end2792

if.end2792:                                       ; preds = %if.end2791, %if.then2751
  %rNToGo2793 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i857 = load i32, i32* %rNToGo2793, align 8
  %dec2794 = add nsw i32 %i857, -1
  store i32 %dec2794, i32* %rNToGo2793, align 8
  %rNToGo2795 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i858 = load i32, i32* %rNToGo2795, align 8
  %cmp2796 = icmp eq i32 %i858, 1
  %i859 = zext i1 %cmp2796 to i64
  %cond = select i1 %cmp2796, i32 1, i32 0
  %k02798 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i860 = load i32, i32* %k02798, align 8
  %xor = xor i32 %i860, %cond
  store i32 %xor, i32* %k02798, align 8
  br label %if.end2826

if.else2799:                                      ; preds = %do.end2747
  %tPos2800 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i861 = load i32, i32* %tPos2800, align 4
  %cftab2801 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %arraydecay2802 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2801, i64 0, i64 0
  %call2803 = call i32 @BZ2_indexIntoF(i32 %i861, i32* %arraydecay2802)
  %k02804 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %call2803, i32* %k02804, align 8
  %ll162805 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 21
  %i862 = load i16*, i16** %ll162805, align 8
  %tPos2806 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i863 = load i32, i32* %tPos2806, align 4
  %idxprom2807 = zext i32 %i863 to i64
  %arrayidx2808 = getelementptr inbounds i16, i16* %i862, i64 %idxprom2807
  %i864 = load i16, i16* %arrayidx2808, align 2
  %conv2809 = zext i16 %i864 to i32
  %ll42810 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 22
  %i865 = load i8*, i8** %ll42810, align 8
  %tPos2811 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i866 = load i32, i32* %tPos2811, align 4
  %shr2812 = lshr i32 %i866, 1
  %idxprom2813 = zext i32 %shr2812 to i64
  %arrayidx2814 = getelementptr inbounds i8, i8* %i865, i64 %idxprom2813
  %i867 = load i8, i8* %arrayidx2814, align 1
  %conv2815 = zext i8 %i867 to i32
  %tPos2816 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i868 = load i32, i32* %tPos2816, align 4
  %shl2817 = shl i32 %i868, 2
  %and2818 = and i32 %shl2817, 4
  %shr2819 = lshr i32 %conv2815, %and2818
  %and2820 = and i32 %shr2819, 15
  %shl2821 = shl i32 %and2820, 16
  %or2822 = or i32 %conv2809, %shl2821
  %tPos2823 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %or2822, i32* %tPos2823, align 4
  %nblock_used2824 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i869 = load i32, i32* %nblock_used2824, align 4
  %inc2825 = add nsw i32 %i869, 1
  store i32 %inc2825, i32* %nblock_used2824, align 4
  br label %if.end2826

if.end2826:                                       ; preds = %if.else2799, %if.end2792
  br label %if.end2919

if.else2827:                                      ; preds = %if.end2594
  br label %for.cond2828

for.cond2828:                                     ; preds = %for.inc2849, %if.else2827
  %i.38 = phi i32 [ 0, %if.else2827 ], [ %inc2850, %for.inc2849 ]
  %cmp2829 = icmp slt i32 %i.38, %nblock.3
  br i1 %cmp2829, label %for.body2831, label %for.end2851

for.body2831:                                     ; preds = %for.cond2828
  %tt2832 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i870 = load i32*, i32** %tt2832, align 8
  %idxprom2833 = sext i32 %i.38 to i64
  %arrayidx2834 = getelementptr inbounds i32, i32* %i870, i64 %idxprom2833
  %i871 = load i32, i32* %arrayidx2834, align 4
  %and2835 = and i32 %i871, 255
  %conv2836 = trunc i32 %and2835 to i8
  %shl2837 = shl i32 %i.38, 8
  %tt2838 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i872 = load i32*, i32** %tt2838, align 8
  %cftab2839 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %idxprom2840 = zext i8 %conv2836 to i64
  %arrayidx2841 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2839, i64 0, i64 %idxprom2840
  %i873 = load i32, i32* %arrayidx2841, align 4
  %idxprom2842 = sext i32 %i873 to i64
  %arrayidx2843 = getelementptr inbounds i32, i32* %i872, i64 %idxprom2842
  %i874 = load i32, i32* %arrayidx2843, align 4
  %or2844 = or i32 %i874, %shl2837
  store i32 %or2844, i32* %arrayidx2843, align 4
  %cftab2845 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 18
  %idxprom2846 = zext i8 %conv2836 to i64
  %arrayidx2847 = getelementptr inbounds [257 x i32], [257 x i32]* %cftab2845, i64 0, i64 %idxprom2846
  %i875 = load i32, i32* %arrayidx2847, align 4
  %inc2848 = add nsw i32 %i875, 1
  store i32 %inc2848, i32* %arrayidx2847, align 4
  br label %for.inc2849

for.inc2849:                                      ; preds = %for.body2831
  %inc2850 = add nsw i32 %i.38, 1
  br label %for.cond2828

for.end2851:                                      ; preds = %for.cond2828
  %tt2852 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i876 = load i32*, i32** %tt2852, align 8
  %origPtr2853 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 13
  %i877 = load i32, i32* %origPtr2853, align 8
  %idxprom2854 = sext i32 %i877 to i64
  %arrayidx2855 = getelementptr inbounds i32, i32* %i876, i64 %idxprom2854
  %i878 = load i32, i32* %arrayidx2855, align 4
  %shr2856 = lshr i32 %i878, 8
  %tPos2857 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %shr2856, i32* %tPos2857, align 4
  %nblock_used2858 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  store i32 0, i32* %nblock_used2858, align 4
  %blockRandomised2859 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 4
  %i879 = load i8, i8* %blockRandomised2859, align 4
  %tobool2860 = icmp ne i8 %i879, 0
  br i1 %tobool2860, label %if.then2861, label %if.else2903

if.then2861:                                      ; preds = %for.end2851
  %rNToGo2862 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 0, i32* %rNToGo2862, align 8
  %rTPos2863 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos2863, align 4
  %tt2864 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i880 = load i32*, i32** %tt2864, align 8
  %tPos2865 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i881 = load i32, i32* %tPos2865, align 4
  %idxprom2866 = zext i32 %i881 to i64
  %arrayidx2867 = getelementptr inbounds i32, i32* %i880, i64 %idxprom2866
  %i882 = load i32, i32* %arrayidx2867, align 4
  %tPos2868 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %i882, i32* %tPos2868, align 4
  %tPos2869 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i883 = load i32, i32* %tPos2869, align 4
  %and2870 = and i32 %i883, 255
  %conv2871 = trunc i32 %and2870 to i8
  %conv2872 = zext i8 %conv2871 to i32
  %k02873 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %conv2872, i32* %k02873, align 8
  %tPos2874 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i884 = load i32, i32* %tPos2874, align 4
  %shr2875 = lshr i32 %i884, 8
  store i32 %shr2875, i32* %tPos2874, align 4
  %nblock_used2876 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i885 = load i32, i32* %nblock_used2876, align 4
  %inc2877 = add nsw i32 %i885, 1
  store i32 %inc2877, i32* %nblock_used2876, align 4
  %rNToGo2878 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i886 = load i32, i32* %rNToGo2878, align 8
  %cmp2879 = icmp eq i32 %i886, 0
  br i1 %cmp2879, label %if.then2881, label %if.end2894

if.then2881:                                      ; preds = %if.then2861
  %rTPos2882 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i887 = load i32, i32* %rTPos2882, align 4
  %idxprom2883 = sext i32 %i887 to i64
  %arrayidx2884 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom2883
  %i888 = load i32, i32* %arrayidx2884, align 4
  %rNToGo2885 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  store i32 %i888, i32* %rNToGo2885, align 8
  %rTPos2886 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i889 = load i32, i32* %rTPos2886, align 4
  %inc2887 = add nsw i32 %i889, 1
  store i32 %inc2887, i32* %rTPos2886, align 4
  %rTPos2888 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  %i890 = load i32, i32* %rTPos2888, align 4
  %cmp2889 = icmp eq i32 %i890, 512
  br i1 %cmp2889, label %if.then2891, label %if.end2893

if.then2891:                                      ; preds = %if.then2881
  %rTPos2892 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 6
  store i32 0, i32* %rTPos2892, align 4
  br label %if.end2893

if.end2893:                                       ; preds = %if.then2891, %if.then2881
  br label %if.end2894

if.end2894:                                       ; preds = %if.end2893, %if.then2861
  %rNToGo2895 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i891 = load i32, i32* %rNToGo2895, align 8
  %dec2896 = add nsw i32 %i891, -1
  store i32 %dec2896, i32* %rNToGo2895, align 8
  %rNToGo2897 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 5
  %i892 = load i32, i32* %rNToGo2897, align 8
  %cmp2898 = icmp eq i32 %i892, 1
  %i893 = zext i1 %cmp2898 to i64
  %cond2900 = select i1 %cmp2898, i32 1, i32 0
  %k02901 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  %i894 = load i32, i32* %k02901, align 8
  %xor2902 = xor i32 %i894, %cond2900
  store i32 %xor2902, i32* %k02901, align 8
  br label %if.end2918

if.else2903:                                      ; preds = %for.end2851
  %tt2904 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 20
  %i895 = load i32*, i32** %tt2904, align 8
  %tPos2905 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i896 = load i32, i32* %tPos2905, align 4
  %idxprom2906 = zext i32 %i896 to i64
  %arrayidx2907 = getelementptr inbounds i32, i32* %i895, i64 %idxprom2906
  %i897 = load i32, i32* %arrayidx2907, align 4
  %tPos2908 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  store i32 %i897, i32* %tPos2908, align 4
  %tPos2909 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i898 = load i32, i32* %tPos2909, align 4
  %and2910 = and i32 %i898, 255
  %conv2911 = trunc i32 %and2910 to i8
  %conv2912 = zext i8 %conv2911 to i32
  %k02913 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 15
  store i32 %conv2912, i32* %k02913, align 8
  %tPos2914 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 14
  %i899 = load i32, i32* %tPos2914, align 4
  %shr2915 = lshr i32 %i899, 8
  store i32 %shr2915, i32* %tPos2914, align 4
  %nblock_used2916 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 17
  %i900 = load i32, i32* %nblock_used2916, align 4
  %inc2917 = add nsw i32 %i900, 1
  store i32 %inc2917, i32* %nblock_used2916, align 4
  br label %if.end2918

if.end2918:                                       ; preds = %if.else2903, %if.end2894
  br label %if.end2919

if.end2919:                                       ; preds = %if.end2918, %if.end2826
  %j.27 = phi i32 [ %or2704, %if.end2826 ], [ %j.18, %if.end2918 ]
  %i.39 = phi i32 [ %j.26, %if.end2826 ], [ %i.38, %if.end2918 ]
  br label %save_state_and_return

endhdr_2:                                         ; preds = %if.then326
  br label %sw.bb2920

sw.bb2920:                                        ; preds = %endhdr_2, %if.end
  %state2921 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 42, i32* %state2921, align 8
  br label %while.body2923

while.body2923:                                   ; preds = %if.end2970, %sw.bb2920
  %bsLive2924 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i901 = load i32, i32* %bsLive2924, align 4
  %cmp2925 = icmp sge i32 %i901, 8
  br i1 %cmp2925, label %if.then2927, label %if.end2937

if.then2927:                                      ; preds = %while.body2923
  %bsBuff2929 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i902 = load i32, i32* %bsBuff2929, align 8
  %bsLive2930 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i903 = load i32, i32* %bsLive2930, align 4
  %sub2931 = sub nsw i32 %i903, 8
  %shr2932 = lshr i32 %i902, %sub2931
  %and2933 = and i32 %shr2932, 255
  %bsLive2934 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i904 = load i32, i32* %bsLive2934, align 4
  %sub2935 = sub nsw i32 %i904, 8
  store i32 %sub2935, i32* %bsLive2934, align 4
  %conv2936 = trunc i32 %and2933 to i8
  br label %while.end2971

if.end2937:                                       ; preds = %while.body2923
  %strm2938 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i905 = load %struct.bz_stream*, %struct.bz_stream** %strm2938, align 8
  %avail_in2939 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i905, i32 0, i32 1
  %i906 = load i32, i32* %avail_in2939, align 8
  %cmp2940 = icmp eq i32 %i906, 0
  br i1 %cmp2940, label %if.then2942, label %if.end2943

if.then2942:                                      ; preds = %if.end2937
  br label %save_state_and_return

if.end2943:                                       ; preds = %if.end2937
  %bsBuff2944 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i907 = load i32, i32* %bsBuff2944, align 8
  %shl2945 = shl i32 %i907, 8
  %strm2946 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i908 = load %struct.bz_stream*, %struct.bz_stream** %strm2946, align 8
  %next_in2947 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i908, i32 0, i32 0
  %i909 = load i8*, i8** %next_in2947, align 8
  %i910 = load i8, i8* %i909, align 1
  %conv2948 = zext i8 %i910 to i32
  %or2949 = or i32 %shl2945, %conv2948
  %bsBuff2950 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or2949, i32* %bsBuff2950, align 8
  %bsLive2951 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i911 = load i32, i32* %bsLive2951, align 4
  %add2952 = add nsw i32 %i911, 8
  store i32 %add2952, i32* %bsLive2951, align 4
  %strm2953 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i912 = load %struct.bz_stream*, %struct.bz_stream** %strm2953, align 8
  %next_in2954 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i912, i32 0, i32 0
  %i913 = load i8*, i8** %next_in2954, align 8
  %incdec.ptr2955 = getelementptr inbounds i8, i8* %i913, i32 1
  store i8* %incdec.ptr2955, i8** %next_in2954, align 8
  %strm2956 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i914 = load %struct.bz_stream*, %struct.bz_stream** %strm2956, align 8
  %avail_in2957 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i914, i32 0, i32 1
  %i915 = load i32, i32* %avail_in2957, align 8
  %dec2958 = add i32 %i915, -1
  store i32 %dec2958, i32* %avail_in2957, align 8
  %strm2959 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i916 = load %struct.bz_stream*, %struct.bz_stream** %strm2959, align 8
  %total_in_lo322960 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i916, i32 0, i32 2
  %i917 = load i32, i32* %total_in_lo322960, align 4
  %inc2961 = add i32 %i917, 1
  store i32 %inc2961, i32* %total_in_lo322960, align 4
  %strm2962 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i918 = load %struct.bz_stream*, %struct.bz_stream** %strm2962, align 8
  %total_in_lo322963 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i918, i32 0, i32 2
  %i919 = load i32, i32* %total_in_lo322963, align 4
  %cmp2964 = icmp eq i32 %i919, 0
  br i1 %cmp2964, label %if.then2966, label %if.end2970

if.then2966:                                      ; preds = %if.end2943
  %strm2967 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i920 = load %struct.bz_stream*, %struct.bz_stream** %strm2967, align 8
  %total_in_hi322968 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i920, i32 0, i32 3
  %i921 = load i32, i32* %total_in_hi322968, align 8
  %inc2969 = add i32 %i921, 1
  store i32 %inc2969, i32* %total_in_hi322968, align 8
  br label %if.end2970

if.end2970:                                       ; preds = %if.then2966, %if.end2943
  br label %while.body2923

while.end2971:                                    ; preds = %if.then2927
  %conv2972 = zext i8 %conv2936 to i32
  %cmp2973 = icmp ne i32 %conv2972, 114
  br i1 %cmp2973, label %if.then2975, label %if.end2976

if.then2975:                                      ; preds = %while.end2971
  br label %save_state_and_return

if.end2976:                                       ; preds = %while.end2971
  br label %sw.bb2977

sw.bb2977:                                        ; preds = %if.end2976, %if.end
  %state2978 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 43, i32* %state2978, align 8
  br label %while.body2980

while.body2980:                                   ; preds = %if.end3027, %sw.bb2977
  %bsLive2981 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i922 = load i32, i32* %bsLive2981, align 4
  %cmp2982 = icmp sge i32 %i922, 8
  br i1 %cmp2982, label %if.then2984, label %if.end2994

if.then2984:                                      ; preds = %while.body2980
  %bsBuff2986 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i923 = load i32, i32* %bsBuff2986, align 8
  %bsLive2987 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i924 = load i32, i32* %bsLive2987, align 4
  %sub2988 = sub nsw i32 %i924, 8
  %shr2989 = lshr i32 %i923, %sub2988
  %and2990 = and i32 %shr2989, 255
  %bsLive2991 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i925 = load i32, i32* %bsLive2991, align 4
  %sub2992 = sub nsw i32 %i925, 8
  store i32 %sub2992, i32* %bsLive2991, align 4
  %conv2993 = trunc i32 %and2990 to i8
  br label %while.end3028

if.end2994:                                       ; preds = %while.body2980
  %strm2995 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i926 = load %struct.bz_stream*, %struct.bz_stream** %strm2995, align 8
  %avail_in2996 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i926, i32 0, i32 1
  %i927 = load i32, i32* %avail_in2996, align 8
  %cmp2997 = icmp eq i32 %i927, 0
  br i1 %cmp2997, label %if.then2999, label %if.end3000

if.then2999:                                      ; preds = %if.end2994
  br label %save_state_and_return

if.end3000:                                       ; preds = %if.end2994
  %bsBuff3001 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i928 = load i32, i32* %bsBuff3001, align 8
  %shl3002 = shl i32 %i928, 8
  %strm3003 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i929 = load %struct.bz_stream*, %struct.bz_stream** %strm3003, align 8
  %next_in3004 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i929, i32 0, i32 0
  %i930 = load i8*, i8** %next_in3004, align 8
  %i931 = load i8, i8* %i930, align 1
  %conv3005 = zext i8 %i931 to i32
  %or3006 = or i32 %shl3002, %conv3005
  %bsBuff3007 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or3006, i32* %bsBuff3007, align 8
  %bsLive3008 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i932 = load i32, i32* %bsLive3008, align 4
  %add3009 = add nsw i32 %i932, 8
  store i32 %add3009, i32* %bsLive3008, align 4
  %strm3010 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i933 = load %struct.bz_stream*, %struct.bz_stream** %strm3010, align 8
  %next_in3011 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i933, i32 0, i32 0
  %i934 = load i8*, i8** %next_in3011, align 8
  %incdec.ptr3012 = getelementptr inbounds i8, i8* %i934, i32 1
  store i8* %incdec.ptr3012, i8** %next_in3011, align 8
  %strm3013 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i935 = load %struct.bz_stream*, %struct.bz_stream** %strm3013, align 8
  %avail_in3014 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i935, i32 0, i32 1
  %i936 = load i32, i32* %avail_in3014, align 8
  %dec3015 = add i32 %i936, -1
  store i32 %dec3015, i32* %avail_in3014, align 8
  %strm3016 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i937 = load %struct.bz_stream*, %struct.bz_stream** %strm3016, align 8
  %total_in_lo323017 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i937, i32 0, i32 2
  %i938 = load i32, i32* %total_in_lo323017, align 4
  %inc3018 = add i32 %i938, 1
  store i32 %inc3018, i32* %total_in_lo323017, align 4
  %strm3019 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i939 = load %struct.bz_stream*, %struct.bz_stream** %strm3019, align 8
  %total_in_lo323020 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i939, i32 0, i32 2
  %i940 = load i32, i32* %total_in_lo323020, align 4
  %cmp3021 = icmp eq i32 %i940, 0
  br i1 %cmp3021, label %if.then3023, label %if.end3027

if.then3023:                                      ; preds = %if.end3000
  %strm3024 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i941 = load %struct.bz_stream*, %struct.bz_stream** %strm3024, align 8
  %total_in_hi323025 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i941, i32 0, i32 3
  %i942 = load i32, i32* %total_in_hi323025, align 8
  %inc3026 = add i32 %i942, 1
  store i32 %inc3026, i32* %total_in_hi323025, align 8
  br label %if.end3027

if.end3027:                                       ; preds = %if.then3023, %if.end3000
  br label %while.body2980

while.end3028:                                    ; preds = %if.then2984
  %conv3029 = zext i8 %conv2993 to i32
  %cmp3030 = icmp ne i32 %conv3029, 69
  br i1 %cmp3030, label %if.then3032, label %if.end3033

if.then3032:                                      ; preds = %while.end3028
  br label %save_state_and_return

if.end3033:                                       ; preds = %while.end3028
  br label %sw.bb3034

sw.bb3034:                                        ; preds = %if.end3033, %if.end
  %state3035 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 44, i32* %state3035, align 8
  br label %while.body3037

while.body3037:                                   ; preds = %if.end3084, %sw.bb3034
  %bsLive3038 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i943 = load i32, i32* %bsLive3038, align 4
  %cmp3039 = icmp sge i32 %i943, 8
  br i1 %cmp3039, label %if.then3041, label %if.end3051

if.then3041:                                      ; preds = %while.body3037
  %bsBuff3043 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i944 = load i32, i32* %bsBuff3043, align 8
  %bsLive3044 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i945 = load i32, i32* %bsLive3044, align 4
  %sub3045 = sub nsw i32 %i945, 8
  %shr3046 = lshr i32 %i944, %sub3045
  %and3047 = and i32 %shr3046, 255
  %bsLive3048 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i946 = load i32, i32* %bsLive3048, align 4
  %sub3049 = sub nsw i32 %i946, 8
  store i32 %sub3049, i32* %bsLive3048, align 4
  %conv3050 = trunc i32 %and3047 to i8
  br label %while.end3085

if.end3051:                                       ; preds = %while.body3037
  %strm3052 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i947 = load %struct.bz_stream*, %struct.bz_stream** %strm3052, align 8
  %avail_in3053 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i947, i32 0, i32 1
  %i948 = load i32, i32* %avail_in3053, align 8
  %cmp3054 = icmp eq i32 %i948, 0
  br i1 %cmp3054, label %if.then3056, label %if.end3057

if.then3056:                                      ; preds = %if.end3051
  br label %save_state_and_return

if.end3057:                                       ; preds = %if.end3051
  %bsBuff3058 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i949 = load i32, i32* %bsBuff3058, align 8
  %shl3059 = shl i32 %i949, 8
  %strm3060 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i950 = load %struct.bz_stream*, %struct.bz_stream** %strm3060, align 8
  %next_in3061 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i950, i32 0, i32 0
  %i951 = load i8*, i8** %next_in3061, align 8
  %i952 = load i8, i8* %i951, align 1
  %conv3062 = zext i8 %i952 to i32
  %or3063 = or i32 %shl3059, %conv3062
  %bsBuff3064 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or3063, i32* %bsBuff3064, align 8
  %bsLive3065 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i953 = load i32, i32* %bsLive3065, align 4
  %add3066 = add nsw i32 %i953, 8
  store i32 %add3066, i32* %bsLive3065, align 4
  %strm3067 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i954 = load %struct.bz_stream*, %struct.bz_stream** %strm3067, align 8
  %next_in3068 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i954, i32 0, i32 0
  %i955 = load i8*, i8** %next_in3068, align 8
  %incdec.ptr3069 = getelementptr inbounds i8, i8* %i955, i32 1
  store i8* %incdec.ptr3069, i8** %next_in3068, align 8
  %strm3070 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i956 = load %struct.bz_stream*, %struct.bz_stream** %strm3070, align 8
  %avail_in3071 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i956, i32 0, i32 1
  %i957 = load i32, i32* %avail_in3071, align 8
  %dec3072 = add i32 %i957, -1
  store i32 %dec3072, i32* %avail_in3071, align 8
  %strm3073 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i958 = load %struct.bz_stream*, %struct.bz_stream** %strm3073, align 8
  %total_in_lo323074 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i958, i32 0, i32 2
  %i959 = load i32, i32* %total_in_lo323074, align 4
  %inc3075 = add i32 %i959, 1
  store i32 %inc3075, i32* %total_in_lo323074, align 4
  %strm3076 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i960 = load %struct.bz_stream*, %struct.bz_stream** %strm3076, align 8
  %total_in_lo323077 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i960, i32 0, i32 2
  %i961 = load i32, i32* %total_in_lo323077, align 4
  %cmp3078 = icmp eq i32 %i961, 0
  br i1 %cmp3078, label %if.then3080, label %if.end3084

if.then3080:                                      ; preds = %if.end3057
  %strm3081 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i962 = load %struct.bz_stream*, %struct.bz_stream** %strm3081, align 8
  %total_in_hi323082 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i962, i32 0, i32 3
  %i963 = load i32, i32* %total_in_hi323082, align 8
  %inc3083 = add i32 %i963, 1
  store i32 %inc3083, i32* %total_in_hi323082, align 8
  br label %if.end3084

if.end3084:                                       ; preds = %if.then3080, %if.end3057
  br label %while.body3037

while.end3085:                                    ; preds = %if.then3041
  %conv3086 = zext i8 %conv3050 to i32
  %cmp3087 = icmp ne i32 %conv3086, 56
  br i1 %cmp3087, label %if.then3089, label %if.end3090

if.then3089:                                      ; preds = %while.end3085
  br label %save_state_and_return

if.end3090:                                       ; preds = %while.end3085
  br label %sw.bb3091

sw.bb3091:                                        ; preds = %if.end3090, %if.end
  %state3092 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 45, i32* %state3092, align 8
  br label %while.body3094

while.body3094:                                   ; preds = %if.end3141, %sw.bb3091
  %bsLive3095 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i964 = load i32, i32* %bsLive3095, align 4
  %cmp3096 = icmp sge i32 %i964, 8
  br i1 %cmp3096, label %if.then3098, label %if.end3108

if.then3098:                                      ; preds = %while.body3094
  %bsBuff3100 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i965 = load i32, i32* %bsBuff3100, align 8
  %bsLive3101 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i966 = load i32, i32* %bsLive3101, align 4
  %sub3102 = sub nsw i32 %i966, 8
  %shr3103 = lshr i32 %i965, %sub3102
  %and3104 = and i32 %shr3103, 255
  %bsLive3105 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i967 = load i32, i32* %bsLive3105, align 4
  %sub3106 = sub nsw i32 %i967, 8
  store i32 %sub3106, i32* %bsLive3105, align 4
  %conv3107 = trunc i32 %and3104 to i8
  br label %while.end3142

if.end3108:                                       ; preds = %while.body3094
  %strm3109 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i968 = load %struct.bz_stream*, %struct.bz_stream** %strm3109, align 8
  %avail_in3110 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i968, i32 0, i32 1
  %i969 = load i32, i32* %avail_in3110, align 8
  %cmp3111 = icmp eq i32 %i969, 0
  br i1 %cmp3111, label %if.then3113, label %if.end3114

if.then3113:                                      ; preds = %if.end3108
  br label %save_state_and_return

if.end3114:                                       ; preds = %if.end3108
  %bsBuff3115 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i970 = load i32, i32* %bsBuff3115, align 8
  %shl3116 = shl i32 %i970, 8
  %strm3117 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i971 = load %struct.bz_stream*, %struct.bz_stream** %strm3117, align 8
  %next_in3118 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i971, i32 0, i32 0
  %i972 = load i8*, i8** %next_in3118, align 8
  %i973 = load i8, i8* %i972, align 1
  %conv3119 = zext i8 %i973 to i32
  %or3120 = or i32 %shl3116, %conv3119
  %bsBuff3121 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or3120, i32* %bsBuff3121, align 8
  %bsLive3122 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i974 = load i32, i32* %bsLive3122, align 4
  %add3123 = add nsw i32 %i974, 8
  store i32 %add3123, i32* %bsLive3122, align 4
  %strm3124 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i975 = load %struct.bz_stream*, %struct.bz_stream** %strm3124, align 8
  %next_in3125 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i975, i32 0, i32 0
  %i976 = load i8*, i8** %next_in3125, align 8
  %incdec.ptr3126 = getelementptr inbounds i8, i8* %i976, i32 1
  store i8* %incdec.ptr3126, i8** %next_in3125, align 8
  %strm3127 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i977 = load %struct.bz_stream*, %struct.bz_stream** %strm3127, align 8
  %avail_in3128 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i977, i32 0, i32 1
  %i978 = load i32, i32* %avail_in3128, align 8
  %dec3129 = add i32 %i978, -1
  store i32 %dec3129, i32* %avail_in3128, align 8
  %strm3130 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i979 = load %struct.bz_stream*, %struct.bz_stream** %strm3130, align 8
  %total_in_lo323131 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i979, i32 0, i32 2
  %i980 = load i32, i32* %total_in_lo323131, align 4
  %inc3132 = add i32 %i980, 1
  store i32 %inc3132, i32* %total_in_lo323131, align 4
  %strm3133 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i981 = load %struct.bz_stream*, %struct.bz_stream** %strm3133, align 8
  %total_in_lo323134 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i981, i32 0, i32 2
  %i982 = load i32, i32* %total_in_lo323134, align 4
  %cmp3135 = icmp eq i32 %i982, 0
  br i1 %cmp3135, label %if.then3137, label %if.end3141

if.then3137:                                      ; preds = %if.end3114
  %strm3138 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i983 = load %struct.bz_stream*, %struct.bz_stream** %strm3138, align 8
  %total_in_hi323139 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i983, i32 0, i32 3
  %i984 = load i32, i32* %total_in_hi323139, align 8
  %inc3140 = add i32 %i984, 1
  store i32 %inc3140, i32* %total_in_hi323139, align 8
  br label %if.end3141

if.end3141:                                       ; preds = %if.then3137, %if.end3114
  br label %while.body3094

while.end3142:                                    ; preds = %if.then3098
  %conv3143 = zext i8 %conv3107 to i32
  %cmp3144 = icmp ne i32 %conv3143, 80
  br i1 %cmp3144, label %if.then3146, label %if.end3147

if.then3146:                                      ; preds = %while.end3142
  br label %save_state_and_return

if.end3147:                                       ; preds = %while.end3142
  br label %sw.bb3148

sw.bb3148:                                        ; preds = %if.end3147, %if.end
  %state3149 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 46, i32* %state3149, align 8
  br label %while.body3151

while.body3151:                                   ; preds = %if.end3198, %sw.bb3148
  %bsLive3152 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i985 = load i32, i32* %bsLive3152, align 4
  %cmp3153 = icmp sge i32 %i985, 8
  br i1 %cmp3153, label %if.then3155, label %if.end3165

if.then3155:                                      ; preds = %while.body3151
  %bsBuff3157 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i986 = load i32, i32* %bsBuff3157, align 8
  %bsLive3158 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i987 = load i32, i32* %bsLive3158, align 4
  %sub3159 = sub nsw i32 %i987, 8
  %shr3160 = lshr i32 %i986, %sub3159
  %and3161 = and i32 %shr3160, 255
  %bsLive3162 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i988 = load i32, i32* %bsLive3162, align 4
  %sub3163 = sub nsw i32 %i988, 8
  store i32 %sub3163, i32* %bsLive3162, align 4
  %conv3164 = trunc i32 %and3161 to i8
  br label %while.end3199

if.end3165:                                       ; preds = %while.body3151
  %strm3166 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i989 = load %struct.bz_stream*, %struct.bz_stream** %strm3166, align 8
  %avail_in3167 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i989, i32 0, i32 1
  %i990 = load i32, i32* %avail_in3167, align 8
  %cmp3168 = icmp eq i32 %i990, 0
  br i1 %cmp3168, label %if.then3170, label %if.end3171

if.then3170:                                      ; preds = %if.end3165
  br label %save_state_and_return

if.end3171:                                       ; preds = %if.end3165
  %bsBuff3172 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i991 = load i32, i32* %bsBuff3172, align 8
  %shl3173 = shl i32 %i991, 8
  %strm3174 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i992 = load %struct.bz_stream*, %struct.bz_stream** %strm3174, align 8
  %next_in3175 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i992, i32 0, i32 0
  %i993 = load i8*, i8** %next_in3175, align 8
  %i994 = load i8, i8* %i993, align 1
  %conv3176 = zext i8 %i994 to i32
  %or3177 = or i32 %shl3173, %conv3176
  %bsBuff3178 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or3177, i32* %bsBuff3178, align 8
  %bsLive3179 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i995 = load i32, i32* %bsLive3179, align 4
  %add3180 = add nsw i32 %i995, 8
  store i32 %add3180, i32* %bsLive3179, align 4
  %strm3181 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i996 = load %struct.bz_stream*, %struct.bz_stream** %strm3181, align 8
  %next_in3182 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i996, i32 0, i32 0
  %i997 = load i8*, i8** %next_in3182, align 8
  %incdec.ptr3183 = getelementptr inbounds i8, i8* %i997, i32 1
  store i8* %incdec.ptr3183, i8** %next_in3182, align 8
  %strm3184 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i998 = load %struct.bz_stream*, %struct.bz_stream** %strm3184, align 8
  %avail_in3185 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i998, i32 0, i32 1
  %i999 = load i32, i32* %avail_in3185, align 8
  %dec3186 = add i32 %i999, -1
  store i32 %dec3186, i32* %avail_in3185, align 8
  %strm3187 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1000 = load %struct.bz_stream*, %struct.bz_stream** %strm3187, align 8
  %total_in_lo323188 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1000, i32 0, i32 2
  %i1001 = load i32, i32* %total_in_lo323188, align 4
  %inc3189 = add i32 %i1001, 1
  store i32 %inc3189, i32* %total_in_lo323188, align 4
  %strm3190 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1002 = load %struct.bz_stream*, %struct.bz_stream** %strm3190, align 8
  %total_in_lo323191 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1002, i32 0, i32 2
  %i1003 = load i32, i32* %total_in_lo323191, align 4
  %cmp3192 = icmp eq i32 %i1003, 0
  br i1 %cmp3192, label %if.then3194, label %if.end3198

if.then3194:                                      ; preds = %if.end3171
  %strm3195 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1004 = load %struct.bz_stream*, %struct.bz_stream** %strm3195, align 8
  %total_in_hi323196 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1004, i32 0, i32 3
  %i1005 = load i32, i32* %total_in_hi323196, align 8
  %inc3197 = add i32 %i1005, 1
  store i32 %inc3197, i32* %total_in_hi323196, align 8
  br label %if.end3198

if.end3198:                                       ; preds = %if.then3194, %if.end3171
  br label %while.body3151

while.end3199:                                    ; preds = %if.then3155
  %conv3200 = zext i8 %conv3164 to i32
  %cmp3201 = icmp ne i32 %conv3200, 144
  br i1 %cmp3201, label %if.then3203, label %if.end3204

if.then3203:                                      ; preds = %while.end3199
  br label %save_state_and_return

if.end3204:                                       ; preds = %while.end3199
  %storedCombinedCRC = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 24
  store i32 0, i32* %storedCombinedCRC, align 4
  br label %sw.bb3205

sw.bb3205:                                        ; preds = %if.end3204, %if.end
  %state3206 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 47, i32* %state3206, align 8
  br label %while.body3208

while.body3208:                                   ; preds = %if.end3255, %sw.bb3205
  %bsLive3209 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1006 = load i32, i32* %bsLive3209, align 4
  %cmp3210 = icmp sge i32 %i1006, 8
  br i1 %cmp3210, label %if.then3212, label %if.end3222

if.then3212:                                      ; preds = %while.body3208
  %bsBuff3214 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i1007 = load i32, i32* %bsBuff3214, align 8
  %bsLive3215 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1008 = load i32, i32* %bsLive3215, align 4
  %sub3216 = sub nsw i32 %i1008, 8
  %shr3217 = lshr i32 %i1007, %sub3216
  %and3218 = and i32 %shr3217, 255
  %bsLive3219 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1009 = load i32, i32* %bsLive3219, align 4
  %sub3220 = sub nsw i32 %i1009, 8
  store i32 %sub3220, i32* %bsLive3219, align 4
  %conv3221 = trunc i32 %and3218 to i8
  br label %while.end3256

if.end3222:                                       ; preds = %while.body3208
  %strm3223 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1010 = load %struct.bz_stream*, %struct.bz_stream** %strm3223, align 8
  %avail_in3224 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1010, i32 0, i32 1
  %i1011 = load i32, i32* %avail_in3224, align 8
  %cmp3225 = icmp eq i32 %i1011, 0
  br i1 %cmp3225, label %if.then3227, label %if.end3228

if.then3227:                                      ; preds = %if.end3222
  br label %save_state_and_return

if.end3228:                                       ; preds = %if.end3222
  %bsBuff3229 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i1012 = load i32, i32* %bsBuff3229, align 8
  %shl3230 = shl i32 %i1012, 8
  %strm3231 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1013 = load %struct.bz_stream*, %struct.bz_stream** %strm3231, align 8
  %next_in3232 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1013, i32 0, i32 0
  %i1014 = load i8*, i8** %next_in3232, align 8
  %i1015 = load i8, i8* %i1014, align 1
  %conv3233 = zext i8 %i1015 to i32
  %or3234 = or i32 %shl3230, %conv3233
  %bsBuff3235 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or3234, i32* %bsBuff3235, align 8
  %bsLive3236 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1016 = load i32, i32* %bsLive3236, align 4
  %add3237 = add nsw i32 %i1016, 8
  store i32 %add3237, i32* %bsLive3236, align 4
  %strm3238 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1017 = load %struct.bz_stream*, %struct.bz_stream** %strm3238, align 8
  %next_in3239 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1017, i32 0, i32 0
  %i1018 = load i8*, i8** %next_in3239, align 8
  %incdec.ptr3240 = getelementptr inbounds i8, i8* %i1018, i32 1
  store i8* %incdec.ptr3240, i8** %next_in3239, align 8
  %strm3241 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1019 = load %struct.bz_stream*, %struct.bz_stream** %strm3241, align 8
  %avail_in3242 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1019, i32 0, i32 1
  %i1020 = load i32, i32* %avail_in3242, align 8
  %dec3243 = add i32 %i1020, -1
  store i32 %dec3243, i32* %avail_in3242, align 8
  %strm3244 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1021 = load %struct.bz_stream*, %struct.bz_stream** %strm3244, align 8
  %total_in_lo323245 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1021, i32 0, i32 2
  %i1022 = load i32, i32* %total_in_lo323245, align 4
  %inc3246 = add i32 %i1022, 1
  store i32 %inc3246, i32* %total_in_lo323245, align 4
  %strm3247 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1023 = load %struct.bz_stream*, %struct.bz_stream** %strm3247, align 8
  %total_in_lo323248 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1023, i32 0, i32 2
  %i1024 = load i32, i32* %total_in_lo323248, align 4
  %cmp3249 = icmp eq i32 %i1024, 0
  br i1 %cmp3249, label %if.then3251, label %if.end3255

if.then3251:                                      ; preds = %if.end3228
  %strm3252 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1025 = load %struct.bz_stream*, %struct.bz_stream** %strm3252, align 8
  %total_in_hi323253 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1025, i32 0, i32 3
  %i1026 = load i32, i32* %total_in_hi323253, align 8
  %inc3254 = add i32 %i1026, 1
  store i32 %inc3254, i32* %total_in_hi323253, align 8
  br label %if.end3255

if.end3255:                                       ; preds = %if.then3251, %if.end3228
  br label %while.body3208

while.end3256:                                    ; preds = %if.then3212
  %storedCombinedCRC3257 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 24
  %i1027 = load i32, i32* %storedCombinedCRC3257, align 4
  %shl3258 = shl i32 %i1027, 8
  %conv3259 = zext i8 %conv3221 to i32
  %or3260 = or i32 %shl3258, %conv3259
  %storedCombinedCRC3261 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 24
  store i32 %or3260, i32* %storedCombinedCRC3261, align 4
  br label %sw.bb3262

sw.bb3262:                                        ; preds = %while.end3256, %if.end
  %state3263 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 48, i32* %state3263, align 8
  br label %while.body3265

while.body3265:                                   ; preds = %if.end3312, %sw.bb3262
  %bsLive3266 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1028 = load i32, i32* %bsLive3266, align 4
  %cmp3267 = icmp sge i32 %i1028, 8
  br i1 %cmp3267, label %if.then3269, label %if.end3279

if.then3269:                                      ; preds = %while.body3265
  %bsBuff3271 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i1029 = load i32, i32* %bsBuff3271, align 8
  %bsLive3272 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1030 = load i32, i32* %bsLive3272, align 4
  %sub3273 = sub nsw i32 %i1030, 8
  %shr3274 = lshr i32 %i1029, %sub3273
  %and3275 = and i32 %shr3274, 255
  %bsLive3276 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1031 = load i32, i32* %bsLive3276, align 4
  %sub3277 = sub nsw i32 %i1031, 8
  store i32 %sub3277, i32* %bsLive3276, align 4
  %conv3278 = trunc i32 %and3275 to i8
  br label %while.end3313

if.end3279:                                       ; preds = %while.body3265
  %strm3280 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1032 = load %struct.bz_stream*, %struct.bz_stream** %strm3280, align 8
  %avail_in3281 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1032, i32 0, i32 1
  %i1033 = load i32, i32* %avail_in3281, align 8
  %cmp3282 = icmp eq i32 %i1033, 0
  br i1 %cmp3282, label %if.then3284, label %if.end3285

if.then3284:                                      ; preds = %if.end3279
  br label %save_state_and_return

if.end3285:                                       ; preds = %if.end3279
  %bsBuff3286 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i1034 = load i32, i32* %bsBuff3286, align 8
  %shl3287 = shl i32 %i1034, 8
  %strm3288 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1035 = load %struct.bz_stream*, %struct.bz_stream** %strm3288, align 8
  %next_in3289 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1035, i32 0, i32 0
  %i1036 = load i8*, i8** %next_in3289, align 8
  %i1037 = load i8, i8* %i1036, align 1
  %conv3290 = zext i8 %i1037 to i32
  %or3291 = or i32 %shl3287, %conv3290
  %bsBuff3292 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or3291, i32* %bsBuff3292, align 8
  %bsLive3293 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1038 = load i32, i32* %bsLive3293, align 4
  %add3294 = add nsw i32 %i1038, 8
  store i32 %add3294, i32* %bsLive3293, align 4
  %strm3295 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1039 = load %struct.bz_stream*, %struct.bz_stream** %strm3295, align 8
  %next_in3296 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1039, i32 0, i32 0
  %i1040 = load i8*, i8** %next_in3296, align 8
  %incdec.ptr3297 = getelementptr inbounds i8, i8* %i1040, i32 1
  store i8* %incdec.ptr3297, i8** %next_in3296, align 8
  %strm3298 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1041 = load %struct.bz_stream*, %struct.bz_stream** %strm3298, align 8
  %avail_in3299 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1041, i32 0, i32 1
  %i1042 = load i32, i32* %avail_in3299, align 8
  %dec3300 = add i32 %i1042, -1
  store i32 %dec3300, i32* %avail_in3299, align 8
  %strm3301 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1043 = load %struct.bz_stream*, %struct.bz_stream** %strm3301, align 8
  %total_in_lo323302 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1043, i32 0, i32 2
  %i1044 = load i32, i32* %total_in_lo323302, align 4
  %inc3303 = add i32 %i1044, 1
  store i32 %inc3303, i32* %total_in_lo323302, align 4
  %strm3304 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1045 = load %struct.bz_stream*, %struct.bz_stream** %strm3304, align 8
  %total_in_lo323305 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1045, i32 0, i32 2
  %i1046 = load i32, i32* %total_in_lo323305, align 4
  %cmp3306 = icmp eq i32 %i1046, 0
  br i1 %cmp3306, label %if.then3308, label %if.end3312

if.then3308:                                      ; preds = %if.end3285
  %strm3309 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1047 = load %struct.bz_stream*, %struct.bz_stream** %strm3309, align 8
  %total_in_hi323310 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1047, i32 0, i32 3
  %i1048 = load i32, i32* %total_in_hi323310, align 8
  %inc3311 = add i32 %i1048, 1
  store i32 %inc3311, i32* %total_in_hi323310, align 8
  br label %if.end3312

if.end3312:                                       ; preds = %if.then3308, %if.end3285
  br label %while.body3265

while.end3313:                                    ; preds = %if.then3269
  %storedCombinedCRC3314 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 24
  %i1049 = load i32, i32* %storedCombinedCRC3314, align 4
  %shl3315 = shl i32 %i1049, 8
  %conv3316 = zext i8 %conv3278 to i32
  %or3317 = or i32 %shl3315, %conv3316
  %storedCombinedCRC3318 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 24
  store i32 %or3317, i32* %storedCombinedCRC3318, align 4
  br label %sw.bb3319

sw.bb3319:                                        ; preds = %while.end3313, %if.end
  %state3320 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 49, i32* %state3320, align 8
  br label %while.body3322

while.body3322:                                   ; preds = %if.end3369, %sw.bb3319
  %bsLive3323 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1050 = load i32, i32* %bsLive3323, align 4
  %cmp3324 = icmp sge i32 %i1050, 8
  br i1 %cmp3324, label %if.then3326, label %if.end3336

if.then3326:                                      ; preds = %while.body3322
  %bsBuff3328 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i1051 = load i32, i32* %bsBuff3328, align 8
  %bsLive3329 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1052 = load i32, i32* %bsLive3329, align 4
  %sub3330 = sub nsw i32 %i1052, 8
  %shr3331 = lshr i32 %i1051, %sub3330
  %and3332 = and i32 %shr3331, 255
  %bsLive3333 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1053 = load i32, i32* %bsLive3333, align 4
  %sub3334 = sub nsw i32 %i1053, 8
  store i32 %sub3334, i32* %bsLive3333, align 4
  %conv3335 = trunc i32 %and3332 to i8
  br label %while.end3370

if.end3336:                                       ; preds = %while.body3322
  %strm3337 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1054 = load %struct.bz_stream*, %struct.bz_stream** %strm3337, align 8
  %avail_in3338 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1054, i32 0, i32 1
  %i1055 = load i32, i32* %avail_in3338, align 8
  %cmp3339 = icmp eq i32 %i1055, 0
  br i1 %cmp3339, label %if.then3341, label %if.end3342

if.then3341:                                      ; preds = %if.end3336
  br label %save_state_and_return

if.end3342:                                       ; preds = %if.end3336
  %bsBuff3343 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i1056 = load i32, i32* %bsBuff3343, align 8
  %shl3344 = shl i32 %i1056, 8
  %strm3345 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1057 = load %struct.bz_stream*, %struct.bz_stream** %strm3345, align 8
  %next_in3346 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1057, i32 0, i32 0
  %i1058 = load i8*, i8** %next_in3346, align 8
  %i1059 = load i8, i8* %i1058, align 1
  %conv3347 = zext i8 %i1059 to i32
  %or3348 = or i32 %shl3344, %conv3347
  %bsBuff3349 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or3348, i32* %bsBuff3349, align 8
  %bsLive3350 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1060 = load i32, i32* %bsLive3350, align 4
  %add3351 = add nsw i32 %i1060, 8
  store i32 %add3351, i32* %bsLive3350, align 4
  %strm3352 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1061 = load %struct.bz_stream*, %struct.bz_stream** %strm3352, align 8
  %next_in3353 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1061, i32 0, i32 0
  %i1062 = load i8*, i8** %next_in3353, align 8
  %incdec.ptr3354 = getelementptr inbounds i8, i8* %i1062, i32 1
  store i8* %incdec.ptr3354, i8** %next_in3353, align 8
  %strm3355 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1063 = load %struct.bz_stream*, %struct.bz_stream** %strm3355, align 8
  %avail_in3356 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1063, i32 0, i32 1
  %i1064 = load i32, i32* %avail_in3356, align 8
  %dec3357 = add i32 %i1064, -1
  store i32 %dec3357, i32* %avail_in3356, align 8
  %strm3358 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1065 = load %struct.bz_stream*, %struct.bz_stream** %strm3358, align 8
  %total_in_lo323359 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1065, i32 0, i32 2
  %i1066 = load i32, i32* %total_in_lo323359, align 4
  %inc3360 = add i32 %i1066, 1
  store i32 %inc3360, i32* %total_in_lo323359, align 4
  %strm3361 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1067 = load %struct.bz_stream*, %struct.bz_stream** %strm3361, align 8
  %total_in_lo323362 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1067, i32 0, i32 2
  %i1068 = load i32, i32* %total_in_lo323362, align 4
  %cmp3363 = icmp eq i32 %i1068, 0
  br i1 %cmp3363, label %if.then3365, label %if.end3369

if.then3365:                                      ; preds = %if.end3342
  %strm3366 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1069 = load %struct.bz_stream*, %struct.bz_stream** %strm3366, align 8
  %total_in_hi323367 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1069, i32 0, i32 3
  %i1070 = load i32, i32* %total_in_hi323367, align 8
  %inc3368 = add i32 %i1070, 1
  store i32 %inc3368, i32* %total_in_hi323367, align 8
  br label %if.end3369

if.end3369:                                       ; preds = %if.then3365, %if.end3342
  br label %while.body3322

while.end3370:                                    ; preds = %if.then3326
  %storedCombinedCRC3371 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 24
  %i1071 = load i32, i32* %storedCombinedCRC3371, align 4
  %shl3372 = shl i32 %i1071, 8
  %conv3373 = zext i8 %conv3335 to i32
  %or3374 = or i32 %shl3372, %conv3373
  %storedCombinedCRC3375 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 24
  store i32 %or3374, i32* %storedCombinedCRC3375, align 4
  br label %sw.bb3376

sw.bb3376:                                        ; preds = %while.end3370, %if.end
  %state3377 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 50, i32* %state3377, align 8
  br label %while.body3379

while.body3379:                                   ; preds = %if.end3426, %sw.bb3376
  %bsLive3380 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1072 = load i32, i32* %bsLive3380, align 4
  %cmp3381 = icmp sge i32 %i1072, 8
  br i1 %cmp3381, label %if.then3383, label %if.end3393

if.then3383:                                      ; preds = %while.body3379
  %bsBuff3385 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i1073 = load i32, i32* %bsBuff3385, align 8
  %bsLive3386 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1074 = load i32, i32* %bsLive3386, align 4
  %sub3387 = sub nsw i32 %i1074, 8
  %shr3388 = lshr i32 %i1073, %sub3387
  %and3389 = and i32 %shr3388, 255
  %bsLive3390 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1075 = load i32, i32* %bsLive3390, align 4
  %sub3391 = sub nsw i32 %i1075, 8
  store i32 %sub3391, i32* %bsLive3390, align 4
  %conv3392 = trunc i32 %and3389 to i8
  br label %while.end3427

if.end3393:                                       ; preds = %while.body3379
  %strm3394 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1076 = load %struct.bz_stream*, %struct.bz_stream** %strm3394, align 8
  %avail_in3395 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1076, i32 0, i32 1
  %i1077 = load i32, i32* %avail_in3395, align 8
  %cmp3396 = icmp eq i32 %i1077, 0
  br i1 %cmp3396, label %if.then3398, label %if.end3399

if.then3398:                                      ; preds = %if.end3393
  br label %save_state_and_return

if.end3399:                                       ; preds = %if.end3393
  %bsBuff3400 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  %i1078 = load i32, i32* %bsBuff3400, align 8
  %shl3401 = shl i32 %i1078, 8
  %strm3402 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1079 = load %struct.bz_stream*, %struct.bz_stream** %strm3402, align 8
  %next_in3403 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1079, i32 0, i32 0
  %i1080 = load i8*, i8** %next_in3403, align 8
  %i1081 = load i8, i8* %i1080, align 1
  %conv3404 = zext i8 %i1081 to i32
  %or3405 = or i32 %shl3401, %conv3404
  %bsBuff3406 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 7
  store i32 %or3405, i32* %bsBuff3406, align 8
  %bsLive3407 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 8
  %i1082 = load i32, i32* %bsLive3407, align 4
  %add3408 = add nsw i32 %i1082, 8
  store i32 %add3408, i32* %bsLive3407, align 4
  %strm3409 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1083 = load %struct.bz_stream*, %struct.bz_stream** %strm3409, align 8
  %next_in3410 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1083, i32 0, i32 0
  %i1084 = load i8*, i8** %next_in3410, align 8
  %incdec.ptr3411 = getelementptr inbounds i8, i8* %i1084, i32 1
  store i8* %incdec.ptr3411, i8** %next_in3410, align 8
  %strm3412 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1085 = load %struct.bz_stream*, %struct.bz_stream** %strm3412, align 8
  %avail_in3413 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1085, i32 0, i32 1
  %i1086 = load i32, i32* %avail_in3413, align 8
  %dec3414 = add i32 %i1086, -1
  store i32 %dec3414, i32* %avail_in3413, align 8
  %strm3415 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1087 = load %struct.bz_stream*, %struct.bz_stream** %strm3415, align 8
  %total_in_lo323416 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1087, i32 0, i32 2
  %i1088 = load i32, i32* %total_in_lo323416, align 4
  %inc3417 = add i32 %i1088, 1
  store i32 %inc3417, i32* %total_in_lo323416, align 4
  %strm3418 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1089 = load %struct.bz_stream*, %struct.bz_stream** %strm3418, align 8
  %total_in_lo323419 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1089, i32 0, i32 2
  %i1090 = load i32, i32* %total_in_lo323419, align 4
  %cmp3420 = icmp eq i32 %i1090, 0
  br i1 %cmp3420, label %if.then3422, label %if.end3426

if.then3422:                                      ; preds = %if.end3399
  %strm3423 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 0
  %i1091 = load %struct.bz_stream*, %struct.bz_stream** %strm3423, align 8
  %total_in_hi323424 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %i1091, i32 0, i32 3
  %i1092 = load i32, i32* %total_in_hi323424, align 8
  %inc3425 = add i32 %i1092, 1
  store i32 %inc3425, i32* %total_in_hi323424, align 8
  br label %if.end3426

if.end3426:                                       ; preds = %if.then3422, %if.end3399
  br label %while.body3379

while.end3427:                                    ; preds = %if.then3383
  %storedCombinedCRC3428 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 24
  %i1093 = load i32, i32* %storedCombinedCRC3428, align 4
  %shl3429 = shl i32 %i1093, 8
  %conv3430 = zext i8 %conv3392 to i32
  %or3431 = or i32 %shl3429, %conv3430
  %storedCombinedCRC3432 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 24
  store i32 %or3431, i32* %storedCombinedCRC3432, align 4
  %state3433 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 1
  store i32 1, i32* %state3433, align 8
  br label %save_state_and_return

sw.default:                                       ; preds = %if.end
  call void @BZ2_bz__AssertH__fail(i32 4001)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  call void @BZ2_bz__AssertH__fail(i32 4002)
  br label %save_state_and_return

save_state_and_return:                            ; preds = %sw.epilog, %while.end3427, %if.then3398, %if.then3341, %if.then3284, %if.then3227, %if.then3203, %if.then3170, %if.then3146, %if.then3113, %if.then3089, %if.then3056, %if.then3032, %if.then2999, %if.then2975, %if.then2942, %if.end2919, %if.then2583, %if.then2536, %if.then2521, %if.then2477, %if.then2447, %if.then2413, %if.then2367, %if.then2166, %if.then2153, %if.then2137, %if.then2105, %if.then2061, %if.then2031, %if.then1997, %if.then1951, %if.then1912, %if.then1868, %if.then1838, %if.then1804, %if.then1758, %if.then1605, %if.then1548, %if.then1524, %if.then1483, %if.then1411, %if.then1373, %if.then1344, %if.then1312, %if.then1290, %if.then1255, %if.then1231, %if.then1182, %if.then1099, %if.then1074, %if.then1066, %if.then1028, %if.then972, %if.then916, %if.then865, %if.then809, %if.then753, %if.then697, %if.then641, %if.then611, %if.then578, %if.then555, %if.then522, %if.then499, %if.then466, %if.then443, %if.then410, %if.then387, %if.then354, %if.then331, %if.then293, %if.then269, %if.then256, %if.then230, %if.then194, %if.then172, %if.then139, %if.then116, %if.then83, %if.then60, %if.then37
  %gPerm.14 = phi i32* [ %i25, %sw.epilog ], [ %i25, %while.end3427 ], [ %i25, %if.then3398 ], [ %i25, %if.then3341 ], [ %i25, %if.then3284 ], [ %i25, %if.then3227 ], [ %i25, %if.then3203 ], [ %i25, %if.then3170 ], [ %i25, %if.then3146 ], [ %i25, %if.then3113 ], [ %i25, %if.then3089 ], [ %i25, %if.then3056 ], [ %i25, %if.then3032 ], [ %i25, %if.then2999 ], [ %i25, %if.then2975 ], [ %i25, %if.then2942 ], [ %gPerm.12, %if.then2447 ], [ %gPerm.12, %if.then2521 ], [ %gPerm.4, %if.then2536 ], [ %gPerm.4, %if.then2583 ], [ %gPerm.4, %if.end2919 ], [ %gPerm.5, %if.then1951 ], [ %gPerm.8, %if.then2031 ], [ %gPerm.8, %if.then2105 ], [ %gPerm.8, %if.then2137 ], [ %gPerm.8, %if.then2153 ], [ %gPerm.9, %if.then2061 ], [ %gPerm.7, %if.then1997 ], [ %gPerm.4, %if.then2166 ], [ %gPerm.4, %if.then2367 ], [ %gPerm.11, %if.then2413 ], [ %gPerm.13, %if.then2477 ], [ %gPerm.2, %if.then1838 ], [ %gPerm.2, %if.then1912 ], [ %gPerm.3, %if.then1868 ], [ %gPerm.1, %if.then1804 ], [ %i25, %if.then1524 ], [ %i25, %if.then1483 ], [ %i25, %if.then1758 ], [ %i25, %if.then1548 ], [ %i25, %if.then1605 ], [ %i25, %if.then1411 ], [ %i25, %if.then1373 ], [ %i25, %if.then1344 ], [ %i25, %if.then1312 ], [ %i25, %if.then1290 ], [ %i25, %if.then1255 ], [ %i25, %if.then1231 ], [ %i25, %if.then1182 ], [ %i25, %if.then1099 ], [ %i25, %if.then1066 ], [ %i25, %if.then1074 ], [ %i25, %if.then1028 ], [ %i25, %if.then972 ], [ %i25, %if.then916 ], [ %i25, %if.then865 ], [ %i25, %if.then809 ], [ %i25, %if.then753 ], [ %i25, %if.then697 ], [ %i25, %if.then641 ], [ %i25, %if.then611 ], [ %i25, %if.then578 ], [ %i25, %if.then555 ], [ %i25, %if.then522 ], [ %i25, %if.then499 ], [ %i25, %if.then466 ], [ %i25, %if.then443 ], [ %i25, %if.then410 ], [ %i25, %if.then387 ], [ %i25, %if.then354 ], [ %i25, %if.then331 ], [ %i25, %if.then293 ], [ %i25, %if.then230 ], [ %i25, %if.then256 ], [ %i25, %if.then269 ], [ %i25, %if.then194 ], [ %i25, %if.then172 ], [ %i25, %if.then139 ], [ %i25, %if.then116 ], [ %i25, %if.then83 ], [ %i25, %if.then60 ], [ %i25, %if.then37 ]
  %gBase.14 = phi i32* [ %i24, %sw.epilog ], [ %i24, %while.end3427 ], [ %i24, %if.then3398 ], [ %i24, %if.then3341 ], [ %i24, %if.then3284 ], [ %i24, %if.then3227 ], [ %i24, %if.then3203 ], [ %i24, %if.then3170 ], [ %i24, %if.then3146 ], [ %i24, %if.then3113 ], [ %i24, %if.then3089 ], [ %i24, %if.then3056 ], [ %i24, %if.then3032 ], [ %i24, %if.then2999 ], [ %i24, %if.then2975 ], [ %i24, %if.then2942 ], [ %gBase.12, %if.then2447 ], [ %gBase.12, %if.then2521 ], [ %gBase.4, %if.then2536 ], [ %gBase.4, %if.then2583 ], [ %gBase.4, %if.end2919 ], [ %gBase.5, %if.then1951 ], [ %gBase.8, %if.then2031 ], [ %gBase.8, %if.then2105 ], [ %gBase.8, %if.then2137 ], [ %gBase.8, %if.then2153 ], [ %gBase.9, %if.then2061 ], [ %gBase.7, %if.then1997 ], [ %gBase.4, %if.then2166 ], [ %gBase.4, %if.then2367 ], [ %gBase.11, %if.then2413 ], [ %gBase.13, %if.then2477 ], [ %gBase.2, %if.then1838 ], [ %gBase.2, %if.then1912 ], [ %gBase.3, %if.then1868 ], [ %gBase.1, %if.then1804 ], [ %i24, %if.then1524 ], [ %i24, %if.then1483 ], [ %i24, %if.then1758 ], [ %i24, %if.then1548 ], [ %i24, %if.then1605 ], [ %i24, %if.then1411 ], [ %i24, %if.then1373 ], [ %i24, %if.then1344 ], [ %i24, %if.then1312 ], [ %i24, %if.then1290 ], [ %i24, %if.then1255 ], [ %i24, %if.then1231 ], [ %i24, %if.then1182 ], [ %i24, %if.then1099 ], [ %i24, %if.then1066 ], [ %i24, %if.then1074 ], [ %i24, %if.then1028 ], [ %i24, %if.then972 ], [ %i24, %if.then916 ], [ %i24, %if.then865 ], [ %i24, %if.then809 ], [ %i24, %if.then753 ], [ %i24, %if.then697 ], [ %i24, %if.then641 ], [ %i24, %if.then611 ], [ %i24, %if.then578 ], [ %i24, %if.then555 ], [ %i24, %if.then522 ], [ %i24, %if.then499 ], [ %i24, %if.then466 ], [ %i24, %if.then443 ], [ %i24, %if.then410 ], [ %i24, %if.then387 ], [ %i24, %if.then354 ], [ %i24, %if.then331 ], [ %i24, %if.then293 ], [ %i24, %if.then230 ], [ %i24, %if.then256 ], [ %i24, %if.then269 ], [ %i24, %if.then194 ], [ %i24, %if.then172 ], [ %i24, %if.then139 ], [ %i24, %if.then116 ], [ %i24, %if.then83 ], [ %i24, %if.then60 ], [ %i24, %if.then37 ]
  %gLimit.14 = phi i32* [ %i23, %sw.epilog ], [ %i23, %while.end3427 ], [ %i23, %if.then3398 ], [ %i23, %if.then3341 ], [ %i23, %if.then3284 ], [ %i23, %if.then3227 ], [ %i23, %if.then3203 ], [ %i23, %if.then3170 ], [ %i23, %if.then3146 ], [ %i23, %if.then3113 ], [ %i23, %if.then3089 ], [ %i23, %if.then3056 ], [ %i23, %if.then3032 ], [ %i23, %if.then2999 ], [ %i23, %if.then2975 ], [ %i23, %if.then2942 ], [ %gLimit.12, %if.then2447 ], [ %gLimit.12, %if.then2521 ], [ %gLimit.4, %if.then2536 ], [ %gLimit.4, %if.then2583 ], [ %gLimit.4, %if.end2919 ], [ %gLimit.5, %if.then1951 ], [ %gLimit.8, %if.then2031 ], [ %gLimit.8, %if.then2105 ], [ %gLimit.8, %if.then2137 ], [ %gLimit.8, %if.then2153 ], [ %gLimit.9, %if.then2061 ], [ %gLimit.7, %if.then1997 ], [ %gLimit.4, %if.then2166 ], [ %gLimit.4, %if.then2367 ], [ %gLimit.11, %if.then2413 ], [ %gLimit.13, %if.then2477 ], [ %gLimit.2, %if.then1838 ], [ %gLimit.2, %if.then1912 ], [ %gLimit.3, %if.then1868 ], [ %gLimit.1, %if.then1804 ], [ %i23, %if.then1524 ], [ %i23, %if.then1483 ], [ %i23, %if.then1758 ], [ %i23, %if.then1548 ], [ %i23, %if.then1605 ], [ %i23, %if.then1411 ], [ %i23, %if.then1373 ], [ %i23, %if.then1344 ], [ %i23, %if.then1312 ], [ %i23, %if.then1290 ], [ %i23, %if.then1255 ], [ %i23, %if.then1231 ], [ %i23, %if.then1182 ], [ %i23, %if.then1099 ], [ %i23, %if.then1066 ], [ %i23, %if.then1074 ], [ %i23, %if.then1028 ], [ %i23, %if.then972 ], [ %i23, %if.then916 ], [ %i23, %if.then865 ], [ %i23, %if.then809 ], [ %i23, %if.then753 ], [ %i23, %if.then697 ], [ %i23, %if.then641 ], [ %i23, %if.then611 ], [ %i23, %if.then578 ], [ %i23, %if.then555 ], [ %i23, %if.then522 ], [ %i23, %if.then499 ], [ %i23, %if.then466 ], [ %i23, %if.then443 ], [ %i23, %if.then410 ], [ %i23, %if.then387 ], [ %i23, %if.then354 ], [ %i23, %if.then331 ], [ %i23, %if.then293 ], [ %i23, %if.then230 ], [ %i23, %if.then256 ], [ %i23, %if.then269 ], [ %i23, %if.then194 ], [ %i23, %if.then172 ], [ %i23, %if.then139 ], [ %i23, %if.then116 ], [ %i23, %if.then83 ], [ %i23, %if.then60 ], [ %i23, %if.then37 ]
  %gMinlen.14 = phi i32 [ %i22, %sw.epilog ], [ %i22, %while.end3427 ], [ %i22, %if.then3398 ], [ %i22, %if.then3341 ], [ %i22, %if.then3284 ], [ %i22, %if.then3227 ], [ %i22, %if.then3203 ], [ %i22, %if.then3170 ], [ %i22, %if.then3146 ], [ %i22, %if.then3113 ], [ %i22, %if.then3089 ], [ %i22, %if.then3056 ], [ %i22, %if.then3032 ], [ %i22, %if.then2999 ], [ %i22, %if.then2975 ], [ %i22, %if.then2942 ], [ %gMinlen.12, %if.then2447 ], [ %gMinlen.12, %if.then2521 ], [ %gMinlen.4, %if.then2536 ], [ %gMinlen.4, %if.then2583 ], [ %gMinlen.4, %if.end2919 ], [ %gMinlen.5, %if.then1951 ], [ %gMinlen.8, %if.then2031 ], [ %gMinlen.8, %if.then2105 ], [ %gMinlen.8, %if.then2137 ], [ %gMinlen.8, %if.then2153 ], [ %gMinlen.9, %if.then2061 ], [ %gMinlen.7, %if.then1997 ], [ %gMinlen.4, %if.then2166 ], [ %gMinlen.4, %if.then2367 ], [ %gMinlen.11, %if.then2413 ], [ %gMinlen.13, %if.then2477 ], [ %gMinlen.2, %if.then1838 ], [ %gMinlen.2, %if.then1912 ], [ %gMinlen.3, %if.then1868 ], [ %gMinlen.1, %if.then1804 ], [ %i22, %if.then1524 ], [ %i22, %if.then1483 ], [ %i22, %if.then1758 ], [ %i22, %if.then1548 ], [ %i22, %if.then1605 ], [ %i22, %if.then1411 ], [ %i22, %if.then1373 ], [ %i22, %if.then1344 ], [ %i22, %if.then1312 ], [ %i22, %if.then1290 ], [ %i22, %if.then1255 ], [ %i22, %if.then1231 ], [ %i22, %if.then1182 ], [ %i22, %if.then1099 ], [ %i22, %if.then1066 ], [ %i22, %if.then1074 ], [ %i22, %if.then1028 ], [ %i22, %if.then972 ], [ %i22, %if.then916 ], [ %i22, %if.then865 ], [ %i22, %if.then809 ], [ %i22, %if.then753 ], [ %i22, %if.then697 ], [ %i22, %if.then641 ], [ %i22, %if.then611 ], [ %i22, %if.then578 ], [ %i22, %if.then555 ], [ %i22, %if.then522 ], [ %i22, %if.then499 ], [ %i22, %if.then466 ], [ %i22, %if.then443 ], [ %i22, %if.then410 ], [ %i22, %if.then387 ], [ %i22, %if.then354 ], [ %i22, %if.then331 ], [ %i22, %if.then293 ], [ %i22, %if.then230 ], [ %i22, %if.then256 ], [ %i22, %if.then269 ], [ %i22, %if.then194 ], [ %i22, %if.then172 ], [ %i22, %if.then139 ], [ %i22, %if.then116 ], [ %i22, %if.then83 ], [ %i22, %if.then60 ], [ %i22, %if.then37 ]
  %gSel.14 = phi i32 [ %i21, %sw.epilog ], [ %i21, %while.end3427 ], [ %i21, %if.then3398 ], [ %i21, %if.then3341 ], [ %i21, %if.then3284 ], [ %i21, %if.then3227 ], [ %i21, %if.then3203 ], [ %i21, %if.then3170 ], [ %i21, %if.then3146 ], [ %i21, %if.then3113 ], [ %i21, %if.then3089 ], [ %i21, %if.then3056 ], [ %i21, %if.then3032 ], [ %i21, %if.then2999 ], [ %i21, %if.then2975 ], [ %i21, %if.then2942 ], [ %gSel.12, %if.then2447 ], [ %gSel.12, %if.then2521 ], [ %gSel.4, %if.then2536 ], [ %gSel.4, %if.then2583 ], [ %gSel.4, %if.end2919 ], [ %gSel.5, %if.then1951 ], [ %gSel.8, %if.then2031 ], [ %gSel.8, %if.then2105 ], [ %gSel.8, %if.then2137 ], [ %gSel.8, %if.then2153 ], [ %gSel.9, %if.then2061 ], [ %gSel.7, %if.then1997 ], [ %gSel.4, %if.then2166 ], [ %gSel.4, %if.then2367 ], [ %gSel.11, %if.then2413 ], [ %gSel.13, %if.then2477 ], [ %gSel.2, %if.then1838 ], [ %gSel.2, %if.then1912 ], [ %gSel.3, %if.then1868 ], [ %gSel.1, %if.then1804 ], [ %i21, %if.then1524 ], [ %i21, %if.then1483 ], [ %i21, %if.then1758 ], [ %i21, %if.then1548 ], [ %i21, %if.then1605 ], [ %i21, %if.then1411 ], [ %i21, %if.then1373 ], [ %i21, %if.then1344 ], [ %i21, %if.then1312 ], [ %i21, %if.then1290 ], [ %i21, %if.then1255 ], [ %i21, %if.then1231 ], [ %i21, %if.then1182 ], [ %i21, %if.then1099 ], [ %i21, %if.then1066 ], [ %i21, %if.then1074 ], [ %i21, %if.then1028 ], [ %i21, %if.then972 ], [ %i21, %if.then916 ], [ %i21, %if.then865 ], [ %i21, %if.then809 ], [ %i21, %if.then753 ], [ %i21, %if.then697 ], [ %i21, %if.then641 ], [ %i21, %if.then611 ], [ %i21, %if.then578 ], [ %i21, %if.then555 ], [ %i21, %if.then522 ], [ %i21, %if.then499 ], [ %i21, %if.then466 ], [ %i21, %if.then443 ], [ %i21, %if.then410 ], [ %i21, %if.then387 ], [ %i21, %if.then354 ], [ %i21, %if.then331 ], [ %i21, %if.then293 ], [ %i21, %if.then230 ], [ %i21, %if.then256 ], [ %i21, %if.then269 ], [ %i21, %if.then194 ], [ %i21, %if.then172 ], [ %i21, %if.then139 ], [ %i21, %if.then116 ], [ %i21, %if.then83 ], [ %i21, %if.then60 ], [ %i21, %if.then37 ]
  %zj.10 = phi i32 [ %i20, %sw.epilog ], [ %i20, %while.end3427 ], [ %i20, %if.then3398 ], [ %i20, %if.then3341 ], [ %i20, %if.then3284 ], [ %i20, %if.then3227 ], [ %i20, %if.then3203 ], [ %i20, %if.then3170 ], [ %i20, %if.then3146 ], [ %i20, %if.then3113 ], [ %i20, %if.then3089 ], [ %i20, %if.then3056 ], [ %i20, %if.then3032 ], [ %i20, %if.then2999 ], [ %i20, %if.then2975 ], [ %i20, %if.then2942 ], [ %zj.8, %if.then2447 ], [ %zj.8, %if.then2521 ], [ %zj.2, %if.then2536 ], [ %zj.2, %if.then2583 ], [ %zj.2, %if.end2919 ], [ %zj.3, %if.then1951 ], [ %zj.5, %if.then2031 ], [ %zj.5, %if.then2105 ], [ %zj.5, %if.then2137 ], [ %zj.5, %if.then2153 ], [ %zj.6, %if.then2061 ], [ %zj.4, %if.then1997 ], [ %zj.2, %if.then2166 ], [ %zj.2, %if.then2367 ], [ %zj.7, %if.then2413 ], [ %zj.9, %if.then2477 ], [ %zj.0, %if.then1838 ], [ %zj.0, %if.then1912 ], [ %zj.1, %if.then1868 ], [ %i20, %if.then1804 ], [ %i20, %if.then1524 ], [ %i20, %if.then1483 ], [ %i20, %if.then1758 ], [ %i20, %if.then1548 ], [ %i20, %if.then1605 ], [ %i20, %if.then1411 ], [ %i20, %if.then1373 ], [ %i20, %if.then1344 ], [ %i20, %if.then1312 ], [ %i20, %if.then1290 ], [ %i20, %if.then1255 ], [ %i20, %if.then1231 ], [ %i20, %if.then1182 ], [ %i20, %if.then1099 ], [ %i20, %if.then1066 ], [ %i20, %if.then1074 ], [ %i20, %if.then1028 ], [ %i20, %if.then972 ], [ %i20, %if.then916 ], [ %i20, %if.then865 ], [ %i20, %if.then809 ], [ %i20, %if.then753 ], [ %i20, %if.then697 ], [ %i20, %if.then641 ], [ %i20, %if.then611 ], [ %i20, %if.then578 ], [ %i20, %if.then555 ], [ %i20, %if.then522 ], [ %i20, %if.then499 ], [ %i20, %if.then466 ], [ %i20, %if.then443 ], [ %i20, %if.then410 ], [ %i20, %if.then387 ], [ %i20, %if.then354 ], [ %i20, %if.then331 ], [ %i20, %if.then293 ], [ %i20, %if.then230 ], [ %i20, %if.then256 ], [ %i20, %if.then269 ], [ %i20, %if.then194 ], [ %i20, %if.then172 ], [ %i20, %if.then139 ], [ %i20, %if.then116 ], [ %i20, %if.then83 ], [ %i20, %if.then60 ], [ %i20, %if.then37 ]
  %zvec.10 = phi i32 [ %i19, %sw.epilog ], [ %i19, %while.end3427 ], [ %i19, %if.then3398 ], [ %i19, %if.then3341 ], [ %i19, %if.then3284 ], [ %i19, %if.then3227 ], [ %i19, %if.then3203 ], [ %i19, %if.then3170 ], [ %i19, %if.then3146 ], [ %i19, %if.then3113 ], [ %i19, %if.then3089 ], [ %i19, %if.then3056 ], [ %i19, %if.then3032 ], [ %i19, %if.then2999 ], [ %i19, %if.then2975 ], [ %i19, %if.then2942 ], [ %zvec.8, %if.then2447 ], [ %zvec.8, %if.then2521 ], [ %zvec.2, %if.then2536 ], [ %zvec.2, %if.then2583 ], [ %zvec.2, %if.end2919 ], [ %zvec.3, %if.then1951 ], [ %zvec.5, %if.then2031 ], [ %zvec.5, %if.then2105 ], [ %zvec.5, %if.then2137 ], [ %zvec.5, %if.then2153 ], [ %zvec.6, %if.then2061 ], [ %zvec.4, %if.then1997 ], [ %zvec.2, %if.then2166 ], [ %zvec.2, %if.then2367 ], [ %zvec.7, %if.then2413 ], [ %zvec.9, %if.then2477 ], [ %zvec.0, %if.then1838 ], [ %zvec.0, %if.then1912 ], [ %zvec.1, %if.then1868 ], [ %i19, %if.then1804 ], [ %i19, %if.then1524 ], [ %i19, %if.then1483 ], [ %i19, %if.then1758 ], [ %i19, %if.then1548 ], [ %i19, %if.then1605 ], [ %i19, %if.then1411 ], [ %i19, %if.then1373 ], [ %i19, %if.then1344 ], [ %i19, %if.then1312 ], [ %i19, %if.then1290 ], [ %i19, %if.then1255 ], [ %i19, %if.then1231 ], [ %i19, %if.then1182 ], [ %i19, %if.then1099 ], [ %i19, %if.then1066 ], [ %i19, %if.then1074 ], [ %i19, %if.then1028 ], [ %i19, %if.then972 ], [ %i19, %if.then916 ], [ %i19, %if.then865 ], [ %i19, %if.then809 ], [ %i19, %if.then753 ], [ %i19, %if.then697 ], [ %i19, %if.then641 ], [ %i19, %if.then611 ], [ %i19, %if.then578 ], [ %i19, %if.then555 ], [ %i19, %if.then522 ], [ %i19, %if.then499 ], [ %i19, %if.then466 ], [ %i19, %if.then443 ], [ %i19, %if.then410 ], [ %i19, %if.then387 ], [ %i19, %if.then354 ], [ %i19, %if.then331 ], [ %i19, %if.then293 ], [ %i19, %if.then230 ], [ %i19, %if.then256 ], [ %i19, %if.then269 ], [ %i19, %if.then194 ], [ %i19, %if.then172 ], [ %i19, %if.then139 ], [ %i19, %if.then116 ], [ %i19, %if.then83 ], [ %i19, %if.then60 ], [ %i19, %if.then37 ]
  %zn.11 = phi i32 [ %i18, %sw.epilog ], [ %i18, %while.end3427 ], [ %i18, %if.then3398 ], [ %i18, %if.then3341 ], [ %i18, %if.then3284 ], [ %i18, %if.then3227 ], [ %i18, %if.then3203 ], [ %i18, %if.then3170 ], [ %i18, %if.then3146 ], [ %i18, %if.then3113 ], [ %i18, %if.then3089 ], [ %i18, %if.then3056 ], [ %i18, %if.then3032 ], [ %i18, %if.then2999 ], [ %i18, %if.then2975 ], [ %i18, %if.then2942 ], [ %zn.9, %if.then2447 ], [ %zn.9, %if.then2521 ], [ %zn.3, %if.then2536 ], [ %zn.3, %if.then2583 ], [ %zn.3, %if.end2919 ], [ %zn.4, %if.then1951 ], [ %zn.6, %if.then2031 ], [ %zn.6, %if.then2105 ], [ %zn.6, %if.then2137 ], [ %zn.6, %if.then2153 ], [ %zn.7, %if.then2061 ], [ %zn.5, %if.then1997 ], [ %zn.3, %if.then2166 ], [ %zn.3, %if.then2367 ], [ %zn.8, %if.then2413 ], [ %zn.10, %if.then2477 ], [ %zn.1, %if.then1838 ], [ %zn.1, %if.then1912 ], [ %zn.2, %if.then1868 ], [ %zn.0, %if.then1804 ], [ %i18, %if.then1524 ], [ %i18, %if.then1483 ], [ %i18, %if.then1758 ], [ %i18, %if.then1548 ], [ %i18, %if.then1605 ], [ %i18, %if.then1411 ], [ %i18, %if.then1373 ], [ %i18, %if.then1344 ], [ %i18, %if.then1312 ], [ %i18, %if.then1290 ], [ %i18, %if.then1255 ], [ %i18, %if.then1231 ], [ %i18, %if.then1182 ], [ %i18, %if.then1099 ], [ %i18, %if.then1066 ], [ %i18, %if.then1074 ], [ %i18, %if.then1028 ], [ %i18, %if.then972 ], [ %i18, %if.then916 ], [ %i18, %if.then865 ], [ %i18, %if.then809 ], [ %i18, %if.then753 ], [ %i18, %if.then697 ], [ %i18, %if.then641 ], [ %i18, %if.then611 ], [ %i18, %if.then578 ], [ %i18, %if.then555 ], [ %i18, %if.then522 ], [ %i18, %if.then499 ], [ %i18, %if.then466 ], [ %i18, %if.then443 ], [ %i18, %if.then410 ], [ %i18, %if.then387 ], [ %i18, %if.then354 ], [ %i18, %if.then331 ], [ %i18, %if.then293 ], [ %i18, %if.then230 ], [ %i18, %if.then256 ], [ %i18, %if.then269 ], [ %i18, %if.then194 ], [ %i18, %if.then172 ], [ %i18, %if.then139 ], [ %i18, %if.then116 ], [ %i18, %if.then83 ], [ %i18, %if.then60 ], [ %i18, %if.then37 ]
  %curr.18 = phi i32 [ %i16, %sw.epilog ], [ %i16, %while.end3427 ], [ %i16, %if.then3398 ], [ %i16, %if.then3341 ], [ %i16, %if.then3284 ], [ %i16, %if.then3227 ], [ %i16, %if.then3203 ], [ %i16, %if.then3170 ], [ %i16, %if.then3146 ], [ %i16, %if.then3113 ], [ %i16, %if.then3089 ], [ %i16, %if.then3056 ], [ %i16, %if.then3032 ], [ %i16, %if.then2999 ], [ %i16, %if.then2975 ], [ %i16, %if.then2942 ], [ %curr.16, %if.then2447 ], [ %curr.16, %if.then2521 ], [ %curr.10, %if.then2536 ], [ %curr.10, %if.then2583 ], [ %curr.10, %if.end2919 ], [ %curr.11, %if.then1951 ], [ %curr.13, %if.then2031 ], [ %curr.13, %if.then2105 ], [ %curr.13, %if.then2137 ], [ %curr.13, %if.then2153 ], [ %curr.14, %if.then2061 ], [ %curr.12, %if.then1997 ], [ %curr.10, %if.then2166 ], [ %curr.10, %if.then2367 ], [ %curr.15, %if.then2413 ], [ %curr.17, %if.then2477 ], [ %curr.8, %if.then1838 ], [ %curr.8, %if.then1912 ], [ %curr.9, %if.then1868 ], [ %curr.7, %if.then1804 ], [ %curr.3, %if.then1524 ], [ %curr.1, %if.then1483 ], [ %curr.0, %if.then1758 ], [ %curr.4, %if.then1548 ], [ %curr.5, %if.then1605 ], [ %i16, %if.then1411 ], [ %i16, %if.then1373 ], [ %i16, %if.then1344 ], [ %i16, %if.then1312 ], [ %i16, %if.then1290 ], [ %i16, %if.then1255 ], [ %i16, %if.then1231 ], [ %i16, %if.then1182 ], [ %i16, %if.then1099 ], [ %i16, %if.then1066 ], [ %i16, %if.then1074 ], [ %i16, %if.then1028 ], [ %i16, %if.then972 ], [ %i16, %if.then916 ], [ %i16, %if.then865 ], [ %i16, %if.then809 ], [ %i16, %if.then753 ], [ %i16, %if.then697 ], [ %i16, %if.then641 ], [ %i16, %if.then611 ], [ %i16, %if.then578 ], [ %i16, %if.then555 ], [ %i16, %if.then522 ], [ %i16, %if.then499 ], [ %i16, %if.then466 ], [ %i16, %if.then443 ], [ %i16, %if.then410 ], [ %i16, %if.then387 ], [ %i16, %if.then354 ], [ %i16, %if.then331 ], [ %i16, %if.then293 ], [ %i16, %if.then230 ], [ %i16, %if.then256 ], [ %i16, %if.then269 ], [ %i16, %if.then194 ], [ %i16, %if.then172 ], [ %i16, %if.then139 ], [ %i16, %if.then116 ], [ %i16, %if.then83 ], [ %i16, %if.then60 ], [ %i16, %if.then37 ]
  %N.8 = phi i32 [ %i15, %sw.epilog ], [ %i15, %while.end3427 ], [ %i15, %if.then3398 ], [ %i15, %if.then3341 ], [ %i15, %if.then3284 ], [ %i15, %if.then3227 ], [ %i15, %if.then3203 ], [ %i15, %if.then3170 ], [ %i15, %if.then3146 ], [ %i15, %if.then3113 ], [ %i15, %if.then3089 ], [ %i15, %if.then3056 ], [ %i15, %if.then3032 ], [ %i15, %if.then2999 ], [ %i15, %if.then2975 ], [ %i15, %if.then2942 ], [ %N.6, %if.then2447 ], [ %N.6, %if.then2521 ], [ %N.0, %if.then2536 ], [ %N.0, %if.then2583 ], [ %N.0, %if.end2919 ], [ %mul1944, %if.then1951 ], [ %N.3, %if.then2031 ], [ %N.3, %if.then2105 ], [ %N.3, %if.then2137 ], [ %N.3, %if.then2153 ], [ %N.4, %if.then2061 ], [ %N.2, %if.then1997 ], [ %N.0, %if.then2166 ], [ %N.0, %if.then2367 ], [ %N.5, %if.then2413 ], [ %N.7, %if.then2477 ], [ %i15, %if.then1838 ], [ %i15, %if.then1912 ], [ %i15, %if.then1868 ], [ %i15, %if.then1804 ], [ %i15, %if.then1524 ], [ %i15, %if.then1483 ], [ %i15, %if.then1758 ], [ %i15, %if.then1548 ], [ %i15, %if.then1605 ], [ %i15, %if.then1411 ], [ %i15, %if.then1373 ], [ %i15, %if.then1344 ], [ %i15, %if.then1312 ], [ %i15, %if.then1290 ], [ %i15, %if.then1255 ], [ %i15, %if.then1231 ], [ %i15, %if.then1182 ], [ %i15, %if.then1099 ], [ %i15, %if.then1066 ], [ %i15, %if.then1074 ], [ %i15, %if.then1028 ], [ %i15, %if.then972 ], [ %i15, %if.then916 ], [ %i15, %if.then865 ], [ %i15, %if.then809 ], [ %i15, %if.then753 ], [ %i15, %if.then697 ], [ %i15, %if.then641 ], [ %i15, %if.then611 ], [ %i15, %if.then578 ], [ %i15, %if.then555 ], [ %i15, %if.then522 ], [ %i15, %if.then499 ], [ %i15, %if.then466 ], [ %i15, %if.then443 ], [ %i15, %if.then410 ], [ %i15, %if.then387 ], [ %i15, %if.then354 ], [ %i15, %if.then331 ], [ %i15, %if.then293 ], [ %i15, %if.then230 ], [ %i15, %if.then256 ], [ %i15, %if.then269 ], [ %i15, %if.then194 ], [ %i15, %if.then172 ], [ %i15, %if.then139 ], [ %i15, %if.then116 ], [ %i15, %if.then83 ], [ %i15, %if.then60 ], [ %i15, %if.then37 ]
  %es.13 = phi i32 [ %i14, %sw.epilog ], [ %i14, %while.end3427 ], [ %i14, %if.then3398 ], [ %i14, %if.then3341 ], [ %i14, %if.then3284 ], [ %i14, %if.then3227 ], [ %i14, %if.then3203 ], [ %i14, %if.then3170 ], [ %i14, %if.then3146 ], [ %i14, %if.then3113 ], [ %i14, %if.then3089 ], [ %i14, %if.then3056 ], [ %i14, %if.then3032 ], [ %i14, %if.then2999 ], [ %i14, %if.then2975 ], [ %i14, %if.then2942 ], [ %es.11, %if.then2447 ], [ %es.11, %if.then2521 ], [ %es.0, %if.then2536 ], [ %es.0, %if.then2583 ], [ %es.0, %if.end2919 ], [ %es.3, %if.then1951 ], [ %es.5, %if.then2031 ], [ %es.5, %if.then2105 ], [ %es.7, %if.then2137 ], [ %es.8, %if.then2153 ], [ %es.6, %if.then2061 ], [ %es.4, %if.then1997 ], [ %es.0, %if.then2166 ], [ %es.0, %if.then2367 ], [ %es.10, %if.then2413 ], [ %es.12, %if.then2477 ], [ %i14, %if.then1838 ], [ %i14, %if.then1912 ], [ %i14, %if.then1868 ], [ %i14, %if.then1804 ], [ %i14, %if.then1524 ], [ %i14, %if.then1483 ], [ %i14, %if.then1758 ], [ %i14, %if.then1548 ], [ %i14, %if.then1605 ], [ %i14, %if.then1411 ], [ %i14, %if.then1373 ], [ %i14, %if.then1344 ], [ %i14, %if.then1312 ], [ %i14, %if.then1290 ], [ %i14, %if.then1255 ], [ %i14, %if.then1231 ], [ %i14, %if.then1182 ], [ %i14, %if.then1099 ], [ %i14, %if.then1066 ], [ %i14, %if.then1074 ], [ %i14, %if.then1028 ], [ %i14, %if.then972 ], [ %i14, %if.then916 ], [ %i14, %if.then865 ], [ %i14, %if.then809 ], [ %i14, %if.then753 ], [ %i14, %if.then697 ], [ %i14, %if.then641 ], [ %i14, %if.then611 ], [ %i14, %if.then578 ], [ %i14, %if.then555 ], [ %i14, %if.then522 ], [ %i14, %if.then499 ], [ %i14, %if.then466 ], [ %i14, %if.then443 ], [ %i14, %if.then410 ], [ %i14, %if.then387 ], [ %i14, %if.then354 ], [ %i14, %if.then331 ], [ %i14, %if.then293 ], [ %i14, %if.then230 ], [ %i14, %if.then256 ], [ %i14, %if.then269 ], [ %i14, %if.then194 ], [ %i14, %if.then172 ], [ %i14, %if.then139 ], [ %i14, %if.then116 ], [ %i14, %if.then83 ], [ %i14, %if.then60 ], [ %i14, %if.then37 ]
  %nblock.14 = phi i32 [ %i13, %sw.epilog ], [ %i13, %while.end3427 ], [ %i13, %if.then3398 ], [ %i13, %if.then3341 ], [ %i13, %if.then3284 ], [ %i13, %if.then3227 ], [ %i13, %if.then3203 ], [ %i13, %if.then3170 ], [ %i13, %if.then3146 ], [ %i13, %if.then3113 ], [ %i13, %if.then3089 ], [ %i13, %if.then3056 ], [ %i13, %if.then3032 ], [ %i13, %if.then2999 ], [ %i13, %if.then2975 ], [ %i13, %if.then2942 ], [ %nblock.12, %if.then2447 ], [ %nblock.12, %if.then2521 ], [ %nblock.3, %if.then2536 ], [ %nblock.3, %if.then2583 ], [ %nblock.3, %if.end2919 ], [ %nblock.4, %if.then1951 ], [ %nblock.6, %if.then2031 ], [ %nblock.6, %if.then2105 ], [ %nblock.8, %if.then2137 ], [ %nblock.9, %if.then2153 ], [ %nblock.7, %if.then2061 ], [ %nblock.5, %if.then1997 ], [ %nblock.3, %if.then2166 ], [ %inc2360, %if.then2367 ], [ %nblock.11, %if.then2413 ], [ %nblock.13, %if.then2477 ], [ %nblock.1, %if.then1838 ], [ %nblock.1, %if.then1912 ], [ %nblock.2, %if.then1868 ], [ %nblock.0, %if.then1804 ], [ %i13, %if.then1524 ], [ %i13, %if.then1483 ], [ 0, %if.then1758 ], [ %i13, %if.then1548 ], [ %i13, %if.then1605 ], [ %i13, %if.then1411 ], [ %i13, %if.then1373 ], [ %i13, %if.then1344 ], [ %i13, %if.then1312 ], [ %i13, %if.then1290 ], [ %i13, %if.then1255 ], [ %i13, %if.then1231 ], [ %i13, %if.then1182 ], [ %i13, %if.then1099 ], [ %i13, %if.then1066 ], [ %i13, %if.then1074 ], [ %i13, %if.then1028 ], [ %i13, %if.then972 ], [ %i13, %if.then916 ], [ %i13, %if.then865 ], [ %i13, %if.then809 ], [ %i13, %if.then753 ], [ %i13, %if.then697 ], [ %i13, %if.then641 ], [ %i13, %if.then611 ], [ %i13, %if.then578 ], [ %i13, %if.then555 ], [ %i13, %if.then522 ], [ %i13, %if.then499 ], [ %i13, %if.then466 ], [ %i13, %if.then443 ], [ %i13, %if.then410 ], [ %i13, %if.then387 ], [ %i13, %if.then354 ], [ %i13, %if.then331 ], [ %i13, %if.then293 ], [ %i13, %if.then230 ], [ %i13, %if.then256 ], [ %i13, %if.then269 ], [ %i13, %if.then194 ], [ %i13, %if.then172 ], [ %i13, %if.then139 ], [ %i13, %if.then116 ], [ %i13, %if.then83 ], [ %i13, %if.then60 ], [ %i13, %if.then37 ]
  %nblockMAX.11 = phi i32 [ %i12, %sw.epilog ], [ %i12, %while.end3427 ], [ %i12, %if.then3398 ], [ %i12, %if.then3341 ], [ %i12, %if.then3284 ], [ %i12, %if.then3227 ], [ %i12, %if.then3203 ], [ %i12, %if.then3170 ], [ %i12, %if.then3146 ], [ %i12, %if.then3113 ], [ %i12, %if.then3089 ], [ %i12, %if.then3056 ], [ %i12, %if.then3032 ], [ %i12, %if.then2999 ], [ %i12, %if.then2975 ], [ %i12, %if.then2942 ], [ %nblockMAX.9, %if.then2447 ], [ %nblockMAX.9, %if.then2521 ], [ %nblockMAX.3, %if.then2536 ], [ %nblockMAX.3, %if.then2583 ], [ %nblockMAX.3, %if.end2919 ], [ %nblockMAX.4, %if.then1951 ], [ %nblockMAX.6, %if.then2031 ], [ %nblockMAX.6, %if.then2105 ], [ %nblockMAX.6, %if.then2137 ], [ %nblockMAX.6, %if.then2153 ], [ %nblockMAX.7, %if.then2061 ], [ %nblockMAX.5, %if.then1997 ], [ %nblockMAX.3, %if.then2166 ], [ %nblockMAX.3, %if.then2367 ], [ %nblockMAX.8, %if.then2413 ], [ %nblockMAX.10, %if.then2477 ], [ %nblockMAX.1, %if.then1838 ], [ %nblockMAX.1, %if.then1912 ], [ %nblockMAX.2, %if.then1868 ], [ %nblockMAX.0, %if.then1804 ], [ %i12, %if.then1524 ], [ %i12, %if.then1483 ], [ %mul1719, %if.then1758 ], [ %i12, %if.then1548 ], [ %i12, %if.then1605 ], [ %i12, %if.then1411 ], [ %i12, %if.then1373 ], [ %i12, %if.then1344 ], [ %i12, %if.then1312 ], [ %i12, %if.then1290 ], [ %i12, %if.then1255 ], [ %i12, %if.then1231 ], [ %i12, %if.then1182 ], [ %i12, %if.then1099 ], [ %i12, %if.then1066 ], [ %i12, %if.then1074 ], [ %i12, %if.then1028 ], [ %i12, %if.then972 ], [ %i12, %if.then916 ], [ %i12, %if.then865 ], [ %i12, %if.then809 ], [ %i12, %if.then753 ], [ %i12, %if.then697 ], [ %i12, %if.then641 ], [ %i12, %if.then611 ], [ %i12, %if.then578 ], [ %i12, %if.then555 ], [ %i12, %if.then522 ], [ %i12, %if.then499 ], [ %i12, %if.then466 ], [ %i12, %if.then443 ], [ %i12, %if.then410 ], [ %i12, %if.then387 ], [ %i12, %if.then354 ], [ %i12, %if.then331 ], [ %i12, %if.then293 ], [ %i12, %if.then230 ], [ %i12, %if.then256 ], [ %i12, %if.then269 ], [ %i12, %if.then194 ], [ %i12, %if.then172 ], [ %i12, %if.then139 ], [ %i12, %if.then116 ], [ %i12, %if.then83 ], [ %i12, %if.then60 ], [ %i12, %if.then37 ]
  %nextSym.8 = phi i32 [ %i11, %sw.epilog ], [ %i11, %while.end3427 ], [ %i11, %if.then3398 ], [ %i11, %if.then3341 ], [ %i11, %if.then3284 ], [ %i11, %if.then3227 ], [ %i11, %if.then3203 ], [ %i11, %if.then3170 ], [ %i11, %if.then3146 ], [ %i11, %if.then3113 ], [ %i11, %if.then3089 ], [ %i11, %if.then3056 ], [ %i11, %if.then3032 ], [ %i11, %if.then2999 ], [ %i11, %if.then2975 ], [ %i11, %if.then2942 ], [ %nextSym.6, %if.then2447 ], [ %nextSym.6, %if.then2521 ], [ %nextSym.0, %if.then2536 ], [ %nextSym.0, %if.then2583 ], [ %nextSym.0, %if.end2919 ], [ %nextSym.1, %if.then1951 ], [ %nextSym.3, %if.then2031 ], [ %nextSym.3, %if.then2105 ], [ %i714, %if.then2137 ], [ %i714, %if.then2153 ], [ %nextSym.4, %if.then2061 ], [ %nextSym.2, %if.then1997 ], [ %nextSym.0, %if.then2166 ], [ %nextSym.0, %if.then2367 ], [ %nextSym.5, %if.then2413 ], [ %nextSym.7, %if.then2477 ], [ %i11, %if.then1838 ], [ %i11, %if.then1912 ], [ %i11, %if.then1868 ], [ %i11, %if.then1804 ], [ %i11, %if.then1524 ], [ %i11, %if.then1483 ], [ %i11, %if.then1758 ], [ %i11, %if.then1548 ], [ %i11, %if.then1605 ], [ %i11, %if.then1411 ], [ %i11, %if.then1373 ], [ %i11, %if.then1344 ], [ %i11, %if.then1312 ], [ %i11, %if.then1290 ], [ %i11, %if.then1255 ], [ %i11, %if.then1231 ], [ %i11, %if.then1182 ], [ %i11, %if.then1099 ], [ %i11, %if.then1066 ], [ %i11, %if.then1074 ], [ %i11, %if.then1028 ], [ %i11, %if.then972 ], [ %i11, %if.then916 ], [ %i11, %if.then865 ], [ %i11, %if.then809 ], [ %i11, %if.then753 ], [ %i11, %if.then697 ], [ %i11, %if.then641 ], [ %i11, %if.then611 ], [ %i11, %if.then578 ], [ %i11, %if.then555 ], [ %i11, %if.then522 ], [ %i11, %if.then499 ], [ %i11, %if.then466 ], [ %i11, %if.then443 ], [ %i11, %if.then410 ], [ %i11, %if.then387 ], [ %i11, %if.then354 ], [ %i11, %if.then331 ], [ %i11, %if.then293 ], [ %i11, %if.then230 ], [ %i11, %if.then256 ], [ %i11, %if.then269 ], [ %i11, %if.then194 ], [ %i11, %if.then172 ], [ %i11, %if.then139 ], [ %i11, %if.then116 ], [ %i11, %if.then83 ], [ %i11, %if.then60 ], [ %i11, %if.then37 ]
  %groupPos.14 = phi i32 [ %i10, %sw.epilog ], [ %i10, %while.end3427 ], [ %i10, %if.then3398 ], [ %i10, %if.then3341 ], [ %i10, %if.then3284 ], [ %i10, %if.then3227 ], [ %i10, %if.then3203 ], [ %i10, %if.then3170 ], [ %i10, %if.then3146 ], [ %i10, %if.then3113 ], [ %i10, %if.then3089 ], [ %i10, %if.then3056 ], [ %i10, %if.then3032 ], [ %i10, %if.then2999 ], [ %i10, %if.then2975 ], [ %i10, %if.then2942 ], [ %groupPos.12, %if.then2447 ], [ %groupPos.12, %if.then2521 ], [ %groupPos.4, %if.then2536 ], [ %groupPos.4, %if.then2583 ], [ %groupPos.4, %if.end2919 ], [ %groupPos.5, %if.then1951 ], [ %groupPos.8, %if.then2031 ], [ %groupPos.8, %if.then2105 ], [ %groupPos.8, %if.then2137 ], [ %groupPos.8, %if.then2153 ], [ %groupPos.9, %if.then2061 ], [ %groupPos.7, %if.then1997 ], [ %groupPos.4, %if.then2166 ], [ %groupPos.4, %if.then2367 ], [ %groupPos.11, %if.then2413 ], [ %groupPos.13, %if.then2477 ], [ %groupPos.2, %if.then1838 ], [ %groupPos.2, %if.then1912 ], [ %groupPos.3, %if.then1868 ], [ %groupPos.1, %if.then1804 ], [ %i10, %if.then1524 ], [ %i10, %if.then1483 ], [ 0, %if.then1758 ], [ %i10, %if.then1548 ], [ %i10, %if.then1605 ], [ %i10, %if.then1411 ], [ %i10, %if.then1373 ], [ %i10, %if.then1344 ], [ %i10, %if.then1312 ], [ %i10, %if.then1290 ], [ %i10, %if.then1255 ], [ %i10, %if.then1231 ], [ %i10, %if.then1182 ], [ %i10, %if.then1099 ], [ %i10, %if.then1066 ], [ %i10, %if.then1074 ], [ %i10, %if.then1028 ], [ %i10, %if.then972 ], [ %i10, %if.then916 ], [ %i10, %if.then865 ], [ %i10, %if.then809 ], [ %i10, %if.then753 ], [ %i10, %if.then697 ], [ %i10, %if.then641 ], [ %i10, %if.then611 ], [ %i10, %if.then578 ], [ %i10, %if.then555 ], [ %i10, %if.then522 ], [ %i10, %if.then499 ], [ %i10, %if.then466 ], [ %i10, %if.then443 ], [ %i10, %if.then410 ], [ %i10, %if.then387 ], [ %i10, %if.then354 ], [ %i10, %if.then331 ], [ %i10, %if.then293 ], [ %i10, %if.then230 ], [ %i10, %if.then256 ], [ %i10, %if.then269 ], [ %i10, %if.then194 ], [ %i10, %if.then172 ], [ %i10, %if.then139 ], [ %i10, %if.then116 ], [ %i10, %if.then83 ], [ %i10, %if.then60 ], [ %i10, %if.then37 ]
  %groupNo.14 = phi i32 [ %i9, %sw.epilog ], [ %i9, %while.end3427 ], [ %i9, %if.then3398 ], [ %i9, %if.then3341 ], [ %i9, %if.then3284 ], [ %i9, %if.then3227 ], [ %i9, %if.then3203 ], [ %i9, %if.then3170 ], [ %i9, %if.then3146 ], [ %i9, %if.then3113 ], [ %i9, %if.then3089 ], [ %i9, %if.then3056 ], [ %i9, %if.then3032 ], [ %i9, %if.then2999 ], [ %i9, %if.then2975 ], [ %i9, %if.then2942 ], [ %groupNo.12, %if.then2447 ], [ %groupNo.12, %if.then2521 ], [ %groupNo.4, %if.then2536 ], [ %groupNo.4, %if.then2583 ], [ %groupNo.4, %if.end2919 ], [ %inc1948, %if.then1951 ], [ %groupNo.8, %if.then2031 ], [ %groupNo.8, %if.then2105 ], [ %groupNo.8, %if.then2137 ], [ %groupNo.8, %if.then2153 ], [ %groupNo.9, %if.then2061 ], [ %groupNo.7, %if.then1997 ], [ %groupNo.4, %if.then2166 ], [ %inc2364, %if.then2367 ], [ %groupNo.11, %if.then2413 ], [ %groupNo.13, %if.then2477 ], [ %groupNo.2, %if.then1838 ], [ %groupNo.2, %if.then1912 ], [ %groupNo.3, %if.then1868 ], [ %groupNo.1, %if.then1804 ], [ %i9, %if.then1524 ], [ %i9, %if.then1483 ], [ %inc1755, %if.then1758 ], [ %i9, %if.then1548 ], [ %i9, %if.then1605 ], [ %i9, %if.then1411 ], [ %i9, %if.then1373 ], [ %i9, %if.then1344 ], [ %i9, %if.then1312 ], [ %i9, %if.then1290 ], [ %i9, %if.then1255 ], [ %i9, %if.then1231 ], [ %i9, %if.then1182 ], [ %i9, %if.then1099 ], [ %i9, %if.then1066 ], [ %i9, %if.then1074 ], [ %i9, %if.then1028 ], [ %i9, %if.then972 ], [ %i9, %if.then916 ], [ %i9, %if.then865 ], [ %i9, %if.then809 ], [ %i9, %if.then753 ], [ %i9, %if.then697 ], [ %i9, %if.then641 ], [ %i9, %if.then611 ], [ %i9, %if.then578 ], [ %i9, %if.then555 ], [ %i9, %if.then522 ], [ %i9, %if.then499 ], [ %i9, %if.then466 ], [ %i9, %if.then443 ], [ %i9, %if.then410 ], [ %i9, %if.then387 ], [ %i9, %if.then354 ], [ %i9, %if.then331 ], [ %i9, %if.then293 ], [ %i9, %if.then230 ], [ %i9, %if.then256 ], [ %i9, %if.then269 ], [ %i9, %if.then194 ], [ %i9, %if.then172 ], [ %i9, %if.then139 ], [ %i9, %if.then116 ], [ %i9, %if.then83 ], [ %i9, %if.then60 ], [ %i9, %if.then37 ]
  %EOB.11 = phi i32 [ %i8, %sw.epilog ], [ %i8, %while.end3427 ], [ %i8, %if.then3398 ], [ %i8, %if.then3341 ], [ %i8, %if.then3284 ], [ %i8, %if.then3227 ], [ %i8, %if.then3203 ], [ %i8, %if.then3170 ], [ %i8, %if.then3146 ], [ %i8, %if.then3113 ], [ %i8, %if.then3089 ], [ %i8, %if.then3056 ], [ %i8, %if.then3032 ], [ %i8, %if.then2999 ], [ %i8, %if.then2975 ], [ %i8, %if.then2942 ], [ %EOB.9, %if.then2447 ], [ %EOB.9, %if.then2521 ], [ %EOB.3, %if.then2536 ], [ %EOB.3, %if.then2583 ], [ %EOB.3, %if.end2919 ], [ %EOB.4, %if.then1951 ], [ %EOB.6, %if.then2031 ], [ %EOB.6, %if.then2105 ], [ %EOB.6, %if.then2137 ], [ %EOB.6, %if.then2153 ], [ %EOB.7, %if.then2061 ], [ %EOB.5, %if.then1997 ], [ %EOB.3, %if.then2166 ], [ %EOB.3, %if.then2367 ], [ %EOB.8, %if.then2413 ], [ %EOB.10, %if.then2477 ], [ %EOB.1, %if.then1838 ], [ %EOB.1, %if.then1912 ], [ %EOB.2, %if.then1868 ], [ %EOB.0, %if.then1804 ], [ %i8, %if.then1524 ], [ %i8, %if.then1483 ], [ %add1717, %if.then1758 ], [ %i8, %if.then1548 ], [ %i8, %if.then1605 ], [ %i8, %if.then1411 ], [ %i8, %if.then1373 ], [ %i8, %if.then1344 ], [ %i8, %if.then1312 ], [ %i8, %if.then1290 ], [ %i8, %if.then1255 ], [ %i8, %if.then1231 ], [ %i8, %if.then1182 ], [ %i8, %if.then1099 ], [ %i8, %if.then1066 ], [ %i8, %if.then1074 ], [ %i8, %if.then1028 ], [ %i8, %if.then972 ], [ %i8, %if.then916 ], [ %i8, %if.then865 ], [ %i8, %if.then809 ], [ %i8, %if.then753 ], [ %i8, %if.then697 ], [ %i8, %if.then641 ], [ %i8, %if.then611 ], [ %i8, %if.then578 ], [ %i8, %if.then555 ], [ %i8, %if.then522 ], [ %i8, %if.then499 ], [ %i8, %if.then466 ], [ %i8, %if.then443 ], [ %i8, %if.then410 ], [ %i8, %if.then387 ], [ %i8, %if.then354 ], [ %i8, %if.then331 ], [ %i8, %if.then293 ], [ %i8, %if.then230 ], [ %i8, %if.then256 ], [ %i8, %if.then269 ], [ %i8, %if.then194 ], [ %i8, %if.then172 ], [ %i8, %if.then139 ], [ %i8, %if.then116 ], [ %i8, %if.then83 ], [ %i8, %if.then60 ], [ %i8, %if.then37 ]
  %nSelectors.20 = phi i32 [ %i7, %sw.epilog ], [ %i7, %while.end3427 ], [ %i7, %if.then3398 ], [ %i7, %if.then3341 ], [ %i7, %if.then3284 ], [ %i7, %if.then3227 ], [ %i7, %if.then3203 ], [ %i7, %if.then3170 ], [ %i7, %if.then3146 ], [ %i7, %if.then3113 ], [ %i7, %if.then3089 ], [ %i7, %if.then3056 ], [ %i7, %if.then3032 ], [ %i7, %if.then2999 ], [ %i7, %if.then2975 ], [ %i7, %if.then2942 ], [ %nSelectors.18, %if.then2447 ], [ %nSelectors.18, %if.then2521 ], [ %nSelectors.12, %if.then2536 ], [ %nSelectors.12, %if.then2583 ], [ %nSelectors.12, %if.end2919 ], [ %nSelectors.13, %if.then1951 ], [ %nSelectors.15, %if.then2031 ], [ %nSelectors.15, %if.then2105 ], [ %nSelectors.15, %if.then2137 ], [ %nSelectors.15, %if.then2153 ], [ %nSelectors.16, %if.then2061 ], [ %nSelectors.14, %if.then1997 ], [ %nSelectors.12, %if.then2166 ], [ %nSelectors.12, %if.then2367 ], [ %nSelectors.17, %if.then2413 ], [ %nSelectors.19, %if.then2477 ], [ %nSelectors.10, %if.then1838 ], [ %nSelectors.10, %if.then1912 ], [ %nSelectors.11, %if.then1868 ], [ %nSelectors.9, %if.then1804 ], [ %nSelectors.6, %if.then1524 ], [ %nSelectors.4, %if.then1483 ], [ %nSelectors.3, %if.then1758 ], [ %nSelectors.7, %if.then1548 ], [ %nSelectors.8, %if.then1605 ], [ %nSelectors.2, %if.then1411 ], [ %nSelectors.2, %if.then1373 ], [ %and1304, %if.then1344 ], [ %i7, %if.then1312 ], [ %i7, %if.then1290 ], [ %i7, %if.then1255 ], [ %i7, %if.then1231 ], [ %i7, %if.then1182 ], [ %i7, %if.then1099 ], [ %i7, %if.then1066 ], [ %i7, %if.then1074 ], [ %i7, %if.then1028 ], [ %i7, %if.then972 ], [ %i7, %if.then916 ], [ %i7, %if.then865 ], [ %i7, %if.then809 ], [ %i7, %if.then753 ], [ %i7, %if.then697 ], [ %i7, %if.then641 ], [ %i7, %if.then611 ], [ %i7, %if.then578 ], [ %i7, %if.then555 ], [ %i7, %if.then522 ], [ %i7, %if.then499 ], [ %i7, %if.then466 ], [ %i7, %if.then443 ], [ %i7, %if.then410 ], [ %i7, %if.then387 ], [ %i7, %if.then354 ], [ %i7, %if.then331 ], [ %i7, %if.then293 ], [ %i7, %if.then230 ], [ %i7, %if.then256 ], [ %i7, %if.then269 ], [ %i7, %if.then194 ], [ %i7, %if.then172 ], [ %i7, %if.then139 ], [ %i7, %if.then116 ], [ %i7, %if.then83 ], [ %i7, %if.then60 ], [ %i7, %if.then37 ]
  %nGroups.21 = phi i32 [ %i6, %sw.epilog ], [ %i6, %while.end3427 ], [ %i6, %if.then3398 ], [ %i6, %if.then3341 ], [ %i6, %if.then3284 ], [ %i6, %if.then3227 ], [ %i6, %if.then3203 ], [ %i6, %if.then3170 ], [ %i6, %if.then3146 ], [ %i6, %if.then3113 ], [ %i6, %if.then3089 ], [ %i6, %if.then3056 ], [ %i6, %if.then3032 ], [ %i6, %if.then2999 ], [ %i6, %if.then2975 ], [ %i6, %if.then2942 ], [ %nGroups.19, %if.then2447 ], [ %nGroups.19, %if.then2521 ], [ %nGroups.13, %if.then2536 ], [ %nGroups.13, %if.then2583 ], [ %nGroups.13, %if.end2919 ], [ %nGroups.14, %if.then1951 ], [ %nGroups.16, %if.then2031 ], [ %nGroups.16, %if.then2105 ], [ %nGroups.16, %if.then2137 ], [ %nGroups.16, %if.then2153 ], [ %nGroups.17, %if.then2061 ], [ %nGroups.15, %if.then1997 ], [ %nGroups.13, %if.then2166 ], [ %nGroups.13, %if.then2367 ], [ %nGroups.18, %if.then2413 ], [ %nGroups.20, %if.then2477 ], [ %nGroups.11, %if.then1838 ], [ %nGroups.11, %if.then1912 ], [ %nGroups.12, %if.then1868 ], [ %nGroups.10, %if.then1804 ], [ %nGroups.7, %if.then1524 ], [ %nGroups.5, %if.then1483 ], [ %nGroups.4, %if.then1758 ], [ %nGroups.8, %if.then1548 ], [ %nGroups.9, %if.then1605 ], [ %nGroups.3, %if.then1411 ], [ %nGroups.3, %if.then1373 ], [ %nGroups.0, %if.then1344 ], [ %nGroups.0, %if.then1312 ], [ %and1247, %if.then1290 ], [ %i6, %if.then1255 ], [ %i6, %if.then1231 ], [ %i6, %if.then1182 ], [ %i6, %if.then1099 ], [ %i6, %if.then1066 ], [ %i6, %if.then1074 ], [ %i6, %if.then1028 ], [ %i6, %if.then972 ], [ %i6, %if.then916 ], [ %i6, %if.then865 ], [ %i6, %if.then809 ], [ %i6, %if.then753 ], [ %i6, %if.then697 ], [ %i6, %if.then641 ], [ %i6, %if.then611 ], [ %i6, %if.then578 ], [ %i6, %if.then555 ], [ %i6, %if.then522 ], [ %i6, %if.then499 ], [ %i6, %if.then466 ], [ %i6, %if.then443 ], [ %i6, %if.then410 ], [ %i6, %if.then387 ], [ %i6, %if.then354 ], [ %i6, %if.then331 ], [ %i6, %if.then293 ], [ %i6, %if.then230 ], [ %i6, %if.then256 ], [ %i6, %if.then269 ], [ %i6, %if.then194 ], [ %i6, %if.then172 ], [ %i6, %if.then139 ], [ %i6, %if.then116 ], [ %i6, %if.then83 ], [ %i6, %if.then60 ], [ %i6, %if.then37 ]
  %alphaSize.22 = phi i32 [ %i5, %sw.epilog ], [ %i5, %while.end3427 ], [ %i5, %if.then3398 ], [ %i5, %if.then3341 ], [ %i5, %if.then3284 ], [ %i5, %if.then3227 ], [ %i5, %if.then3203 ], [ %i5, %if.then3170 ], [ %i5, %if.then3146 ], [ %i5, %if.then3113 ], [ %i5, %if.then3089 ], [ %i5, %if.then3056 ], [ %i5, %if.then3032 ], [ %i5, %if.then2999 ], [ %i5, %if.then2975 ], [ %i5, %if.then2942 ], [ %alphaSize.20, %if.then2447 ], [ %alphaSize.20, %if.then2521 ], [ %alphaSize.14, %if.then2536 ], [ %alphaSize.14, %if.then2583 ], [ %alphaSize.14, %if.end2919 ], [ %alphaSize.15, %if.then1951 ], [ %alphaSize.17, %if.then2031 ], [ %alphaSize.17, %if.then2105 ], [ %alphaSize.17, %if.then2137 ], [ %alphaSize.17, %if.then2153 ], [ %alphaSize.18, %if.then2061 ], [ %alphaSize.16, %if.then1997 ], [ %alphaSize.14, %if.then2166 ], [ %alphaSize.14, %if.then2367 ], [ %alphaSize.19, %if.then2413 ], [ %alphaSize.21, %if.then2477 ], [ %alphaSize.12, %if.then1838 ], [ %alphaSize.12, %if.then1912 ], [ %alphaSize.13, %if.then1868 ], [ %alphaSize.11, %if.then1804 ], [ %alphaSize.8, %if.then1524 ], [ %alphaSize.6, %if.then1483 ], [ %alphaSize.5, %if.then1758 ], [ %alphaSize.9, %if.then1548 ], [ %alphaSize.10, %if.then1605 ], [ %alphaSize.4, %if.then1411 ], [ %alphaSize.4, %if.then1373 ], [ %alphaSize.1, %if.then1344 ], [ %alphaSize.1, %if.then1312 ], [ %alphaSize.0, %if.then1290 ], [ %alphaSize.0, %if.then1255 ], [ %i5, %if.then1231 ], [ %i5, %if.then1182 ], [ %i5, %if.then1099 ], [ %i5, %if.then1066 ], [ %i5, %if.then1074 ], [ %i5, %if.then1028 ], [ %i5, %if.then972 ], [ %i5, %if.then916 ], [ %i5, %if.then865 ], [ %i5, %if.then809 ], [ %i5, %if.then753 ], [ %i5, %if.then697 ], [ %i5, %if.then641 ], [ %i5, %if.then611 ], [ %i5, %if.then578 ], [ %i5, %if.then555 ], [ %i5, %if.then522 ], [ %i5, %if.then499 ], [ %i5, %if.then466 ], [ %i5, %if.then443 ], [ %i5, %if.then410 ], [ %i5, %if.then387 ], [ %i5, %if.then354 ], [ %i5, %if.then331 ], [ %i5, %if.then293 ], [ %i5, %if.then230 ], [ %i5, %if.then256 ], [ %i5, %if.then269 ], [ %i5, %if.then194 ], [ %i5, %if.then172 ], [ %i5, %if.then139 ], [ %i5, %if.then116 ], [ %i5, %if.then83 ], [ %i5, %if.then60 ], [ %i5, %if.then37 ]
  %t.18 = phi i32 [ %i4, %sw.epilog ], [ %i4, %while.end3427 ], [ %i4, %if.then3398 ], [ %i4, %if.then3341 ], [ %i4, %if.then3284 ], [ %i4, %if.then3227 ], [ %i4, %if.then3203 ], [ %i4, %if.then3170 ], [ %i4, %if.then3146 ], [ %i4, %if.then3113 ], [ %i4, %if.then3089 ], [ %i4, %if.then3056 ], [ %i4, %if.then3032 ], [ %i4, %if.then2999 ], [ %i4, %if.then2975 ], [ %i4, %if.then2942 ], [ %t.16, %if.then2447 ], [ %t.16, %if.then2521 ], [ %t.10, %if.then2536 ], [ %t.10, %if.then2583 ], [ %t.10, %if.end2919 ], [ %t.11, %if.then1951 ], [ %t.13, %if.then2031 ], [ %t.13, %if.then2105 ], [ %t.13, %if.then2137 ], [ %t.13, %if.then2153 ], [ %t.14, %if.then2061 ], [ %t.12, %if.then1997 ], [ %t.10, %if.then2166 ], [ %t.10, %if.then2367 ], [ %t.15, %if.then2413 ], [ %t.17, %if.then2477 ], [ %t.8, %if.then1838 ], [ %t.8, %if.then1912 ], [ %t.9, %if.then1868 ], [ %t.7, %if.then1804 ], [ %t.3, %if.then1524 ], [ %t.1, %if.then1483 ], [ %t.6, %if.then1758 ], [ %t.4, %if.then1548 ], [ %t.5, %if.then1605 ], [ %i4, %if.then1411 ], [ %i4, %if.then1373 ], [ %i4, %if.then1344 ], [ %i4, %if.then1312 ], [ %i4, %if.then1290 ], [ %i4, %if.then1255 ], [ %i4, %if.then1231 ], [ %i4, %if.then1182 ], [ %i4, %if.then1099 ], [ %i4, %if.then1066 ], [ %i4, %if.then1074 ], [ %i4, %if.then1028 ], [ %i4, %if.then972 ], [ %i4, %if.then916 ], [ %i4, %if.then865 ], [ %i4, %if.then809 ], [ %i4, %if.then753 ], [ %i4, %if.then697 ], [ %i4, %if.then641 ], [ %i4, %if.then611 ], [ %i4, %if.then578 ], [ %i4, %if.then555 ], [ %i4, %if.then522 ], [ %i4, %if.then499 ], [ %i4, %if.then466 ], [ %i4, %if.then443 ], [ %i4, %if.then410 ], [ %i4, %if.then387 ], [ %i4, %if.then354 ], [ %i4, %if.then331 ], [ %i4, %if.then293 ], [ %i4, %if.then230 ], [ %i4, %if.then256 ], [ %i4, %if.then269 ], [ %i4, %if.then194 ], [ %i4, %if.then172 ], [ %i4, %if.then139 ], [ %i4, %if.then116 ], [ %i4, %if.then83 ], [ %i4, %if.then60 ], [ %i4, %if.then37 ]
  %j.28 = phi i32 [ %i3, %sw.epilog ], [ %i3, %while.end3427 ], [ %i3, %if.then3398 ], [ %i3, %if.then3341 ], [ %i3, %if.then3284 ], [ %i3, %if.then3227 ], [ %i3, %if.then3203 ], [ %i3, %if.then3170 ], [ %i3, %if.then3146 ], [ %i3, %if.then3113 ], [ %i3, %if.then3089 ], [ %i3, %if.then3056 ], [ %i3, %if.then3032 ], [ %i3, %if.then2999 ], [ %i3, %if.then2975 ], [ %i3, %if.then2942 ], [ %j.24, %if.then2447 ], [ %j.24, %if.then2521 ], [ %j.18, %if.then2536 ], [ %j.18, %if.then2583 ], [ %j.27, %if.end2919 ], [ %j.19, %if.then1951 ], [ %j.21, %if.then2031 ], [ %j.21, %if.then2105 ], [ %j.21, %if.then2137 ], [ %j.21, %if.then2153 ], [ %j.22, %if.then2061 ], [ %j.20, %if.then1997 ], [ %j.18, %if.then2166 ], [ %j.18, %if.then2367 ], [ %j.23, %if.then2413 ], [ %j.25, %if.then2477 ], [ %j.16, %if.then1838 ], [ %j.16, %if.then1912 ], [ %j.17, %if.then1868 ], [ %j.15, %if.then1804 ], [ %j.12, %if.then1524 ], [ %j.10, %if.then1483 ], [ %j.9, %if.then1758 ], [ %j.13, %if.then1548 ], [ %j.14, %if.then1605 ], [ %inc1408, %if.then1411 ], [ %j.8, %if.then1373 ], [ %j.5, %if.then1344 ], [ %j.5, %if.then1312 ], [ %j.4, %if.then1290 ], [ %j.4, %if.then1255 ], [ %j.0, %if.then1231 ], [ %j.2, %if.then1182 ], [ %i3, %if.then1099 ], [ %i3, %if.then1066 ], [ %i3, %if.then1074 ], [ %i3, %if.then1028 ], [ %i3, %if.then972 ], [ %i3, %if.then916 ], [ %i3, %if.then865 ], [ %i3, %if.then809 ], [ %i3, %if.then753 ], [ %i3, %if.then697 ], [ %i3, %if.then641 ], [ %i3, %if.then611 ], [ %i3, %if.then578 ], [ %i3, %if.then555 ], [ %i3, %if.then522 ], [ %i3, %if.then499 ], [ %i3, %if.then466 ], [ %i3, %if.then443 ], [ %i3, %if.then410 ], [ %i3, %if.then387 ], [ %i3, %if.then354 ], [ %i3, %if.then331 ], [ %i3, %if.then293 ], [ %i3, %if.then230 ], [ %i3, %if.then256 ], [ %i3, %if.then269 ], [ %i3, %if.then194 ], [ %i3, %if.then172 ], [ %i3, %if.then139 ], [ %i3, %if.then116 ], [ %i3, %if.then83 ], [ %i3, %if.then60 ], [ %i3, %if.then37 ]
  %i.40 = phi i32 [ %i2, %sw.epilog ], [ %i2, %while.end3427 ], [ %i2, %if.then3398 ], [ %i2, %if.then3341 ], [ %i2, %if.then3284 ], [ %i2, %if.then3227 ], [ %i2, %if.then3203 ], [ %i2, %if.then3170 ], [ %i2, %if.then3146 ], [ %i2, %if.then3113 ], [ %i2, %if.then3089 ], [ %i2, %if.then3056 ], [ %i2, %if.then3032 ], [ %i2, %if.then2999 ], [ %i2, %if.then2975 ], [ %i2, %if.then2942 ], [ %i.30, %if.then2447 ], [ %i.30, %if.then2521 ], [ %i.24, %if.then2536 ], [ %i.34, %if.then2583 ], [ %i.39, %if.end2919 ], [ %i.25, %if.then1951 ], [ %i.27, %if.then2031 ], [ %i.27, %if.then2105 ], [ %i.27, %if.then2137 ], [ %i.27, %if.then2153 ], [ %i.28, %if.then2061 ], [ %i.26, %if.then1997 ], [ %i.24, %if.then2166 ], [ %i.24, %if.then2367 ], [ %i.29, %if.then2413 ], [ %i.31, %if.then2477 ], [ %i.22, %if.then1838 ], [ %i.22, %if.then1912 ], [ %i.23, %if.then1868 ], [ %i.21, %if.then1804 ], [ %i.16, %if.then1524 ], [ %i.14, %if.then1483 ], [ %i.20, %if.then1758 ], [ %i.17, %if.then1548 ], [ %i.18, %if.then1605 ], [ %i.11, %if.then1411 ], [ %i.11, %if.then1373 ], [ %i.8, %if.then1344 ], [ %i.8, %if.then1312 ], [ %i.7, %if.then1290 ], [ %i.7, %if.then1255 ], [ %i.3, %if.then1231 ], [ %i.5, %if.then1182 ], [ %i.1, %if.then1099 ], [ %i2, %if.then1066 ], [ %i2, %if.then1074 ], [ %i2, %if.then1028 ], [ %i2, %if.then972 ], [ %i2, %if.then916 ], [ %i2, %if.then865 ], [ %i2, %if.then809 ], [ %i2, %if.then753 ], [ %i2, %if.then697 ], [ %i2, %if.then641 ], [ %i2, %if.then611 ], [ %i2, %if.then578 ], [ %i2, %if.then555 ], [ %i2, %if.then522 ], [ %i2, %if.then499 ], [ %i2, %if.then466 ], [ %i2, %if.then443 ], [ %i2, %if.then410 ], [ %i2, %if.then387 ], [ %i2, %if.then354 ], [ %i2, %if.then331 ], [ %i2, %if.then293 ], [ %i2, %if.then230 ], [ %i2, %if.then256 ], [ %i2, %if.then269 ], [ %i2, %if.then194 ], [ %i2, %if.then172 ], [ %i2, %if.then139 ], [ %i2, %if.then116 ], [ %i2, %if.then83 ], [ %i2, %if.then60 ], [ %i2, %if.then37 ]
  %retVal.0 = phi i32 [ 0, %sw.epilog ], [ 4, %while.end3427 ], [ 0, %if.then3398 ], [ 0, %if.then3341 ], [ 0, %if.then3284 ], [ 0, %if.then3227 ], [ -4, %if.then3203 ], [ 0, %if.then3170 ], [ -4, %if.then3146 ], [ 0, %if.then3113 ], [ -4, %if.then3089 ], [ 0, %if.then3056 ], [ -4, %if.then3032 ], [ 0, %if.then2999 ], [ -4, %if.then2975 ], [ 0, %if.then2942 ], [ -4, %if.then2447 ], [ -4, %if.then2521 ], [ -4, %if.then2536 ], [ -4, %if.then2583 ], [ 0, %if.end2919 ], [ -4, %if.then1951 ], [ -4, %if.then2031 ], [ -4, %if.then2105 ], [ -4, %if.then2137 ], [ -4, %if.then2153 ], [ 0, %if.then2061 ], [ 0, %if.then1997 ], [ -4, %if.then2166 ], [ -4, %if.then2367 ], [ 0, %if.then2413 ], [ 0, %if.then2477 ], [ -4, %if.then1838 ], [ -4, %if.then1912 ], [ 0, %if.then1868 ], [ 0, %if.then1804 ], [ -4, %if.then1524 ], [ 0, %if.then1483 ], [ -4, %if.then1758 ], [ 0, %if.then1548 ], [ 0, %if.then1605 ], [ -4, %if.then1411 ], [ 0, %if.then1373 ], [ -4, %if.then1344 ], [ 0, %if.then1312 ], [ -4, %if.then1290 ], [ 0, %if.then1255 ], [ -4, %if.then1231 ], [ 0, %if.then1182 ], [ 0, %if.then1099 ], [ -4, %if.then1066 ], [ -4, %if.then1074 ], [ 0, %if.then1028 ], [ 0, %if.then972 ], [ 0, %if.then916 ], [ 0, %if.then865 ], [ 0, %if.then809 ], [ 0, %if.then753 ], [ 0, %if.then697 ], [ 0, %if.then641 ], [ -4, %if.then611 ], [ 0, %if.then578 ], [ -4, %if.then555 ], [ 0, %if.then522 ], [ -4, %if.then499 ], [ 0, %if.then466 ], [ -4, %if.then443 ], [ 0, %if.then410 ], [ -4, %if.then387 ], [ 0, %if.then354 ], [ -4, %if.then331 ], [ 0, %if.then293 ], [ -5, %if.then230 ], [ -3, %if.then256 ], [ -3, %if.then269 ], [ 0, %if.then194 ], [ -5, %if.then172 ], [ 0, %if.then139 ], [ -5, %if.then116 ], [ 0, %if.then83 ], [ -5, %if.then60 ], [ 0, %if.then37 ]
  %save_i3434 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 40
  store i32 %i.40, i32* %save_i3434, align 4
  %save_j3435 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 41
  store i32 %j.28, i32* %save_j3435, align 8
  %save_t3436 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 42
  store i32 %t.18, i32* %save_t3436, align 4
  %save_alphaSize3437 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 43
  store i32 %alphaSize.22, i32* %save_alphaSize3437, align 8
  %save_nGroups3438 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 44
  store i32 %nGroups.21, i32* %save_nGroups3438, align 4
  %save_nSelectors3439 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 45
  store i32 %nSelectors.20, i32* %save_nSelectors3439, align 8
  %save_EOB3440 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 46
  store i32 %EOB.11, i32* %save_EOB3440, align 4
  %save_groupNo3441 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 47
  store i32 %groupNo.14, i32* %save_groupNo3441, align 8
  %save_groupPos3442 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 48
  store i32 %groupPos.14, i32* %save_groupPos3442, align 4
  %save_nextSym3443 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 49
  store i32 %nextSym.8, i32* %save_nextSym3443, align 8
  %save_nblockMAX3444 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 50
  store i32 %nblockMAX.11, i32* %save_nblockMAX3444, align 4
  %save_nblock3445 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 51
  store i32 %nblock.14, i32* %save_nblock3445, align 8
  %save_es3446 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 52
  store i32 %es.13, i32* %save_es3446, align 4
  %save_N3447 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 53
  store i32 %N.8, i32* %save_N3447, align 8
  %save_curr3448 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 54
  store i32 %curr.18, i32* %save_curr3448, align 4
  %save_zt3449 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 55
  store i32 %i17, i32* %save_zt3449, align 8
  %save_zn3450 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 56
  store i32 %zn.11, i32* %save_zn3450, align 4
  %save_zvec3451 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 57
  store i32 %zvec.10, i32* %save_zvec3451, align 8
  %save_zj3452 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 58
  store i32 %zj.10, i32* %save_zj3452, align 4
  %save_gSel3453 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 59
  store i32 %gSel.14, i32* %save_gSel3453, align 8
  %save_gMinlen3454 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 60
  store i32 %gMinlen.14, i32* %save_gMinlen3454, align 4
  %save_gLimit3455 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 61
  store i32* %gLimit.14, i32** %save_gLimit3455, align 8
  %save_gBase3456 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 62
  store i32* %gBase.14, i32** %save_gBase3456, align 8
  %save_gPerm3457 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 63
  store i32* %gPerm.14, i32** %save_gPerm3457, align 8
  ret i32 %retVal.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @makeMaps_d(%struct.DState* %s) #0 {
entry:
  %nInUse = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 27
  store i32 0, i32* %nInUse, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc5, %for.inc ]
  %cmp = icmp slt i32 %i.0, 256
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %inUse = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 28
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %inUse, i64 0, i64 %idxprom
  %i = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %i, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %conv = trunc i32 %i.0 to i8
  %seqToUnseq = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 30
  %nInUse1 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 27
  %i1 = load i32, i32* %nInUse1, align 8
  %idxprom2 = sext i32 %i1 to i64
  %arrayidx3 = getelementptr inbounds [256 x i8], [256 x i8]* %seqToUnseq, i64 0, i64 %idxprom2
  store i8 %conv, i8* %arrayidx3, align 1
  %nInUse4 = getelementptr inbounds %struct.DState, %struct.DState* %s, i32 0, i32 27
  %i2 = load i32, i32* %nInUse4, align 8
  %inc = add nsw i32 %i2, 1
  store i32 %inc, i32* %nInUse4, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %inc5 = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_hbMakeCodeLengths(i8* %len, i32* %freq, i32 %alphaSize, i32 %maxLen) #0 {
entry:
  %heap = alloca [260 x i32], align 16
  %weight = alloca [516 x i32], align 16
  %parent = alloca [516 x i32], align 16
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, %alphaSize
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i32, i32* %freq, i64 %idxprom
  %i = load i32, i32* %arrayidx, align 4
  %cmp1 = icmp eq i32 %i, 0
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %idxprom2 = sext i32 %i.0 to i64
  %arrayidx3 = getelementptr inbounds i32, i32* %freq, i64 %idxprom2
  %i1 = load i32, i32* %arrayidx3, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %i1, %cond.false ]
  %shl = shl i32 %cond, 8
  %add = add nsw i32 %i.0, 1
  %idxprom4 = sext i32 %add to i64
  %arrayidx5 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom4
  store i32 %shl, i32* %arrayidx5, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %while.body

while.body:                                       ; preds = %for.end233, %for.end
  %arrayidx6 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 0
  store i32 0, i32* %arrayidx6, align 16
  %arrayidx7 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 0
  store i32 0, i32* %arrayidx7, align 16
  %arrayidx8 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 0
  store i32 -2, i32* %arrayidx8, align 16
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc36, %while.body
  %i.1 = phi i32 [ 1, %while.body ], [ %inc37, %for.inc36 ]
  %nHeap.0 = phi i32 [ 0, %while.body ], [ %inc14, %for.inc36 ]
  %cmp10 = icmp sle i32 %i.1, %alphaSize
  br i1 %cmp10, label %for.body11, label %for.end38

for.body11:                                       ; preds = %for.cond9
  %idxprom12 = sext i32 %i.1 to i64
  %arrayidx13 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom12
  store i32 -1, i32* %arrayidx13, align 4
  %inc14 = add nsw i32 %nHeap.0, 1
  %idxprom15 = sext i32 %inc14 to i64
  %arrayidx16 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom15
  store i32 %i.1, i32* %arrayidx16, align 4
  %idxprom17 = sext i32 %inc14 to i64
  %arrayidx18 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom17
  %i2 = load i32, i32* %arrayidx18, align 4
  br label %while.cond19

while.cond19:                                     ; preds = %while.body27, %for.body11
  %zz.0 = phi i32 [ %inc14, %for.body11 ], [ %shr33, %while.body27 ]
  %idxprom20 = sext i32 %i2 to i64
  %arrayidx21 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom20
  %i3 = load i32, i32* %arrayidx21, align 4
  %shr = ashr i32 %zz.0, 1
  %idxprom22 = sext i32 %shr to i64
  %arrayidx23 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom22
  %i4 = load i32, i32* %arrayidx23, align 4
  %idxprom24 = sext i32 %i4 to i64
  %arrayidx25 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom24
  %i5 = load i32, i32* %arrayidx25, align 4
  %cmp26 = icmp slt i32 %i3, %i5
  br i1 %cmp26, label %while.body27, label %while.end

while.body27:                                     ; preds = %while.cond19
  %shr28 = ashr i32 %zz.0, 1
  %idxprom29 = sext i32 %shr28 to i64
  %arrayidx30 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom29
  %i6 = load i32, i32* %arrayidx30, align 4
  %idxprom31 = sext i32 %zz.0 to i64
  %arrayidx32 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom31
  store i32 %i6, i32* %arrayidx32, align 4
  %shr33 = ashr i32 %zz.0, 1
  br label %while.cond19

while.end:                                        ; preds = %while.cond19
  %idxprom34 = sext i32 %zz.0 to i64
  %arrayidx35 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom34
  store i32 %i2, i32* %arrayidx35, align 4
  br label %for.inc36

for.inc36:                                        ; preds = %while.end
  %inc37 = add nsw i32 %i.1, 1
  br label %for.cond9

for.end38:                                        ; preds = %for.cond9
  %cmp39 = icmp slt i32 %nHeap.0, 260
  br i1 %cmp39, label %if.end, label %if.then

if.then:                                          ; preds = %for.end38
  call void @BZ2_bz__AssertH__fail(i32 2001)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end38
  br label %while.cond40

while.cond40:                                     ; preds = %while.end190, %if.end
  %nHeap.1 = phi i32 [ %nHeap.0, %if.end ], [ %inc167, %while.end190 ]
  %nNodes.0 = phi i32 [ %alphaSize, %if.end ], [ %inc134, %while.end190 ]
  %cmp41 = icmp sgt i32 %nHeap.1, 1
  br i1 %cmp41, label %while.body42, label %while.end193

while.body42:                                     ; preds = %while.cond40
  %arrayidx43 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 1
  %i7 = load i32, i32* %arrayidx43, align 4
  %idxprom44 = sext i32 %nHeap.1 to i64
  %arrayidx45 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom44
  %i8 = load i32, i32* %arrayidx45, align 4
  %arrayidx46 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 1
  store i32 %i8, i32* %arrayidx46, align 4
  %dec = add nsw i32 %nHeap.1, -1
  %idxprom49 = sext i32 1 to i64
  %arrayidx50 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom49
  %i9 = load i32, i32* %arrayidx50, align 4
  br label %while.body52

while.body52:                                     ; preds = %if.end79, %while.body42
  %zz47.0 = phi i32 [ 1, %while.body42 ], [ %yy.0, %if.end79 ]
  %shl53 = shl i32 %zz47.0, 1
  %cmp54 = icmp sgt i32 %shl53, %dec
  br i1 %cmp54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %while.body52
  br label %while.end84

if.end56:                                         ; preds = %while.body52
  %cmp57 = icmp slt i32 %shl53, %dec
  br i1 %cmp57, label %land.lhs.true, label %if.end70

land.lhs.true:                                    ; preds = %if.end56
  %add58 = add nsw i32 %shl53, 1
  %idxprom59 = sext i32 %add58 to i64
  %arrayidx60 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom59
  %i10 = load i32, i32* %arrayidx60, align 4
  %idxprom61 = sext i32 %i10 to i64
  %arrayidx62 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom61
  %i11 = load i32, i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %shl53 to i64
  %arrayidx64 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom63
  %i12 = load i32, i32* %arrayidx64, align 4
  %idxprom65 = sext i32 %i12 to i64
  %arrayidx66 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom65
  %i13 = load i32, i32* %arrayidx66, align 4
  %cmp67 = icmp slt i32 %i11, %i13
  br i1 %cmp67, label %if.then68, label %if.end70

if.then68:                                        ; preds = %land.lhs.true
  %inc69 = add nsw i32 %shl53, 1
  br label %if.end70

if.end70:                                         ; preds = %if.then68, %land.lhs.true, %if.end56
  %yy.0 = phi i32 [ %inc69, %if.then68 ], [ %shl53, %land.lhs.true ], [ %shl53, %if.end56 ]
  %idxprom71 = sext i32 %i9 to i64
  %arrayidx72 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom71
  %i14 = load i32, i32* %arrayidx72, align 4
  %idxprom73 = sext i32 %yy.0 to i64
  %arrayidx74 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom73
  %i15 = load i32, i32* %arrayidx74, align 4
  %idxprom75 = sext i32 %i15 to i64
  %arrayidx76 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom75
  %i16 = load i32, i32* %arrayidx76, align 4
  %cmp77 = icmp slt i32 %i14, %i16
  br i1 %cmp77, label %if.then78, label %if.end79

if.then78:                                        ; preds = %if.end70
  br label %while.end84

if.end79:                                         ; preds = %if.end70
  %idxprom80 = sext i32 %yy.0 to i64
  %arrayidx81 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom80
  %i17 = load i32, i32* %arrayidx81, align 4
  %idxprom82 = sext i32 %zz47.0 to i64
  %arrayidx83 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom82
  store i32 %i17, i32* %arrayidx83, align 4
  br label %while.body52

while.end84:                                      ; preds = %if.then78, %if.then55
  %idxprom85 = sext i32 %zz47.0 to i64
  %arrayidx86 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom85
  store i32 %i9, i32* %arrayidx86, align 4
  %arrayidx87 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 1
  %i18 = load i32, i32* %arrayidx87, align 4
  %idxprom88 = sext i32 %dec to i64
  %arrayidx89 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom88
  %i19 = load i32, i32* %arrayidx89, align 4
  %arrayidx90 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 1
  store i32 %i19, i32* %arrayidx90, align 4
  %dec91 = add nsw i32 %dec, -1
  %idxprom95 = sext i32 1 to i64
  %arrayidx96 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom95
  %i20 = load i32, i32* %arrayidx96, align 4
  br label %while.body98

while.body98:                                     ; preds = %if.end126, %while.end84
  %zz92.0 = phi i32 [ 1, %while.end84 ], [ %yy93.0, %if.end126 ]
  %shl99 = shl i32 %zz92.0, 1
  %cmp100 = icmp sgt i32 %shl99, %dec91
  br i1 %cmp100, label %if.then101, label %if.end102

if.then101:                                       ; preds = %while.body98
  br label %while.end131

if.end102:                                        ; preds = %while.body98
  %cmp103 = icmp slt i32 %shl99, %dec91
  br i1 %cmp103, label %land.lhs.true104, label %if.end117

land.lhs.true104:                                 ; preds = %if.end102
  %add105 = add nsw i32 %shl99, 1
  %idxprom106 = sext i32 %add105 to i64
  %arrayidx107 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom106
  %i21 = load i32, i32* %arrayidx107, align 4
  %idxprom108 = sext i32 %i21 to i64
  %arrayidx109 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom108
  %i22 = load i32, i32* %arrayidx109, align 4
  %idxprom110 = sext i32 %shl99 to i64
  %arrayidx111 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom110
  %i23 = load i32, i32* %arrayidx111, align 4
  %idxprom112 = sext i32 %i23 to i64
  %arrayidx113 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom112
  %i24 = load i32, i32* %arrayidx113, align 4
  %cmp114 = icmp slt i32 %i22, %i24
  br i1 %cmp114, label %if.then115, label %if.end117

if.then115:                                       ; preds = %land.lhs.true104
  %inc116 = add nsw i32 %shl99, 1
  br label %if.end117

if.end117:                                        ; preds = %if.then115, %land.lhs.true104, %if.end102
  %yy93.0 = phi i32 [ %inc116, %if.then115 ], [ %shl99, %land.lhs.true104 ], [ %shl99, %if.end102 ]
  %idxprom118 = sext i32 %i20 to i64
  %arrayidx119 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom118
  %i25 = load i32, i32* %arrayidx119, align 4
  %idxprom120 = sext i32 %yy93.0 to i64
  %arrayidx121 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom120
  %i26 = load i32, i32* %arrayidx121, align 4
  %idxprom122 = sext i32 %i26 to i64
  %arrayidx123 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom122
  %i27 = load i32, i32* %arrayidx123, align 4
  %cmp124 = icmp slt i32 %i25, %i27
  br i1 %cmp124, label %if.then125, label %if.end126

if.then125:                                       ; preds = %if.end117
  br label %while.end131

if.end126:                                        ; preds = %if.end117
  %idxprom127 = sext i32 %yy93.0 to i64
  %arrayidx128 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom127
  %i28 = load i32, i32* %arrayidx128, align 4
  %idxprom129 = sext i32 %zz92.0 to i64
  %arrayidx130 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom129
  store i32 %i28, i32* %arrayidx130, align 4
  br label %while.body98

while.end131:                                     ; preds = %if.then125, %if.then101
  %idxprom132 = sext i32 %zz92.0 to i64
  %arrayidx133 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom132
  store i32 %i20, i32* %arrayidx133, align 4
  %inc134 = add nsw i32 %nNodes.0, 1
  %idxprom135 = sext i32 %i18 to i64
  %arrayidx136 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom135
  store i32 %inc134, i32* %arrayidx136, align 4
  %idxprom137 = sext i32 %i7 to i64
  %arrayidx138 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom137
  store i32 %inc134, i32* %arrayidx138, align 4
  %idxprom139 = sext i32 %i7 to i64
  %arrayidx140 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom139
  %i29 = load i32, i32* %arrayidx140, align 4
  %and = and i32 %i29, -256
  %idxprom141 = sext i32 %i18 to i64
  %arrayidx142 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom141
  %i30 = load i32, i32* %arrayidx142, align 4
  %and143 = and i32 %i30, -256
  %add144 = add i32 %and, %and143
  %idxprom145 = sext i32 %i7 to i64
  %arrayidx146 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom145
  %i31 = load i32, i32* %arrayidx146, align 4
  %and147 = and i32 %i31, 255
  %idxprom148 = sext i32 %i18 to i64
  %arrayidx149 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom148
  %i32 = load i32, i32* %arrayidx149, align 4
  %and150 = and i32 %i32, 255
  %cmp151 = icmp sgt i32 %and147, %and150
  br i1 %cmp151, label %cond.true152, label %cond.false156

cond.true152:                                     ; preds = %while.end131
  %idxprom153 = sext i32 %i7 to i64
  %arrayidx154 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom153
  %i33 = load i32, i32* %arrayidx154, align 4
  %and155 = and i32 %i33, 255
  br label %cond.end160

cond.false156:                                    ; preds = %while.end131
  %idxprom157 = sext i32 %i18 to i64
  %arrayidx158 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom157
  %i34 = load i32, i32* %arrayidx158, align 4
  %and159 = and i32 %i34, 255
  br label %cond.end160

cond.end160:                                      ; preds = %cond.false156, %cond.true152
  %cond161 = phi i32 [ %and155, %cond.true152 ], [ %and159, %cond.false156 ]
  %add162 = add nsw i32 1, %cond161
  %or = or i32 %add144, %add162
  %idxprom163 = sext i32 %inc134 to i64
  %arrayidx164 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom163
  store i32 %or, i32* %arrayidx164, align 4
  %idxprom165 = sext i32 %inc134 to i64
  %arrayidx166 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom165
  store i32 -1, i32* %arrayidx166, align 4
  %inc167 = add nsw i32 %dec91, 1
  %idxprom168 = sext i32 %inc167 to i64
  %arrayidx169 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom168
  store i32 %inc134, i32* %arrayidx169, align 4
  %idxprom172 = sext i32 %inc167 to i64
  %arrayidx173 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom172
  %i35 = load i32, i32* %arrayidx173, align 4
  br label %while.cond174

while.cond174:                                    ; preds = %while.body183, %cond.end160
  %zz170.0 = phi i32 [ %inc167, %cond.end160 ], [ %shr189, %while.body183 ]
  %idxprom175 = sext i32 %i35 to i64
  %arrayidx176 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom175
  %i36 = load i32, i32* %arrayidx176, align 4
  %shr177 = ashr i32 %zz170.0, 1
  %idxprom178 = sext i32 %shr177 to i64
  %arrayidx179 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom178
  %i37 = load i32, i32* %arrayidx179, align 4
  %idxprom180 = sext i32 %i37 to i64
  %arrayidx181 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom180
  %i38 = load i32, i32* %arrayidx181, align 4
  %cmp182 = icmp slt i32 %i36, %i38
  br i1 %cmp182, label %while.body183, label %while.end190

while.body183:                                    ; preds = %while.cond174
  %shr184 = ashr i32 %zz170.0, 1
  %idxprom185 = sext i32 %shr184 to i64
  %arrayidx186 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom185
  %i39 = load i32, i32* %arrayidx186, align 4
  %idxprom187 = sext i32 %zz170.0 to i64
  %arrayidx188 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom187
  store i32 %i39, i32* %arrayidx188, align 4
  %shr189 = ashr i32 %zz170.0, 1
  br label %while.cond174

while.end190:                                     ; preds = %while.cond174
  %idxprom191 = sext i32 %zz170.0 to i64
  %arrayidx192 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom191
  store i32 %i35, i32* %arrayidx192, align 4
  br label %while.cond40

while.end193:                                     ; preds = %while.cond40
  %cmp194 = icmp slt i32 %nNodes.0, 516
  br i1 %cmp194, label %if.end196, label %if.then195

if.then195:                                       ; preds = %while.end193
  call void @BZ2_bz__AssertH__fail(i32 2002)
  br label %if.end196

if.end196:                                        ; preds = %if.then195, %while.end193
  br label %for.cond197

for.cond197:                                      ; preds = %for.inc215, %if.end196
  %tooLong.0 = phi i8 [ 0, %if.end196 ], [ %tooLong.1, %for.inc215 ]
  %i.2 = phi i32 [ 1, %if.end196 ], [ %inc216, %for.inc215 ]
  %cmp198 = icmp sle i32 %i.2, %alphaSize
  br i1 %cmp198, label %for.body199, label %for.end217

for.body199:                                      ; preds = %for.cond197
  br label %while.cond200

while.cond200:                                    ; preds = %while.body204, %for.body199
  %k.0 = phi i32 [ %i.2, %for.body199 ], [ %i41, %while.body204 ]
  %j.0 = phi i32 [ 0, %for.body199 ], [ %inc207, %while.body204 ]
  %idxprom201 = sext i32 %k.0 to i64
  %arrayidx202 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom201
  %i40 = load i32, i32* %arrayidx202, align 4
  %cmp203 = icmp sge i32 %i40, 0
  br i1 %cmp203, label %while.body204, label %while.end208

while.body204:                                    ; preds = %while.cond200
  %idxprom205 = sext i32 %k.0 to i64
  %arrayidx206 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom205
  %i41 = load i32, i32* %arrayidx206, align 4
  %inc207 = add nsw i32 %j.0, 1
  br label %while.cond200

while.end208:                                     ; preds = %while.cond200
  %conv = trunc i32 %j.0 to i8
  %sub = sub nsw i32 %i.2, 1
  %idxprom209 = sext i32 %sub to i64
  %arrayidx210 = getelementptr inbounds i8, i8* %len, i64 %idxprom209
  store i8 %conv, i8* %arrayidx210, align 1
  %cmp211 = icmp sgt i32 %j.0, %maxLen
  br i1 %cmp211, label %if.then213, label %if.end214

if.then213:                                       ; preds = %while.end208
  br label %if.end214

if.end214:                                        ; preds = %if.then213, %while.end208
  %tooLong.1 = phi i8 [ 1, %if.then213 ], [ %tooLong.0, %while.end208 ]
  br label %for.inc215

for.inc215:                                       ; preds = %if.end214
  %inc216 = add nsw i32 %i.2, 1
  br label %for.cond197

for.end217:                                       ; preds = %for.cond197
  %tobool = icmp ne i8 %tooLong.0, 0
  br i1 %tobool, label %if.end219, label %if.then218

if.then218:                                       ; preds = %for.end217
  br label %while.end234

if.end219:                                        ; preds = %for.end217
  br label %for.cond220

for.cond220:                                      ; preds = %for.inc231, %if.end219
  %i.3 = phi i32 [ 1, %if.end219 ], [ %inc232, %for.inc231 ]
  %cmp221 = icmp sle i32 %i.3, %alphaSize
  br i1 %cmp221, label %for.body223, label %for.end233

for.body223:                                      ; preds = %for.cond220
  %idxprom224 = sext i32 %i.3 to i64
  %arrayidx225 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom224
  %i42 = load i32, i32* %arrayidx225, align 4
  %shr226 = ashr i32 %i42, 8
  %div = sdiv i32 %shr226, 2
  %add227 = add nsw i32 1, %div
  %shl228 = shl i32 %add227, 8
  %idxprom229 = sext i32 %i.3 to i64
  %arrayidx230 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom229
  store i32 %shl228, i32* %arrayidx230, align 4
  br label %for.inc231

for.inc231:                                       ; preds = %for.body223
  %inc232 = add nsw i32 %i.3, 1
  br label %for.cond220

for.end233:                                       ; preds = %for.cond220
  br label %while.body

while.end234:                                     ; preds = %if.then218
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_hbAssignCodes(i32* %code, i8* %length, i32 %minLen, i32 %maxLen, i32 %alphaSize) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %entry
  %n.0 = phi i32 [ %minLen, %entry ], [ %inc10, %for.inc9 ]
  %vec.0 = phi i32 [ 0, %entry ], [ %shl, %for.inc9 ]
  %cmp = icmp sle i32 %n.0, %maxLen
  br i1 %cmp, label %for.body, label %for.end11

for.body:                                         ; preds = %for.cond
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %vec.1 = phi i32 [ %vec.0, %for.body ], [ %vec.2, %for.inc ]
  %i.0 = phi i32 [ 0, %for.body ], [ %inc8, %for.inc ]
  %cmp2 = icmp slt i32 %i.0, %alphaSize
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %length, i64 %idxprom
  %i = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %i to i32
  %cmp4 = icmp eq i32 %conv, %n.0
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3
  %idxprom6 = sext i32 %i.0 to i64
  %arrayidx7 = getelementptr inbounds i32, i32* %code, i64 %idxprom6
  store i32 %vec.1, i32* %arrayidx7, align 4
  %inc = add nsw i32 %vec.1, 1
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body3
  %vec.2 = phi i32 [ %inc, %if.then ], [ %vec.1, %for.body3 ]
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %inc8 = add nsw i32 %i.0, 1
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  %shl = shl i32 %vec.1, 1
  br label %for.inc9

for.inc9:                                         ; preds = %for.end
  %inc10 = add nsw i32 %n.0, 1
  br label %for.cond

for.end11:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_hbCreateDecodeTables(i32* %limit, i32* %base, i32* %perm, i8* %length, i32 %minLen, i32 %maxLen, i32 %alphaSize) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %entry
  %pp.0 = phi i32 [ 0, %entry ], [ %pp.1, %for.inc9 ]
  %i.0 = phi i32 [ %minLen, %entry ], [ %inc10, %for.inc9 ]
  %cmp = icmp sle i32 %i.0, %maxLen
  br i1 %cmp, label %for.body, label %for.end11

for.body:                                         ; preds = %for.cond
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %pp.1 = phi i32 [ %pp.0, %for.body ], [ %pp.2, %for.inc ]
  %j.0 = phi i32 [ 0, %for.body ], [ %inc8, %for.inc ]
  %cmp2 = icmp slt i32 %j.0, %alphaSize
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %idxprom = sext i32 %j.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %length, i64 %idxprom
  %i = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %i to i32
  %cmp4 = icmp eq i32 %conv, %i.0
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3
  %idxprom6 = sext i32 %pp.1 to i64
  %arrayidx7 = getelementptr inbounds i32, i32* %perm, i64 %idxprom6
  store i32 %j.0, i32* %arrayidx7, align 4
  %inc = add nsw i32 %pp.1, 1
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body3
  %pp.2 = phi i32 [ %inc, %if.then ], [ %pp.1, %for.body3 ]
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %inc8 = add nsw i32 %j.0, 1
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc9

for.inc9:                                         ; preds = %for.end
  %inc10 = add nsw i32 %i.0, 1
  br label %for.cond

for.end11:                                        ; preds = %for.cond
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc18, %for.end11
  %i.1 = phi i32 [ 0, %for.end11 ], [ %inc19, %for.inc18 ]
  %cmp13 = icmp slt i32 %i.1, 23
  br i1 %cmp13, label %for.body15, label %for.end20

for.body15:                                       ; preds = %for.cond12
  %idxprom16 = sext i32 %i.1 to i64
  %arrayidx17 = getelementptr inbounds i32, i32* %base, i64 %idxprom16
  store i32 0, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body15
  %inc19 = add nsw i32 %i.1, 1
  br label %for.cond12

for.end20:                                        ; preds = %for.cond12
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc31, %for.end20
  %i.2 = phi i32 [ 0, %for.end20 ], [ %inc32, %for.inc31 ]
  %cmp22 = icmp slt i32 %i.2, %alphaSize
  br i1 %cmp22, label %for.body24, label %for.end33

for.body24:                                       ; preds = %for.cond21
  %idxprom25 = sext i32 %i.2 to i64
  %arrayidx26 = getelementptr inbounds i8, i8* %length, i64 %idxprom25
  %i1 = load i8, i8* %arrayidx26, align 1
  %conv27 = zext i8 %i1 to i32
  %add = add nsw i32 %conv27, 1
  %idxprom28 = sext i32 %add to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %base, i64 %idxprom28
  %i2 = load i32, i32* %arrayidx29, align 4
  %inc30 = add nsw i32 %i2, 1
  store i32 %inc30, i32* %arrayidx29, align 4
  br label %for.inc31

for.inc31:                                        ; preds = %for.body24
  %inc32 = add nsw i32 %i.2, 1
  br label %for.cond21

for.end33:                                        ; preds = %for.cond21
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc43, %for.end33
  %i.3 = phi i32 [ 1, %for.end33 ], [ %inc44, %for.inc43 ]
  %cmp35 = icmp slt i32 %i.3, 23
  br i1 %cmp35, label %for.body37, label %for.end45

for.body37:                                       ; preds = %for.cond34
  %sub = sub nsw i32 %i.3, 1
  %idxprom38 = sext i32 %sub to i64
  %arrayidx39 = getelementptr inbounds i32, i32* %base, i64 %idxprom38
  %i3 = load i32, i32* %arrayidx39, align 4
  %idxprom40 = sext i32 %i.3 to i64
  %arrayidx41 = getelementptr inbounds i32, i32* %base, i64 %idxprom40
  %i4 = load i32, i32* %arrayidx41, align 4
  %add42 = add nsw i32 %i4, %i3
  store i32 %add42, i32* %arrayidx41, align 4
  br label %for.inc43

for.inc43:                                        ; preds = %for.body37
  %inc44 = add nsw i32 %i.3, 1
  br label %for.cond34

for.end45:                                        ; preds = %for.cond34
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc52, %for.end45
  %i.4 = phi i32 [ 0, %for.end45 ], [ %inc53, %for.inc52 ]
  %cmp47 = icmp slt i32 %i.4, 23
  br i1 %cmp47, label %for.body49, label %for.end54

for.body49:                                       ; preds = %for.cond46
  %idxprom50 = sext i32 %i.4 to i64
  %arrayidx51 = getelementptr inbounds i32, i32* %limit, i64 %idxprom50
  store i32 0, i32* %arrayidx51, align 4
  br label %for.inc52

for.inc52:                                        ; preds = %for.body49
  %inc53 = add nsw i32 %i.4, 1
  br label %for.cond46

for.end54:                                        ; preds = %for.cond46
  br label %for.cond55

for.cond55:                                       ; preds = %for.inc69, %for.end54
  %i.5 = phi i32 [ %minLen, %for.end54 ], [ %inc70, %for.inc69 ]
  %vec.0 = phi i32 [ 0, %for.end54 ], [ %shl, %for.inc69 ]
  %cmp56 = icmp sle i32 %i.5, %maxLen
  br i1 %cmp56, label %for.body58, label %for.end71

for.body58:                                       ; preds = %for.cond55
  %add59 = add nsw i32 %i.5, 1
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds i32, i32* %base, i64 %idxprom60
  %i5 = load i32, i32* %arrayidx61, align 4
  %idxprom62 = sext i32 %i.5 to i64
  %arrayidx63 = getelementptr inbounds i32, i32* %base, i64 %idxprom62
  %i6 = load i32, i32* %arrayidx63, align 4
  %sub64 = sub nsw i32 %i5, %i6
  %add65 = add nsw i32 %vec.0, %sub64
  %sub66 = sub nsw i32 %add65, 1
  %idxprom67 = sext i32 %i.5 to i64
  %arrayidx68 = getelementptr inbounds i32, i32* %limit, i64 %idxprom67
  store i32 %sub66, i32* %arrayidx68, align 4
  %shl = shl i32 %add65, 1
  br label %for.inc69

for.inc69:                                        ; preds = %for.body58
  %inc70 = add nsw i32 %i.5, 1
  br label %for.cond55

for.end71:                                        ; preds = %for.cond55
  %add72 = add nsw i32 %minLen, 1
  br label %for.cond73

for.cond73:                                       ; preds = %for.inc87, %for.end71
  %i.6 = phi i32 [ %add72, %for.end71 ], [ %inc88, %for.inc87 ]
  %cmp74 = icmp sle i32 %i.6, %maxLen
  br i1 %cmp74, label %for.body76, label %for.end89

for.body76:                                       ; preds = %for.cond73
  %sub77 = sub nsw i32 %i.6, 1
  %idxprom78 = sext i32 %sub77 to i64
  %arrayidx79 = getelementptr inbounds i32, i32* %limit, i64 %idxprom78
  %i7 = load i32, i32* %arrayidx79, align 4
  %add80 = add nsw i32 %i7, 1
  %shl81 = shl i32 %add80, 1
  %idxprom82 = sext i32 %i.6 to i64
  %arrayidx83 = getelementptr inbounds i32, i32* %base, i64 %idxprom82
  %i8 = load i32, i32* %arrayidx83, align 4
  %sub84 = sub nsw i32 %shl81, %i8
  %idxprom85 = sext i32 %i.6 to i64
  %arrayidx86 = getelementptr inbounds i32, i32* %base, i64 %idxprom85
  store i32 %sub84, i32* %arrayidx86, align 4
  br label %for.inc87

for.inc87:                                        ; preds = %for.body76
  %inc88 = add nsw i32 %i.6, 1
  br label %for.cond73

for.end89:                                        ; preds = %for.cond73
  ret void
}

attributes #0 = { noinline nounwind uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #3 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind readnone willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readnone willreturn }
attributes #11 = { nounwind readonly willreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"Ubuntu clang version 12.0.1-8build1"}
!1 = !{i32 1, !"wchar_size", i32 4}
