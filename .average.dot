digraph "CFG for 'average' function" {
	label="CFG for 'average' function";

	Node0x10daa80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{entry:\l  %num.addr = alloca i32, align 4\l  %valist = alloca [1 x %struct.__va_list_tag], align 16\l  %sum = alloca double, align 8\l  %i = alloca i32, align 4\l  store i32 %num, i32* %num.addr, align 4\l  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !12, metadata\l... !DIExpression()), !dbg !13\l  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %valist,\l... metadata !14, metadata !DIExpression()), !dbg !31\l  call void @llvm.dbg.declare(metadata double* %sum, metadata !32, metadata\l... !DIExpression()), !dbg !33\l  store double 0.000000e+00, double* %sum, align 8, !dbg !33\l  call void @llvm.dbg.declare(metadata i32* %i, metadata !34, metadata\l... !DIExpression()), !dbg !35\l  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x\l... %struct.__va_list_tag]* %valist, i64 0, i64 0, !dbg !36\l  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !36\l  call void @llvm.va_start(i8* %arraydecay1), !dbg !36\l  store i32 0, i32* %i, align 4, !dbg !37\l  br label %for.cond, !dbg !39\l}"];
	Node0x10daa80 -> Node0x10de970;
	Node0x10de970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond:                                         \l  %0 = load i32, i32* %i, align 4, !dbg !40\l  %1 = load i32, i32* %num.addr, align 4, !dbg !42\l  %cmp = icmp slt i32 %0, %1, !dbg !43\l  br i1 %cmp, label %for.body, label %for.end, !dbg !44\l|{<s0>T|<s1>F}}"];
	Node0x10de970:s0 -> Node0x10df0f0;
	Node0x10de970:s1 -> Node0x10df170;
	Node0x10df0f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body:                                         \l  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x\l... %struct.__va_list_tag]* %valist, i64 0, i64 0, !dbg !45\l  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag,\l... %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !45\l  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !45\l  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !45\l  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !45\l|{<s0>T|<s1>F}}"];
	Node0x10df0f0:s0 -> Node0x10e0050;
	Node0x10df0f0:s1 -> Node0x10e00d0;
	Node0x10e0050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{vaarg.in_reg:                                     \l  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag*\l... %arraydecay2, i32 0, i32 3, !dbg !45\l  %reg_save_area = load i8*, i8** %2, align 16, !dbg !45\l  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !45\l  %4 = bitcast i8* %3 to i32*, !dbg !45\l  %5 = add i32 %gp_offset, 8, !dbg !45\l  store i32 %5, i32* %gp_offset_p, align 16, !dbg !45\l  br label %vaarg.end, !dbg !45\l}"];
	Node0x10e0050 -> Node0x10e06a0;
	Node0x10e00d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{vaarg.in_mem:                                     \l  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag,\l... %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !45\l  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !45\l  %6 = bitcast i8* %overflow_arg_area to i32*, !dbg !45\l  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8,\l... !dbg !45\l  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg\l... !45\l  br label %vaarg.end, !dbg !45\l}"];
	Node0x10e00d0 -> Node0x10e06a0;
	Node0x10e06a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{vaarg.end:                                        \l  %vaarg.addr = phi i32* [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !45\l  %7 = load i32, i32* %vaarg.addr, align 4, !dbg !45\l  %conv = sitofp i32 %7 to double, !dbg !45\l  %8 = load double, double* %sum, align 8, !dbg !47\l  %add = fadd double %8, %conv, !dbg !47\l  store double %add, double* %sum, align 8, !dbg !47\l  br label %for.inc, !dbg !48\l}"];
	Node0x10e06a0 -> Node0x10e0530;
	Node0x10e0530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc:                                          \l  %9 = load i32, i32* %i, align 4, !dbg !49\l  %inc = add nsw i32 %9, 1, !dbg !49\l  store i32 %inc, i32* %i, align 4, !dbg !49\l  br label %for.cond, !dbg !50, !llvm.loop !51\l}"];
	Node0x10e0530 -> Node0x10de970;
	Node0x10df170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end:                                          \l  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x\l... %struct.__va_list_tag]* %valist, i64 0, i64 0, !dbg !54\l  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !54\l  call void @llvm.va_end(i8* %arraydecay34), !dbg !54\l  %10 = load double, double* %sum, align 8, !dbg !55\l  %11 = load i32, i32* %num.addr, align 4, !dbg !56\l  %conv5 = sitofp i32 %11 to double, !dbg !56\l  %div = fdiv double %10, %conv5, !dbg !57\l  ret double %div, !dbg !58\l}"];
}
